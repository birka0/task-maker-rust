var searchIndex = JSON.parse('{\
"task_maker":{"doc":"The new cmsMake!","t":[0,5,5,0,8,10,10,0,17,4,13,13,5,5,0,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,13,13,3,12,12,12,12,3,12,5,5,11,11,11,0,4,13,13,6,5,5,5,5,0,5,0,5,5,3,5,0,5,0,17,5,5,4,13,13,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["detect_format","find_task","getcwd","error","NiceError","nice_expect","nice_expect_with","local","VERSION","Evaluation","Done","Clean","run_evaluation","main_local","opt","Opt","task_dir","ui","keep_sandboxes","dry_run","print_dag","no_cache","exclusive","extra_time","copy_exe","copy_logs","filter","solution","seed","max_depth","clean","store_dir","max_cache","min_cache","num_cores","booklet_solutions","no_statement","verbose","evaluate_on","skip_sanity_checks","name","remote","task_info","dont_panic","sandbox","Remote","Server","Worker","ServerOptions","client_addr","worker_addr","client_password","worker_password","WorkerOptions","server_addr","skip_sanity_checks_long_help","no_cache_long_help","to_config","store_dir","enable_log","print_dag","Node","Execution","File","Edge","print_dag","node_id","node_label","render_graph","remote","connect_to_remote_server","sandbox","run_sandbox","main_sandbox","SelfExecSandboxRunner","self_exec_sandbox_internal","server","main_server","worker","VERSION","main_worker","run_evaluation","Evaluation","Done","Clean","print_dag","main_server","main_worker","main","dont_panic","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","clone","clone","clone","default","fmt","fmt","fmt","fmt","fmt","clap","from_clap","clap","from_clap","clap","from_clap","clap","from_clap","augment_clap","is_subcommand","augment_clap","from_subcommand","is_subcommand","augment_clap","is_subcommand","augment_clap","is_subcommand","run"],"q":["task_maker","task_maker::detect_format","","task_maker","task_maker::error","","","task_maker","task_maker::local","","","","","","task_maker","task_maker::opt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","task_maker","task_maker::print_dag","","","","","","","","task_maker","task_maker::remote","task_maker","task_maker::sandbox","","","","task_maker","task_maker::server","task_maker","task_maker::worker","","task_maker","","","","","","","","","task_maker::local","","","","","","","","task_maker::opt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","task_maker::print_dag","","","","","","","","","","task_maker::sandbox","","","","","","","","task_maker::opt","","task_maker::print_dag","task_maker::sandbox","task_maker::opt","","","","task_maker::print_dag","task_maker::opt","","","","","","","","","","","","","","","","","task_maker::sandbox"],"d":["","Search for a valid task directory, starting from base and …","Return the current working directory.","","Adds methods for failing without panic. Like <code>expect</code> but …","Fail exiting with <code>1</code> if the value is not present, printing …","Fail exiting with <code>1</code> if the value is not present, printing …","","Version of task-maker","The result of an evaluation.","The evaluation has completed.","The task directory has been cleaned.","Run the local evaluation of some actions (either building …","Entry point of the local execution.","","","Directory of the task to evaluate","Which UI to use, available UIS are: print, raw, curses, …","Keep all the sandbox directories","Do not write any file inside the task directory","Print the evaluation DAG in DOT format","Disable the cache for this comma separated list of tags","Do not run in parallel time critical executions on the …","Give to the solution some extra time before being killed","Copy the executables to the bin/ folder","Copy the logs of some executions to the bin/logs/ folder","Execute only the solutions whose names start with the …","Evaluate only the solution with the specified path","Force this seed instead of a random one in Terry.","Look at most for this number of parents for searching the …","Clear the task directory and exit","Where to store the storage files, including the cache","Maximum size of the storage directory, in MiB","When the storage is flushed, this is the new maximum …","The number of CPU cores to use","Include the solutions in the booklet","Do not build the statement files and the booklets","Verbose mode (-v, -vv, -vvv, etc.). Note that it does not …","Run the evaluation on a remote server instead of locally","List of sanity checks to skip.","The name to use for the workers or for the client in …","Options for spawning a client or a server.","Show task information","Wipe the internal storage of task-maker","Run the sandbox instead of the normal task-maker.","Options for spawning a client or a server.","Spawn a server instead of the normal task-maker","Spawn a worker instead of the normal task-maker","","Address to bind the server on for listening for the …","Address to bind the server on for listening for the …","Password for the connection of the clients","Password for the connection of the workers","","Address to use to connect to a remote server","Returns the long-help for the “skip sanity checks” …","Returns the long-help for the –no-cache option.","Make an <code>EvaluationConfig</code> from this command line options.","Get the store directory of this configuration. If nothing …","","","A node in the printed graph.","The node is an Execution.","The node is a File.","An edge of the printed graph, linking 2 nodes.","Print to <code>stdout</code> the nodes of this <code>ExecutionDAG</code> in DOT …","Obtain the identifier of the node for the DOT file.","Obtain the label of the node for the DOT format.","Print to <code>stdout</code> the nodes and the edges in the DOT …","","Parse the server url address and try to connect to that …","","Actually parse the input and return the result.","Run the sandbox for an execution.","Run the sandbox integrated in the task-maker binary, by …","Actually run the sandbox, but with a return type that …","","Entry point for the server.","","Version of task-maker","Entry point for the worker.","Run the local evaluation of some actions (either building …","The result of an evaluation.","The evaluation has completed.","The task directory has been cleaned.","Print to <code>stdout</code> the nodes of this <code>ExecutionDAG</code> in DOT …","Entry point for the server.","Entry point for the worker.","","Handler of the <code>--dont-panic</code> flag. Passing the store …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,4,4,0,5,5,5,5,0,6,0,0,3,3,3,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,5,6,7,8,3,4,5,6,7,3,3,4,4,5,5,6,6,3,3,4,4,4,5,5,6,6,8],"f":[null,[[["u32",15],["evaluationconfig",3],["pathbuf",3],["into",8]],[["box",3],["result",4],["error",3]]],[[],["pathbuf",3]],null,null,[[["str",15]]],[[["fnonce",8]]],null,null,null,null,null,[[["opt",3]],[["result",4],["evaluation",4],["error",3]]],[[["opt",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[],["str",15]],[[],["evaluationconfig",3]],[[],["pathbuf",3]],[[]],null,null,null,null,null,[[["executiondag",3]]],[[["node",4]],["string",3]],[[["node",4]],["string",3]],[[["vec",3],["vec",3],["node",4]]],null,[[["asref",8],["str",15],["u16",15]],[["result",4],["error",3]]],null,[[],[["result",4],["error",3],["sandboxexecutionresult",3]]],[[]],null,[[["arc",3],["atomicu32",3],["sandboxconfiguration",3]],[["result",4],["rawsandboxresult",4],["error",3]]],null,[[["serveroptions",3],["opt",3]]],null,null,[[["opt",3],["workeroptions",3]]],[[["opt",3]],[["result",4],["evaluation",4],["error",3]]],null,null,null,[[["executiondag",3]]],[[["serveroptions",3],["opt",3]]],[[["opt",3],["workeroptions",3]]],[[]],[[["pathbuf",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["serveroptions",3]],[[],["workeroptions",3]],[[],["node",4]],[[],["selfexecsandboxrunner",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["app",3]],[[["argmatches",3]]],[[],["app",3]],[[["argmatches",3]]],[[],["app",3]],[[["argmatches",3]]],[[],["app",3]],[[["argmatches",3]]],[[["app",3]],["app",3]],[[],["bool",15]],[[["app",3]],["app",3]],[[],["option",4]],[[],["bool",15]],[[["app",3]],["app",3]],[[],["bool",15]],[[["app",3]],["app",3]],[[],["bool",15]],[[["arc",3],["atomicu32",3],["sandboxconfiguration",3]],["rawsandboxresult",4]]],"p":[[8,"NiceError"],[4,"Evaluation"],[3,"Opt"],[4,"Remote"],[3,"ServerOptions"],[3,"WorkerOptions"],[4,"Node"],[3,"SelfExecSandboxRunner"]]},\
"task_maker_cache":{"doc":"Crate for managing the cache of the executions of a DAG.","t":[3,4,13,13,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Cache","CacheResult","Miss","Hit","result","outputs","new","insert","get","is_cacheable","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","drop","fmt"],"q":["task_maker_cache","","","","task_maker_cache::CacheResult","","task_maker_cache","","","","","","","","","","","","","","","","","","",""],"d":["Handle the cached executions, loading and storing them to …","The result of a cache query, can be either successful (<code>Hit</code>…","The requested entry is not present in the cache.","The requested entry is present in the cache.","The result of the execution.","The outputs of the execution.","Make a new <code>Cache</code> stored in the specified cache directory. …","Insert a new entry inside the cache. They key is computed …","Search in the cache for a valid entry, returning a cache …","Checks whether a result is allowed in the cache.","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,2,2,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,3,3],"f":[null,null,null,null,null,null,[[["asref",8],["path",3]],[["result",4],["cache",3],["error",3]]],[[["executionresult",3],["executiongroup",3],["hashmap",3],["vec",3]]],[[["executiongroup",3],["hashmap",3],["filestore",3]],["cacheresult",4]],[[["executionresult",3]],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["formatter",3]],["result",6]]],"p":[[4,"CacheResult"],[13,"Hit"],[3,"Cache"]]},\
"task_maker_dag":{"doc":"DAG generation and resulting structures for <code>Execution</code>s and…","t":[4,13,13,13,3,12,12,12,12,12,12,4,13,12,12,12,13,12,12,12,3,12,12,12,3,12,12,12,12,6,6,6,6,6,6,3,12,4,13,13,3,12,12,3,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,4,13,13,13,13,13,13,13,13,3,12,12,12,12,3,12,12,12,12,12,12,7,6,6,3,12,3,12,12,12,12,6,6,3,12,12,12,3,12,12,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CacheMode","Everything","Nothing","Except","ExecutionDAGConfig","keep_sandboxes","dry_run","cache_mode","extra_time","copy_exe","copy_logs","ProvidedFile","LocalFile","file","key","local_path","Content","file","key","content","ExecutionDAGData","provided_files","execution_groups","config","ExecutionDAG","data","execution_callbacks","file_callbacks","urgent_files","ExecutionUuid","WorkerUuid","OnStartCallback","OnDoneCallback","OnSkipCallback","Priority","ExecutionTag","name","ExecutionCommand","System","Local","ExecutionInput","file","executable","ExecutionCallbacks","on_start","on_done","on_skip","Execution","uuid","description","command","args","stdin","stdout","stderr","capture_stdout","capture_stderr","inputs","outputs","env","limits","tag","priority","ExecutionLimits","cpu_time","sys_time","wall_time","memory","nproc","nofile","fsize","memlock","stack","read_only","mount_tmpfs","extra_readable_dirs","ExecutionStatus","Success","ReturnCode","Signal","TimeLimitExceeded","SysTimeLimitExceeded","WallTimeLimitExceeded","MemoryLimitExceeded","InternalError","ExecutionResourcesUsage","cpu_time","sys_time","wall_time","memory","ExecutionResult","status","was_killed","was_cached","resources","stdout","stderr","FIFO_SANDBOX_DIR","ExecutionGroupUuid","FifoUuid","Fifo","uuid","ExecutionGroup","uuid","description","executions","fifo","FileUuid","GetContentCallback","WriteToCallback","dest","executable","allow_failure","FileCallbacks","write_to","get_content","File","uuid","description","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","as_ref","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","type_script_ify","type_script_ify","type_script_ify","type_script_ify","new","provide_file","provide_content","add_execution","add_execution_group","write_file_to","write_file_to_allow_fail","get_file_content","on_execution_start","on_execution_done","on_execution_skip","config_mut","urgent_file","new","keep_sandboxes","dry_run","cache_mode","extra_time","copy_exe","copy_logs","try_from","unrestricted","cpu_time","sys_time","wall_time","memory","nproc","nofile","fsize","memlock","stack","read_only","mount_tmpfs","add_extra_readable_dir","is_success","is_internal_error","system","local","new","dependencies","outputs","args","stdin","stdout","stderr","capture_stdout","capture_stderr","input","output","env","limits_mut","config","tag","priority","status","sandbox_path","new","add_execution","new_fifo","priority","config","tag","new"],"q":["task_maker_dag","","","","","","","","","","","","","task_maker_dag::ProvidedFile","","","task_maker_dag","task_maker_dag::ProvidedFile","","","task_maker_dagd":["The setting of the cache level.","Use the cache as much as possible.","Never use the cache.","Use the cache except for these tags.","Configuration setting of an <code>ExecutionDAG</code>, some of the …","Keep the sandbox directory of each execution.","Do not write any file inside the task directory. This …","The cache mode for this DAG.","Extra time to give to the sandbox before killing the …","Whether to copy the executables of the compilation inside …","Whether to copy the log files of some interesting …","A wrapper around a <code>File</code> provided by the client, this …","A file that is provided by the disk, knowing its path.","The file handle.","The key of the file for the lookup in the <code>FileStore</code>.","Path to the file in the client.","A file that is provided from a in-memory buffer.","The file handle.","The key of the file for the lookup in the <code>FileStore</code>.","The content of the file.","Serializable part of the execution DAG: everything except …","All the files provided by the client.","All the executions to run.","The configuration of this DAG.","A computation DAG, this is not serializable because it …","Serializable part of the DAG with all the executions and …","Actual callbacks of the executions.","Actual callbacks of the files.","Set of the handles of the files that should be sent to …","The identifier of an execution, it’s globally unique …","The identifier of a worker, it’s globally unique and …","Type of the callback called when an <code>Execution</code> starts.","Type of the callback called when an <code>Execution</code> ends.","Type of the callback called when an <code>Execution</code> is skipped.","Type of the priority value of an <code>Execution</code>.","A tag on an <code>Execution</code>. Can be used to classify the …","The name of the tag.","Command of an <code>Execution</code> to execute.","A system command, the workers will search in their <code>$PATH</code> …","A command relative to the sandbox directory, not to be …","An input file of an <code>Execution</code>, can be marked as …","Uuid of the file.","Whether this file should be marked as executable.","The callbacks to be called when an event of an execution …","The callbacks called when the execution starts.","The callbacks called when the execution has completed.","The callbacks called when the execution has been skipped.","An <code>Execution</code> is a process that will be executed by a …","Uuid of the execution.","Description of the execution.","Which command to execute.","The list of command line arguments.","Optional standard input to pass to the program.","Optional standard output to capture.","Optional standard error to capture.","When not <code>None</code>, ask the sandbox to capture that many bytes …","When not <code>None</code>, ask the sandbox to capture that many bytes …","List of input files that should be put inside the sandbox.","List of the output files that should be capture from the …","Environment variables to set.","Limits on the execution.","The tag associated with this execution.","A priority index for this execution. Higher values …","Limits on an <code>Execution</code>. On some worker platforms some of …","Limit on the userspace cpu time of the process, in …","Limit on the kernels pace cpu time of the process, in …","Limit on the total time of execution, in seconds. This …","Limit on the number of KiB the process can use in any …","Limit on the number of threads/processes the process can …","Limit on the number of file descriptors the process can …","Maximum size of the files (in bytes) the process can …","RLIMIT_MEMLOCK","Limit on the stack size for the process. 0 means …","Whether the process in the sandbox is not allowed to …","Whether the process in the sandbox can use <code>/dev/null</code> and …","Extra directory that can be read inside the sandbox.","Status of a completed <code>Execution</code>.","The program exited with status 0 within the limits.","The program exited with a non-zero status code, which is …","The program stopped due to a signal, the number and the …","The program hasn’t exited within the time limit …","The program hasn’t exited within the sys time limit …","The program hasn’t exited within the wall time limit …","The program has exceeded the memory limit.","The sandbox failed to execute the program with the …","Resources used during the execution, note that on some …","Number of seconds the process used in user space.","Number of seconds the process used in kernel space.","Number of seconds from the start to the end of the …","Number of KiB used <em>at most</em> by the process.","The result of an <code>Execution</code>.","Status of the completed execution.","Whether the execution has been killed by the sandbox.","Whether the execution result come from the cache.","Resources used by the execution.","Captured standard output of the execution, if the capture …","Captured standard error of the execution, if the capture …","Directory inside the sandbox where to place all the pipes …","The identifier of an execution group, it’s globally …","The identifier of a Fifo pipe inside a group.","A First-in First-out channel for letting executions …","The UUID of this <code>Fifo</code>.","A group of executions that have to be executed …","The unique identifier of this group of executions.","A textual description of the group.","The list of executions to run.","The list of FIFO pipes to create for this group.","The identifier of a file, it’s globally unique and it …","Type of the callback called when a file is returned to …","Where to write the file to with some other information.","Destination path of the file to write.","Whether the file should be marked as executable.","Whether this file is valid even if the execution that …","The callbacks that will trigger when the file is ready.","Destination of the file if it has to be stored in the …","Callback to be called with the first bytes of the file.","An handle to a file in the evaluation, this only tracks …","Uuid of the file.","Description of the fileefault sane values for the execution limits, the limits …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an empty ExecutionDAG, without files and …","Provide a file for the computation.","Provide the content of a file for the computation.","Add an execution to the DAG.","Add an execution group to the DAG.","When <code>file</code> is ready it will be written to <code>path</code>. The file …","Same as <code>write_file_to</code> but allowing failures.","Call <code>callback</code> with the first <code>limit</code> bytes of the file when …","Add a callback that will be called when the execution …","Add a callback that will be called when the execution …","Add a callback that will be called when the execution is …","Get a mutable reference to the config of this DAG.","Mark a file as urgent. The server will try to send it as …","Make a new <code>ExecutionDAGConfig</code>.","Whether to keep the sandbox directory of each execution.","Whether to ignore all the subsequent calls to …","Set the cache mode for the executions of this DAG.","Set the extra time to give to the executions before being …","Set whether to copy the executables of the compilation …","Set whether to copy the log files of some interesting …","Make a <code>CacheMode</code> from the command line arguments:","Make an empty limits where all the limits are disabled. …","Set the cpu time limit in seconds.","Set the sys time limit in seconds.","Set the wall time limit in seconds.","Set the memory limit in KiB.","Set the maximum number of processes/threads.","Set the maximum number of opened file descriptors.","Set the maximum size of the files (in bytes) the process …","Set the memlock limit.","Set the stack limit.","Set whether the process in the sandbox is not allowed to …","Set whether the process in the sandbox can use <code>/dev/null</code> …","Add a directory to the list of additional readable …","Returns true only if it is <code>ExecutionStatus::Success</code>.","Returns true only if it is …","Make a new <code>ExecutionCommand::System</code>.","Make a new <code>ExecutionCommand::Local</code>.","Create a basic <code>Execution</code> with the default limits.","List of all the File dependencies of the execution, …","List of all the File produced by the execution, including …","Sets the command line arguments of the execution. Calling …","Bind the standard input to the specified file. Calling …","Handle to the standard output of the execution. This …","Handle to the standard error of the execution. This …","Tell the executor to include the first <code>count</code> bytes of the …","Tell the executor to include the first <code>count</code> bytes of the …","Bind a file inside the sandbox to the specified file. …","Handle to a file produced by the execution. This should …","Add an environment variable to the execution.","Get a mutable reference to the execution limits.","A reference to the configuration of the underlying DAG.","Set the tag of this <code>Execution</code>.","Set the priority of this <code>Execution</code>.","Compute the <code>ExecutionStatus</code> based on the result of the …","The path inside the sandbox that this pipe is mapped to.","Create an empty execution group.","Add a new execution to the group.","Create a new <code>Fifo</code> and return it.","Priority of this execution group. The actual value is …","A reference to the configuration of the underlying DAG.","The tag of one of the executions in this group.","Create a new file handle."],"i":[0,1,1,1,0,2,2,2,2,2,2,0,3,4,4,4,3,5,5,5,0,6,6,6,0,7,7,7,7,0,0,0,0,0,0,0,8,0,9,9,0,10,10,0,11,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,13,13,13,13,13,13,13,13,13,13,13,13,0,14,14,14,14,14,14,14,14,0,15,15,15,15,0,16,16,16,16,16,16,0,0,0,0,17,0,18,18,18,18,0,0,0,19,19,19,0,20,20,0,21,21,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,8,18,22,22,1,2,3,6,8,9,10,12,13,14,15,16,17,18,19,21,2,7,15,13,11,20,1,1,8,8,9,9,13,13,14,14,15,15,16,16,21,21,21,1,2,3,6,7,8,9,10,12,13,14,15,11,16,17,18,19,21,20,8,9,10,1,2,3,6,8,9,10,12,13,14,15,16,17,18,21,1,2,3,6,8,9,10,12,13,14,15,16,17,18,21,14,15,16,21,7,7,7,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,2,2,1,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,9,9,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,18,18,18,18,18,18,21],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["fileuuid",6]],[[["str",15]]],[[["execution",3]]],[[["file",3]]],[[["file",3]]],[[],["cachemode",4]],[[],["executiondagconfig",3]],[[],["providedfile",4]],[[],["executiondagdata",3]],[[],["executiontag",3]],[[],["executioncommand",4]],[[],["executioninput",3]],[[],["execution",3]],[[],["executionlimits",3]],[[],["executionstatus",4]],[[],["executionresourcesusage",3]],[[],["executionresult",3]],[[],["fifo",3]],[[],["executiongroup",3]],[[],["writetocallback",3]],[[],["file",3]],[[]],[[]],[[],["executionresourcesusage",3]],[[]],[[]],[[],["filecallbacks",3]],[[["cachemode",4]],["bool",15]],[[["cachemode",4]],["bool",15]],[[["executiontag",3]],["bool",15]],[[["executiontag",3]],["bool",15]],[[["executioncommand",4]],["bool",15]],[[["executioncommand",4]],["bool",15]],[[["executionlimits",3]],["bool",15]],[[["executionlimits",3]],["bool",15]],[[["executionstatus",4]],["bool",15]],[[["executionstatus",4]],["bool",15]],[[["executionresourcesusage",3]],["bool",15]],[[["executionresourcesusage",3]],["bool",15]],[[["executionresult",3]],["bool",15]],[[["executionresult",3]],["bool",15]],[[["file",3]],["bool",15]],[[["file",3]],["bool",15]],[[["file",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["cow",4],["str",15]]],[[],[["cow",4],["str",15]]],[[],[["cow",4],["str",15]]],[[],[["cow",4],["str",15]]],[[],["executiondag",3]],[[["into",8],["file",3],["pathbuf",3]],[["error",3],["result",4]]],[[["vec",3],["file",3],["u8",15]]],[[["execution",3]]],[[["executiongroup",3]]],[[["pathbuf",3],["into",8],["into",8],["bool",15],["fileuuid",6]]],[[["pathbuf",3],["into",8],["into",8],["bool",15],["fileuuid",6]]],[[["usize",15],["into",8],["fileuuid",6]]],[[["executionuuid",6]]],[[["executionuuid",6]]],[[["executionuuid",6]]],[[],["executiondagconfig",3]],[[["into",8],["fileuuid",6]]],[[],["executiondagconfig",3]],[[["bool",15]]],[[["bool",15]]],[[["cachemode",4]]],[[["f64",15]]],[[["bool",15]]],[[["bool",15]]],[[["option",4]],[["cachemode",4],["result",4],["error",3]]],[[],["executionlimits",3]],[[["f64",15]]],[[["f64",15]]],[[["f64",15]]],[[["u64",15]]],[[["u32",15]]],[[["u32",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["bool",15]]],[[["bool",15]]],[[["pathbuf",3],["into",8]]],[[],["bool",15]],[[],["bool",15]],[[["pathbuf",3],["into",8]],["executioncommand",4]],[[["pathbuf",3],["into",8]],["executioncommand",4]],[[["string",3],["into",8],["executioncommand",4]],["execution",3]],[[],[["vec",3],["fileuuid",6]]],[[],[["vec",3],["fileuuid",6]]],[[["intoiterator",8]]],[[["into",8],["fileuuid",6]]],[[],["file",3]],[[],["file",3]],[[["usize",15]]],[[["usize",15]]],[[["pathbuf",3],["into",8],["into",8],["bool",15],["fileuuid",6]]],[[["into",8],["pathbuf",3],["debug",8]],["file",3]],[[["string",3],["into",8]]],[[],["executionlimits",3]],[[],["executiondagconfig",3]],[[["executiontag",3]]],[[["priority",6]]],[[["u32",15],["executionresourcesusage",3],["option",4]],["executionstatus",4]],[[],["pathbuf",3]],[[["string",3],["into",8]],["executiongroup",3]],[[["execution",3]]],[[],["fifo",3]],[[],["priority",6]],[[],["executiondagconfig",3]],[[],[["option",4],["executiontag",3]]],[[["string",3],["into",8]],["file",3]]],"p":[[4,"CacheMode"],[3,"ExecutionDAGConfig"],[4,"ProvidedFile"],[13,"LocalFile"],[13,"Content"],[3,"ExecutionDAGData"],[3,"ExecutionDAG"],[3,"ExecutionTag"],[4,"ExecutionCommand"],[3,"ExecutionInput"],[3,"ExecutionCallbacks"],[3,"Execution"],[3,"ExecutionLimits"],[4,"ExecutionStatus"],[3,"ExecutionResourcesUsage"],[3,"ExecutionResult"],[3,"Fifo"],[3,"ExecutionGroup"],[3,"WriteToCallback"],[3,"FileCallbacks"],[3,"File"],[6,"FileUuid"]]},\
"task_maker_exec":{"doc":"DAG execution dispatching the tasks to the workers.","t":[0,3,12,3,4,13,12,12,4,13,13,0,4,13,12,12,13,13,13,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,4,13,13,13,13,13,3,11,3,11,11,3,3,12,12,12,3,12,12,12,3,12,12,12,4,13,13,3,8,10,3,3,3,12,12,3,3,12,12,12,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["executors","LocalExecutor","num_workers","RemoteExecutor","RemoteEntityMessage","Welcome","name","version","RemoteEntityMessageResponse","Accepted","Rejected","proto","ExecutorClientMessage","Evaluate","dag","callbacks","ProvideFile","AskFile","Stop","Status","ExecutorServerMessage","AskFile","ProvideFile","NotifyStart","NotifyDone","NotifySkip","Error","Status","Done","WorkerClientMessage","GetWork","WorkerDone","ProvideFile","AskFile","WorkerServerMessage","Work","KillJob","ProvideFile","AskFiles","Exit","ChannelFileIterator","new","ChannelFileSender","send","send_data","ExecutorClient","ExecutorStatus","connected_workers","ready_execs","waiting_execs","ExecutorWorkerStatus","uuid","name","current_job","WorkerCurrentJobStatus","job","client","duration","RawSandboxResult","Success","Error","ErrorSandboxRunner","SandboxRunner","run","SuccessSandboxRunner","UnsafeSandboxRunner","ClientInfo","uuid","name","Worker","WorkerConn","uuid","name","sender","receiver","derive_key_from_password","eval_dag_locally","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","run","run","run","next","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","eq","ne","eq","ne","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","type_script_ify","type_script_ify","type_script_ify","type_script_ify","evaluate","into_system_time","new","evaluate","new","start","new","new_with_channel","work"],"q":["task_maker_exec","task_maker_exec::executors","","","","","task_maker_exec::executors::RemoteEntityMessage","","task_maker_exec::executors","","","task_maker_exec","task_maker_exec::proto","","task_maker_exec::proto::ExecutorClientMessage","","task_maker_exec::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","task_maker_exec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","task_maker_exec::executors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","task_maker_exec::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","task_maker_exec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","task_maker_exec::proto","task_maker_exec","","","task_maker_exec::proto","","","","task_maker_exec","","","","","","","","","","","","","","","task_maker_exec::executors","","task_maker_exec::proto","","","","task_maker_exec","","","","","","","","","","task_maker_exec::executors","","task_maker_exec::proto","","","","task_maker_exec","","","","","task_maker_exec::executors","","task_maker_exec::proto","","","","task_maker_exec","","","","","","","","task_maker_exec::executors","","","","task_maker_exec","",""],"d":["The supported executors.","An Executor that runs locally by spawning a number of …","The number of local workers to spawn.","An executor that accepts remote connections from clients …","Message sent only by remote clients and workers for …","Tell the remote executor the name of the client or of the …","The name of the client or of the worker.","The required version of task-maker.","Message sent only by the server in response of a …","The server accepted the connection of the client, the …","The server rejected the connection of the client, the …","The protocol related structs and enums.","Messages that the client sends to the server.","The client is asking to evaluate a DAG.","The DAG to evaluate.","The list of the executions and files to keep track of.","The client is providing a file. After this message there …","The client is asking the server to send a file. After …","The client is asking to stop the evaluation. All the …","The client is asking for the server status. After this …","Messages that the server sends to the client.","The server needs the file with that Uuid. The client must …","The server is sending a file. After this message there is …","The execution has started on a worker.","The execution has completed with that result.","The execution has been skipped.","There was an error during the evaluation.","The server status as asked by the client.","The evaluation of the DAG is complete, this message will …","Messages sent by the workers to the server.","The worker is ready for some job. The worker will wait …","The worker completed the job with this result producing …","The worker is sending a file to the server. After this …","The worker needs a file from the server. The server …","Messages sent by the server to the worker.","The job the worker should do. Boxed to reduce the enum …","Stop the current worker sandbox if currently running the …","The file the workers as asked. After this message there …","The worker completed the execution and produced some …","Ask the worker to exit.","An iterator over the byte chunks sent during the file …","Create a new iterator over a receiver channel.","Utility function to send a file to a channel using …","Send a local file to a channel using <code>send_raw</code>.","Send the file content to a channel using <code>send_raw</code>.","This is a client of the <code>Executor</code>, the client is who sends …","The current status of the <code>Executor</code>, this is sent to the …","List of the connected workers with their uuid, name and …","Number of executions waiting for workers.","Number of executions waiting for dependencies.","Status of a worker of an <code>Executor</code>.","UUID of the worker.","Name of the worker.","What the worker is currently working on.","Information about the job the worker is currently doing.","The name of the job the worker is currently doing.","UUID and name of the client who owns the job.","Since when the job started.","Response of the internal implementation of the sandbox.","The sandbox has been executed successfully.","There was an error executing the sandbox.","A fake sandbox that don’t actually spawn anything and …","Something able to spawn a sandbox, wait for it to exit …","Spawn a sandbox with the provided configuration, set the …","A fake sandbox that don’t actually spawn anything and …","A fake sandbox that simply spawns the process and does …","Information about a client of the scheduler.","Unique identifier of the client.","The name of the client.","The worker is the component that receives the work from …","An handle of the connection to the worker.","The identifier of the worker.","The name of the worker.","The channel that sends messages to the worker.","The channel that receives messages from the server.","Derive the encryption key from a password string.","Evaluate a DAG locally spawning a new <code>LocalExecutor</code> with …egin the evaluation sending the DAG to the server, …","Convert a status based on a <code>Duration</code> (the one sent in the …","Make a new <code>LocalExecutor</code> based on a <code>FileStore</code> and ready …","Starts the Executor spawning the workers on new threads …","Make a new <code>RemoteExecutor</code>.","Start the executor binding the TCP sockets and waiting …","Make a new worker attached to a <code>FileStore</code>, will return a …","Make a new worker with an already connected channel.","The worker body, this function will block until the …"],"i":[0,0,1,0,0,2,3,3,0,4,4,0,0,5,6,6,5,5,5,5,0,7,7,7,7,7,7,7,7,0,8,8,8,8,0,9,9,9,9,9,0,10,0,11,11,0,0,12,12,12,0,13,13,13,0,14,14,14,0,15,15,0,0,16,0,0,0,17,17,0,0,18,18,18,18,0,0,19,19,19,19,19,19,19,19,14,14,14,14,14,14,14,14,14,14,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,12,1,1,1,1,1,1,1,1,20,20,20,20,20,20,20,20,2,2,2,2,2,2,2,2,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,15,15,15,15,15,15,15,15,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,17,17,17,17,17,17,17,17,17,17,24,24,24,24,24,24,24,24,24,18,18,18,18,18,18,18,18,18,21,22,23,10,14,13,12,5,7,8,9,17,21,22,23,14,14,13,13,12,12,17,17,14,13,12,2,4,5,7,8,9,15,21,22,23,17,18,24,14,13,12,2,4,5,7,8,9,15,17,14,13,12,2,4,5,7,8,9,15,17,14,13,12,17,19,14,1,1,20,20,24,24,24],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["channelreceiver",3]],["channelfileiterator",3]],null,[[["channelsender",3],["asref",8],["path",3]],[["result",4],["error",3]]],[[["vec",3],["channelsender",3],["u8",15]],[["result",4],["error",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["atomicu32",3],["sandboxconfiguration",3],["arc",3]],["rawsandboxresult",4]],null,null,null,null,null,null,null,null,null,null,null,[[["asref",8],["str",15]]],[[["usize",15],["executiondag",3],["pathbuf",3],["u64",15],["into",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["atomicu32",3],["sandboxconfiguration",3],["arc",3]],["rawsandboxresult",4]],[[["atomicu32",3],["sandboxconfiguration",3],["arc",3]],["rawsandboxresult",4]],[[["atomicu32",3],["sandboxconfiguration",3],["arc",3]],["rawsandboxresult",4]],[[],["option",4]],[[],["workercurrentjobstatus",3]],[[],["executorworkerstatus",3]],[[],["executorstatus",3]],[[],["executorclientmessage",4]],[[],["executorservermessage",4]],[[],["workerclientmessage",4]],[[],["workerservermessage",4]],[[],["clientinfo",3]],[[],["errorsandboxrunner",3]],[[],["successsandboxrunner",3]],[[],["unsafesandboxrunner",3]],[[["workercurrentjobstatus",3]],["bool",15]],[[["workercurrentjobstatus",3]],["bool",15]],[[["executorworkerstatus",3]],["bool",15]],[[["executorworkerstatus",3]],["bool",15]],[[["executorstatus",3]],["bool",15]],[[["executorstatus",3]],["bool",15]],[[["clientinfo",3]],["bool",15]],[[["clientinfo",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["cow",4],["str",15]]],[[],[["cow",4],["str",15]]],[[],[["cow",4],["str",15]]],[[],[["cow",4],["str",15]]],[[["executiondag",3],["executorclientmessage",4],["channelsender",3],["channelreceiver",3],["filestore",3],["arc",3]],[["result",4],["error",3]]],[[],[["workercurrentjobstatus",3],["systemtime",3]]],[[["usize",15],["pathbuf",3],["arc",3],["filestore",3],["into",8]],["localexecutor",3]],[[["cache",3],["channelsender",3],["executorclientmessage",4],["executorservermessage",4],["channelreceiver",3]],[["result",4],["error",3]]],[[["arc",3],["filestore",3]]],[[["cache",3],["option",4],["into",8],["string",3]]],[[["pathbuf",3],["filestore",3],["into",8],["arc",3],["into",8],["string",3]]],[[["workerservermessage",4],["pathbuf",3],["arc",3],["workerclientmessage",4],["into",8],["into",8],["string",3],["channelsender",3],["channelreceiver",3],["filestore",3]],["worker",3]],[[],[["result",4],["error",3]]]],"p":[[3,"LocalExecutor"],[4,"RemoteEntityMessage"],[13,"Welcome"],[4,"RemoteEntityMessageResponse"],[4,"ExecutorClientMessage"],[13,"Evaluate"],[4,"ExecutorServerMessage"],[4,"WorkerClientMessage"],[4,"WorkerServerMessage"],[3,"ChannelFileIterator"],[3,"ChannelFileSender"],[3,"ExecutorStatus"],[3,"ExecutorWorkerStatus"],[3,"WorkerCurrentJobStatus"],[4,"RawSandboxResult"],[8,"SandboxRunner"],[3,"ClientInfo"],[3,"WorkerConn"],[3,"ExecutorClient"],[3,"RemoteExecutor"],[3,"ErrorSandboxRunner"],[3,"SuccessSandboxRunner"],[3,"UnsafeSandboxRunner"],[3,"Worker"]]},\
"task_maker_format":{"doc":"Task parsing and execution using computation DAGs.","t":[0,0,5,0,5,5,4,13,13,4,13,13,4,13,13,17,4,13,13,13,3,12,12,3,12,12,4,13,13,17,4,13,13,3,12,12,12,12,12,12,12,12,12,3,3,12,12,12,3,12,12,12,12,12,12,12,12,3,12,5,3,3,3,3,3,3,4,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,3,12,12,12,12,3,12,3,12,12,12,12,3,12,12,12,3,12,12,3,12,3,12,12,3,12,12,12,12,12,12,12,12,6,6,3,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,3,12,12,12,12,11,11,11,11,0,3,12,12,12,6,3,12,12,12,12,12,12,12,12,12,3,12,12,12,3,12,12,3,12,12,4,13,13,13,3,12,12,3,12,12,3,12,12,11,11,0,3,3,3,3,4,13,13,12,13,12,12,13,12,13,12,12,12,13,12,12,12,13,12,12,12,13,12,12,12,12,12,12,13,12,12,12,12,13,12,12,12,12,12,13,12,12,12,12,13,12,12,13,12,12,13,12,12,12,12,12,13,12,13,12,12,12,13,12,12,13,12,12,13,12,12,13,12,12,13,12,6,6,3,3,3,3,3,4,13,13,12,13,12,13,4,13,13,13,12,12,12,13,12,12,12,13,11,8,10,8,10,3,11,11,11,11,11,11,3,11,11,8,10,10,4,13,13,13,13,13,5,3,4,13,13,13,13,3,3,8,10,10,10,10,10,10,4,13,13,3,12,12,12,12,12,12,12,3,12,12,12,11,8,10,11,14,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ioi","italian_yaml","parse_task","sanity_checks","get_sanity_checks","get_sanity_check_names","Checker","WhiteDiff","Custom","InputGenerator","StaticFile","Custom","InputValidator","AssumeValid","Custom","TM_VALIDATION_FILE_NAME","OutputGenerator","NotAvailable","StaticFile","Custom","BatchTypeData","output_generator","checker","CommunicationTypeData","manager","num_processes","TaskType","Batch","Communication","STDERR_CONTENT_LENGTH","TestcaseScoreAggregator","Min","Sum","BookletConfig","language","show_solutions","show_summary","font_enc","input_enc","description","location","date","logo","BookletTemplate","Booklet","config","statements","dest","StatementConfig","name","title","infile","outfile","time_limit","memory_limit","difficulty","syllabus_level","Statement","path","make_booklets","IOITaskInfo","TaskInfoLimits","TaskInfoAttachment","TaskInfoSubtask","TaskInfoScoring","TaskInfoStatement","TestcaseGenerationStatus","Pending","Generating","Generated","Validating","Validated","Solving","Solved","Failed","Skipped","TestcaseEvaluationStatus","Pending","Solving","Solved","Checking","Accepted","WrongAnswer","Partial","TimeLimitExceeded","WallTimeLimitExceeded","MemoryLimitExceeded","RuntimeError","Failed","Skipped","TestcaseGenerationState","status","generation","validation","solution","SubtaskGenerationState","testcases","SolutionTestcaseEvaluationState","score","status","results","checker","SolutionSubtaskEvaluationState","score","normalized_score","testcases","SolutionEvaluationState","score","subtasks","BookletDependencyState","status","BookletState","status","dependencies","UIState","task","max_score","compilations","generations","evaluations","executor_status","booklets","warnings","SubtaskId","TestcaseId","ScoreManager","IOITask","path","task_type","name","title","time_limit","memory_limit","infile","outfile","subtasks","input_validator","testcase_score_aggregator","grader_map","booklets","difficulty","syllabus_level","sanity_checks","SubtaskInfo","id","description","max_score","testcases","TestcaseInfo","id","input_generator","input_validator","output_generator","new","is_valid","new","score","terry","TerryTaskInfo","name","description","max_score","Seed","TerryTask","path","name","description","max_score","generator","validator","checker","official_solution","sanity_checks","SolutionOutcome","score","validation","feedback","SolutionValidation","cases","alerts","SolutionValidationCase","status","message","CaseStatus","Missing","Parsed","Invalid","SolutionFeedback","cases","alerts","SolutionFeedbackCase","correct","message","SolutionAlert","severity","message","new","is_valid","ui","JsonUI","PrintUI","RawUI","SilentUI","UIMessage","StopUI","ServerStatus","status","Compilation","file","status","IOITask","task","IOIGeneration","subtask","testcase","status","IOIValidation","subtask","testcase","status","IOISolution","subtask","testcase","status","IOIEvaluation","subtask","testcase","solution","status","part","num_parts","IOIChecker","subtask","testcase","solution","status","IOITestcaseScore","subtask","testcase","solution","score","message","IOISubtaskScore","subtask","solution","normalized_score","score","IOITaskScore","solution","score","IOIBooklet","name","status","IOIBookletDependency","booklet","name","step","num_steps","status","TerryTask","task","TerryGeneration","solution","seed","status","TerryValidation","solution","status","TerrySolution","solution","status","TerryChecker","solution","status","TerrySolutionOutcome","solution","outcome","Warning","message","UIChannelSender","UIChannelReceiver","RED","GREEN","YELLOW","BLUE","BOLD","UIExecutionStatus","Pending","Started","worker","Done","result","Skipped","CompilationStatus","Pending","Running","Done","result","stdout","stderr","Failed","result","stdout","stderr","Skipped","apply_status","UIStateT","apply","FinishUI","print","FinishUIUtils","new","print_compilations","print_time_memory","print_fail_execution_status","get_max_len","print_messages","UIMessageSender","new","send","UI","on_message","finish","UIType","Print","Raw","Curses","Json","Silent","get_sanity_check_names","SourceFile","Tag","Generation","Evaluation","Checking","Booklet","VALID_TAGS","DATA_DIR","TaskFormat","path","ui","build_dag","sanity_check_post_hook","clean","task_info","TaskInfo","IOI","Terry","EvaluationConfig","solution_filter","booklet_solutions","no_statement","solution_paths","disabled_sanity_checks","seed","dry_run","EvaluationData","task_root","dag","sender","new","UISender","send","filter_solutions","bind_exec_io","cwrite","cwriteln","bind_exec_callbacks","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","apply","on_message","finish","on_message","finish","on_message","finish","on_message","finish","path","ui","build_dag","sanity_check_post_hook","clean","task_info","path","ui","build_dag","sanity_check_post_hook","clean","task_info","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","eq","eq","ne","eq","ne","eq","ne","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from_str","from_str","initialize","initialize","initialize","initialize","initialize","initialize","initialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","render_into","extension","size_hint","new","add_statement","build","from_contest","new","config","build_deps","tex","packages","from_task","new","new","has_completed","is_success","is_partial","message","new","new","execute","prepare","executable","new","new","new","new","new"],"q":["task_maker_format","task_maker_format::ioi","task_maker_format::ioi::italian_yaml","task_maker_format::ioi","task_maker_format::ioi::sanity_checks","","task_maker_format::ioi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","task_maker_format","task_maker_format::terry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","task_maker_format","task_maker_format::ui","","","","","","","task_maker_format::ui::UIMessage","task_maker_format::ui","task_maker_format::ui::UIMessage","","task_maker_format::ui","task_maker_format::ui::UIMessage","task_maker_format::ui","task_maker_format::ui::UIMessage","","","task_maker_format::ui","task_maker_format::ui::UIMessage","","","task_maker_format::ui","task_maker_format::ui::UIMessage","","","task_maker_format::ui","task_maker_format::ui::UIMessage","","","","","","task_maker_format::ui","task_maker_format::ui::UIMessage","","","","task_maker_format::ui","task_maker_format::ui::UIMessage","","","","","task_maker_format::ui","task_maker_format::ui::UIMessage","","","","task_maker_format::ui","task_maker_format::ui::UIMessage","","task_maker_format::ui","task_maker_format::ui::UIMessage","","task_maker_format::ui","task_maker_format::ui::UIMessage","","","","","task_maker_format::ui","task_maker_format::ui::UIMessage","task_maker_format::ui","task_maker_format::ui::UIMessage","","","task_maker_format::ui","task_maker_format::ui::UIMessage","","task_maker_format::ui","task_maker_format::ui::UIMessage","","task_maker_format::ui","task_maker_format::ui::UIMessage","","task_maker_format::ui","task_maker_format::ui::UIMessage","","task_maker_format::ui","task_maker_format::ui::UIMessage","task_maker_format::ui","","","","","","","","","","task_maker_format::ui::UIExecutionStatus","task_maker_format::ui","task_maker_format::ui::UIExecutionStatus","task_maker_format::ui","","","","","task_maker_format::ui::CompilationStatus","","","task_maker_format::ui","task_maker_format::ui::CompilationStatus","","","task_maker_format::ui","","","","","","","","","","","","","","","","","","","","","","","","","task_maker_format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","task_maker_format::ioitask_maker_format","","","","","","","","","","","","","","","","","","","","","","","","","","task_maker_format::terry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","task_maker_format::ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","task_maker_format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","task_maker_format::ioi","task_maker_format::ui","","","","","","","","task_maker_format::ioi","","","","","","task_maker_format::terry","","","","","","task_maker_format::ioi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","task_maker_format","task_maker_format::terry","","","","","","","","","task_maker_format::ui","","","task_maker_format","","task_maker_format::ioi","","task_maker_format::ui","","","","task_maker_format","task_maker_format::ioi","","","task_maker_format::ui","","","","task_maker_format","","task_maker_format::ui","","","","","task_maker_format","","task_maker_format::ioi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","task_maker_format","task_maker_format::terry","","","","","","","","","task_maker_format::ui","","","","","task_maker_format","","task_maker_format::ioi","","task_maker_format::ui","task_maker_format","task_maker_format::ui","","","","","task_maker_format","task_maker_format::ioi","","","","","","","","","","","","","","","","","","","","","task_maker_format","task_maker_format::terry","","","","","","","","","task_maker_format::ui","","task_maker_format","task_maker_format::ioi","","","","","","","","","","","","","","","","","","","","","task_maker_format","task_maker_format::terry","","","","","","","","","task_maker_format::ui","","task_maker_format","task_maker_format::ioi","","","","","","","","","","","","","","","","","","","","","task_maker_format::terry","","","","","","","","","task_maker_format::ui","","task_maker_format","task_maker_format::ioi","","","","","","","","","","","","","","","","","","","","task_maker_format","","","","task_maker_format::terry","task_maker_format::ui","","",""],"d":["The IOI task format.","The <code>italian_yaml</code> format is defined by <code>cms</code> and it’s the …","Given the path to the task directory, try to parse the …","Sanity checks for IOI-like tasks.","Make a new <code>SanityChecks</code> for a IOI task skipping the …","Return a comma separated list of the names of all the …","Which tool to use to compute the score on a testcase …","Use a built-in white diff checker that scores 1.0 if the …","Use a custom checker based on an executable that can …","The source of the input files. It can either be a …","Use the static file as input. The file will be copied …","Use a custom command to generate the input file. The file …","An input file validator is responsible for checking that …","Skip the validation and assume the input file is valid.","Use a custom command to check if the input file is valid. …","The file name of the input file that the <code>InputValidator</code> …","The source of the output files. It can either be a …","The output generator is not available.","Use the static file as output. The file will be copied …","Use a custom command to generate the output file. The …","The internal data of a task of type <code>Batch</code>.","The default output generator for this task, if any.","The checker to use for this task.","The internal data of a task of type <code>Batch</code>.","The source file of the manager that communicates with the …","Number of solution processes to spawn in parallel in a …","The type of the task. This changes the behavior of the …","The solution is a single file that will be executed once …","The solution is executed in parallel with a manager and …","Maximum number of bytes of the captured standard error.","The aggregator of testcase scores for computing the …","Take the minimum of all the testcases, formally:","Sum the score of all the testcases, formally:","Configuration of a <code>Booklet</code>, including the setting from …","The language to use for this booklet, e.g. <code>\\\"english\\\"</code>.","Whether to show the solutions in the booklet.","Whether to show the summary of the task.","The font encoding of the tex file.","The input encoding of the tex file.","The description of the contest.","The location of the contest.","The date of the contest.","The logo of the contest.","Template to use to render the <code>booklet.tex</code> file.","A <code>Booklet</code> is a pdf file containing the statements of some …","Configuration of the booklet.","The list of <code>Statement</code>s that are included in this booklet.","Where to copy the booklet.","The configuration of a <code>Statement</code>.","The name of the task.","The title of the task.","The input file of the task, empty for <code>stdin</code>.","The output file of the task, empty for <code>stdout</code>.","The time limit of the task.","The memory limit of the task.","The difficulty of the task.","The level of the syllabus of the task.","A statement is a <code>.tex</code> file with all the other assets …","The path of the <code>.tex</code> file.","Find all the <code>Booklet</code> it makes sense to build.","Task information structure.","Limits of the task.","Attachment of the task.","Info of the subtasks.","Scoring for the task.","Statement of the task.","Status of the generation of a testcase input and output.","The generation has not started yet.","The input file is generating.","The input file has been generated.","The input file is being validated.","The input file has been validated.","The output file is generating.","The output file has been generated.","The generation of the testcase has failed.","The generation has been skipped.","Status of the evaluation of a solution on a testcase.","The solution has not started yet.","The solution is running.","The solution exited successfully, waiting for the checker.","Checker is running.","The solution scored 100% of the testcase.","The output is wrong.","The solution is partially correct.","The solution timed out.","The solution exceeded the wall time limit.","The solution exceeded the memory limit.","The solution crashed.","Something went wrong.","The evaluation has been skipped.","State of the generation of a testcases.","Status of the generation.","Result of the generation.","Result of the validation.","Result of the solution.","State of the generation of a subtask.","State of the testcases of this subtask.","State of the evaluation of a testcase.","The score on that testcase","The status of the execution.","The result of the solution.","The result of the checker.","State of the evaluation of a subtask.","Score of the subtask.","Score of the subtask, normalized from 0.0 to 1.0.","The state of the evaluation of the testcases.","State of the evaluation of a solution.","Score of the solution.","The state of the evaluation of the subtasks.","The status of the compilation of a dependency of a …","The status of the execution.","The status of the compilation of a booklet.","The status of the execution.","The state of all the dependencies","The state of a IOI task, all the information for the UI …","The task.","The maximum score of this task.","The status of the compilations.","The state of the generation of the testcases.","The status of the evaluations of the solutions.","The status of the executor.","The status of the booklets","All the emitted warnings.","In IOI tasks the subtask numbers are non-negative 0-based …","In IOI tasks the testcase numbers are non-negative …","This struct will manage the scores of a solution in a …","Information about a generic IOI task.","Path of the directory of the task.","The type of the task.","The name of the task (the short one).","The title of the task (the long one).","The time limit for the execution of the solutions, if <code>None</code>…","The memory limit in MiB of the execution of the solution, …","The input file for the solutions, usually …","The output file for the solutions, usually …","The list of the subtasks.","The default input validator for this task, if any.","The aggregator to use to compute the score of the subtask …","The graders registered for this task.","The booklets to compile for this task.","An integer that defines the difficulty of the task. Used …","An integer that defines the level inside a <em>syllabus</em> (for …","The sanity checks attached to this task. Wrapped in Arc …","A subtask of a IOI task.","The id of the subtask.","Textual description of the subtask.","The maximum score of the subtask, must be >= 0.","The testcases inside this subtask.","A testcase of a IOI task.","The id of the testcase.","The generator of the input file for this testcase.","The validator of the input file for this testcase.","The generator of the output file for this testcase.","Try to make a <code>Task</code> from the specified path. Will return …","Check if in the provided path there could be a IOI-like …","Make a new <code>ScoreManager</code> based on the subtasks and …","Store the score of the testcase and eventually compute …","The Terry task format.","Task information structure.","The name of the task (the short one).","The title of the task (the long one).","The maximum score for this task.","The type of the seed of a generator for an input file.","Information about a generic Terry task.","Path of the directory of the task.","The name of the task (the short one).","The title of the task (the long one).","The maximum score for this task.","The generator of input files of this task.","The validator of input files of this task.","The checker of input/output files of this task.","The official solution of this task, if any. Will be …","The sanity checks attached to this task. Wrapped in Arc …","The output of the checker for a solution.","The score normalized from 0.0 to 1.0.","The validation outcome of the solution.","The feedback outcome of the solution.","The validation part of the outcome of a solution.","The validation of the test cases, in the same order as …","The alerts sent by the checker regarding the validation.","The validation outcome of a test case.","The status of the testcase.","An optional message associated to the test case.","The possible statuses of the validation of a test case.","The testcase is not present in the output file.","The testcase is present and correctly parsed.","The testcase is present but its format is invalid.","The feedback part of the outcome.","The feedback of each testcase, in the same order as the …","The alerts sent by the checker regarding the feedback.","The feedback of a test case.","Whether this testcase is correct.","An optional message associated to the test case.","A message with an associated severity.","The severity of the alert message.","The content of the alert.","Try to make a <code>Task</code> from the specified path. Will return …","Check if in the provided path there could be a Terry-like …","The UI functionality for the task formats.","This UI will print to stdout the UI messages as json.","A simple UI that will print to stdout the human readable …","This UI will print to stdout all the raw information it …","This UI will never print anything.","A message sent to the UI.","A message asking the UI to exit.","An update on the status of the executor.","The status of the executor.","An update on the compilation status.","The compilation of this file.","The status of the compilation.","The information about the task which is being run.","The task information.","The generation of a testcase in a IOI task.","The id of the subtask.","The id of the testcase.","The status of the generation.","The validation of a testcase in a IOI task.","The id of the subtask.","The id of the testcase.","The status of the validation.","The solution of a testcase in a IOI task.","The id of the subtask.","The id of the testcase.","The status of the solution.","The evaluation of a solution in a IOI task.","The id of the subtask.","The id of the testcase.","The path of the solution.","The status of the solution.","The index of the piece of evaluation of this solution.","The number of the parts the evaluation of this solution …","The checking of a solution in a IOI task.","The id of the subtask.","The id of the testcase.","The path of the solution.","The status of the solution. Note that a failure of this …","The score of a testcase is ready.","The id of the subtask.","The id of the testcase.","The path of the solution.","The score of the testcase.","The message associated with the score.","The score of a subtask is ready.","The id of the subtask.","The path of the solution.","The normalized score, a value between 0 and 1","The score of the subtask.","The score of a task is ready.","The path of the solution.","The score of the task.","The compilation of a booklet.","The name of the booklet.","The status of the compilation.","The compilation of a dependency of a booklet. It can be …","The name of the booklet.","The name of the dependency.","The index (0-based) of the step of this compilation.","The number of steps of the compilation of this dependency.","The status of this step.","The information about the task which is being run.","The task information.","The generation of a testcase in a Terry task.","The path of the solution.","The seed used to generate the input file.","The status of the generation.","The validation of a testcase in a Terry task.","The path of the solution.","The status of the validation.","The solution of a testcase in a Terry task.","The path of the solution.","The status of the solution.","The checking of a solution in a Terry task.","The path of the solution.","The status of the checker.","The outcome of a solution in a Terry task.","The path of the solution.","The outcome of the solution. <code>Err</code> is caused by an invalid …","A warning has been emitted.","The message of the warning.","Channel type for sending <code>UIMessage</code>s.","Channel type for receiving <code>UIMessage</code>s.","The RED color to use with <code>cwrite!</code> and <code>cwriteln!</code>","The GREEN color to use with <code>cwrite!</code> and <code>cwriteln!</code>","The YELLOW color to use with <code>cwrite!</code> and <code>cwriteln!</code>","The BLUE color to use with <code>cwrite!</code> and <code>cwriteln!</code>","The bold style to use with <code>cwrite!</code> and <code>cwriteln!</code>","The status of an execution.","The <code>Execution</code> is known to the DAG and when all its …","The <code>Execution</code> has been started on a worker.","The UUID of the worker.","The <code>Execution</code> has been completed.","The result of the execution.","At least one of its dependencies have failed, the …","The status of the compilation of a file.","The compilation is known but it has not started yet.","The compilation is running on a worker.","The compilation has completed.","The result of the compilation.","The standard output of the compilation.","The standard error of the compilation.","The compilation has failed.","The result of the compilation.","The standard output of the compilation.","The standard error of the compilation.","The compilation has been skipped.","Apply to this <code>CompilationStatus</code> a new <code>UIExecutionStatus</code>.","The state of a task, all the information for the UI are …","Apply a <code>UIMessage</code> to this state.","UI that prints to <code>stdout</code> the ending result of the …","Print the final state of the UI.","Collection of utilities for drawing the finish UI.","Make a new <code>FinishUIUtils</code> borrowing a <code>StandardStream</code>.","Print all the compilation statuses.","Print the time and memory usage of an execution.","Print a message for the non-successful variants of the …","Find the maximum length of the solutions name from the …","Print the warnings.","The sender of the UIMessage","Make a new pair of UIMessageSender and ChannelReceiver.","Send a message to the channel.","The trait that describes the UI functionalities.","Process a new UI message.","Make the UI print the ending results.","The type of the UI to use, it enumerates all the known UI …","The <code>PrintUI</code>.","The <code>RawUI</code>.","The <code>CursesUI</code>.","The <code>JsonUI</code>.","The <code>SilentUI</code>.","Return a comma separated list of the names of all the …","Wrapper around <code>task_maker_lang::SourceFile</code> that also …","Tags of the various executions inside a IOI task.","Generation of a testcase.","Evaluation of a solution.","Checking of a solution.","Compilation of the booklet.","The list of all the ExecutionTags used for the evaluation.","Directory where the data files are stored. It is taken …","Trait that defines the capabilities of a task format, …","Get the root directory of the task.","Get an appropriate <code>UI</code> for this task.","Add the executions required for evaluating this task to …","Hook called after the execution completed, useful for …","Clean the task folder removing the files that can be …","Get task information","Information about a parsed task, returned with the …","The task is IOI-like.","The task is Terry-like.","Configuration of the evaluation of a task.","Execute only the solutions whose names start with the …","Include the solutions in the booklet.","Do not build the statement files and the booklets.","Execute only the solution with the specified paths, that …","List of disabled sanity check names.","Force this seed in terry evaluations.","Do not write any file inside the task directory.","The data for an evaluation, including the DAG and the UI …","Root directory of the task.","The DAG with the evaluation data.","The sender of the UI.","Crate a new <code>EvaluationData</code> returning the data and the …","What can send <code>UIMessage</code>s.","Send that <code>UIMessage</code> to the UI.","Search all the solutions matching the provided pattern in …","Bind the input/output of an execution to the input and …","Write to <code>$self.stream</code>, in the color specified as second …","Write to <code>$self.stream</code>, in the color specified as second …","Bind the start/done/skip callbacks of an execution to a …pply a <code>UIMessage</code> to this state.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Make a new <code>Booklet</code> using the specified configuration.","Add a <code>Statement</code> to this booklet.","Build the booklet, eventually coping the final PDF to the …","Build the <code>BookletConfig</code> from a contest.","Make a new <code>Statement</code> from a <code>.tex</code> file and its …","Return a ref to the configuration of the statement.","Build all the dependencies of this statement, returning a …","Return the <em>tex</em> source file of the statement, patched with …","Return a list of all the <code>\\\\usepackage</code> used by the …","Make a new <code>StatementConfig</code> from an instace of a <code>ioi::Task</code>.","Generate the task information from the provided <code>Task</code>.","Make a new, empty, <code>SolutionEvaluationState</code>.","Whether the testcase evaluation has completed, either …","Whether the testcase evaluation has completed …","Whether the testcase evaluation has completed with a …","A message representing this status.","Make a new <code>UIState</code>.","Make a new <code>SourceFile</code>. See <code>task_maker_lang::SourceFile</code> …","Prepare an execution of the source file, eventually …","Prepare an execution of the source file, eventually …","Prepare the source file if needed and return the …","Generate the task information from the provided <code>Task</code>.","Make a new <code>JsonUI</code>.","Make a new PrintUI.","Make a new RawUI.","Make a new SilentUI."],"i":[0,0,0,0,0,0,0,1,1,0,2,2,0,3,3,0,0,4,4,4,0,5,5,0,6,6,0,7,7,0,0,8,8,0,9,9,9,9,9,9,9,9,9,0,0,10,10,10,0,11,11,11,11,11,11,11,11,0,12,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,15,15,15,15,0,16,0,17,17,17,17,0,18,18,18,0,19,19,0,20,0,21,21,0,22,22,22,22,22,22,22,22,0,0,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,24,24,24,24,0,25,25,25,25,23,23,26,26,0,0,27,27,27,0,0,28,28,28,28,28,28,28,28,28,0,29,29,29,0,30,30,0,31,31,0,32,32,32,0,33,33,0,34,34,0,35,35,28,28,0,0,0,0,0,0,36,36,37,36,38,38,36,39,36,40,40,40,36,41,41,41,36,42,42,42,36,43,43,43,43,43,43,36,44,44,44,44,36,45,45,45,45,45,36,46,46,46,46,36,47,47,36,48,48,36,49,49,49,49,49,36,50,36,51,51,51,36,52,52,36,53,53,36,54,54,36,55,55,36,56,0,0,0,0,0,0,0,0,57,57,58,57,59,57,0,60,60,60,61,61,61,60,62,62,62,60,60,0,63,0,64,0,65,65,65,65,65,65,0,66,66,0,67,67,0,68,68,68,68,68,0,0,0,69,69,69,69,0,0,0,70,70,70,70,70,70,0,71,71,0,72,72,72,72,72,72,72,0,73,73,73,73,0,74,72,0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,75,75,75,75,75,75,75,75,75,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,76,76,76,76,76,76,76,76,76,76,77,77,77,77,77,77,77,77,77,77,78,78,78,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,79,80,80,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,81,81,81,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,26,26,26,26,26,26,26,26,26,26,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,82,82,82,82,82,82,82,82,82,82,83,83,83,83,83,83,83,83,69,69,69,69,69,69,69,69,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,84,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,86,86,86,86,86,86,86,86,87,87,87,87,87,87,87,87,36,36,36,36,36,36,36,36,36,36,88,88,88,88,88,88,88,88,89,89,89,89,89,89,89,89,90,90,90,90,90,90,90,90,91,91,91,91,91,91,91,91,92,92,92,92,92,92,92,92,57,57,57,57,57,57,57,57,57,57,60,60,60,60,60,60,60,60,60,60,65,65,65,65,65,65,65,65,66,66,66,66,66,66,66,66,68,68,68,68,68,68,68,68,93,93,93,93,93,93,93,93,71,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,22,84,84,85,85,86,86,87,87,23,23,23,23,23,23,28,28,28,28,28,28,1,2,3,4,5,6,7,8,9,10,11,12,76,77,78,79,80,81,13,14,15,16,17,18,19,20,21,22,26,23,24,25,82,27,28,29,30,31,32,33,34,35,36,57,60,71,72,9,11,84,85,86,87,72,13,14,14,57,57,60,60,82,83,88,89,90,91,92,93,82,1,2,3,4,5,6,7,8,9,10,11,12,76,77,78,79,80,81,13,14,15,16,17,18,19,20,21,22,26,23,24,25,82,27,28,29,30,31,32,33,34,35,36,57,60,66,68,71,72,75,8,68,83,88,89,90,91,92,93,1,2,3,4,5,6,7,8,9,10,11,12,76,77,78,79,80,81,23,24,25,82,27,28,29,30,31,32,33,34,35,36,57,71,1,2,3,4,5,6,7,8,9,10,11,12,76,77,78,79,80,81,23,24,25,82,27,28,29,30,31,32,33,34,35,36,57,71,1,2,3,4,5,6,7,8,9,10,11,12,76,77,78,79,80,81,23,24,25,27,28,29,30,31,32,33,34,35,36,57,71,75,75,75,10,10,10,9,12,12,12,12,12,11,76,19,14,14,14,14,22,82,82,82,82,27,84,85,86,87],"f":[null,null,[[["evaluationconfig",3],["path",3],["asref",8]],[["result",4],["error",3],["ioitask",3]]],null,[[],[["sanitychecks",3],["ioitask",3]]],[[],[["vec",3],["str",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ioitask",3],["evaluationconfig",3]],[["result",4],["error",3],["vec",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["evaluationconfig",3],["path",3],["asref",8]],[["result",4],["error",3],["ioitask",3]]],[[["path",3],["asref",8]],["bool",15]],[[["ioitask",3]],["scoremanager",3]],[[["f64",15],["arc",3],["testcaseid",6],["pathbuf",3],["string",3],["subtaskid",6],["mutex",3]],[["result",4],["error",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["evaluationconfig",3],["path",3],["asref",8]],[["error",3],["result",4],["terrytask",3]]],[[["path",3],["asref",8]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["uiexecutionstatus",4]]],null,[[["uimessage",4]]],null,[[]],null,[[["standardstream",3]],["finishuiutils",3]],[[["hashmap",3]]],[[["executionresourcesusage",3]]],[[["executionstatus",4]]],[[["hashmap",3]],["usize",15]],[[]],null,[[]],[[["uimessage",4]],[["result",4],["error",3]]],null,[[["uimessage",4]]],[[]],null,null,null,null,null,null,[[],["string",3]],null,null,null,null,null,null,null,null,null,[[],["path",3]],[[["uitype",4]],[["error",3],["result",4],["box",3]]],[[["evaluationdata",3],["evaluationconfig",3]],[["result",4],["error",3]]],[[["uimessagesender",3]],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3],["taskinfo",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["into",8],["pathbuf",3]]],null,[[["uimessage",4]],[["result",4],["error",3]]],[[["arc",3],["vec",3],["path",3],["option",4],["str",15]],[["sourcefile",3],["vec",3]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["uimessage",4]]],[[["uimessage",4]]],[[]],[[["uimessage",4]]],[[]],[[["uimessage",4]]],[[]],[[["uimessage",4]]],[[]],[[],["path",3]],[[["uitype",4]],[["error",3],["result",4],["box",3]]],[[["evaluationdata",3],["evaluationconfig",3]],[["result",4],["error",3]]],[[["uimessagesender",3]],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3],["taskinfo",4]]],[[],["path",3]],[[["uitype",4]],[["error",3],["result",4],["box",3]]],[[["evaluationdata",3],["evaluationconfig",3]],[["result",4],["error",3]]],[[["uimessagesender",3]],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3],["taskinfo",4]]],[[],["checker",4]],[[],["inputgenerator",4]],[[],["inputvalidator",4]],[[],["outputgenerator",4]],[[],["batchtypedata",3]],[[],["communicationtypedata",3]],[[],["tasktype",4]],[[],["testcasescoreaggregator",4]],[[],["bookletconfig",3]],[[],["booklet",3]],[[],["statementconfig",3]],[[],["statement",3]],[[],["ioitaskinfo",3]],[[],["taskinfolimits",3]],[[],["taskinfoattachment",3]],[[],["taskinfosubtask",3]],[[],["taskinfoscoring",3]],[[],["taskinfostatement",3]],[[],["testcasegenerationstatus",4]],[[],["testcaseevaluationstatus",4]],[[],["testcasegenerationstate",3]],[[],["subtaskgenerationstate",3]],[[],["solutiontestcaseevaluationstate",3]],[[],["solutionsubtaskevaluationstate",3]],[[],["solutionevaluationstate",3]],[[],["bookletdependencystate",3]],[[],["bookletstate",3]],[[],["uistate",3]],[[],["scoremanager",3]],[[],["ioitask",3]],[[],["subtaskinfo",3]],[[],["testcaseinfo",3]],[[],["sourcefile",3]],[[],["terrytaskinfo",3]],[[],["terrytask",3]],[[],["solutionoutcome",3]],[[],["solutionvalidation",3]],[[],["solutionvalidationcase",3]],[[],["casestatus",4]],[[],["solutionfeedback",3]],[[],["solutionfeedbackcase",3]],[[],["solutionalert",3]],[[],["uimessage",4]],[[],["uiexecutionstatus",4]],[[],["compilationstatus",4]],[[],["taskinfo",4]],[[],["evaluationconfig",3]],[[],["bookletconfig",3]],[[],["statementconfig",3]],[[],["jsonui",3]],[[]],[[],["rawui",3]],[[],["silentui",3]],[[],["evaluationconfig",3]],[[["testcasegenerationstatus",4]],["bool",15]],[[["testcaseevaluationstatus",4]],["bool",15]],[[["testcaseevaluationstatus",4]],["bool",15]],[[["uiexecutionstatus",4]],["bool",15]],[[["uiexecutionstatus",4]],["bool",15]],[[["compilationstatus",4]],["bool",15]],[[["compilationstatus",4]],["bool",15]],[[]],[[],["vec",3]],[[],["colorspec",3]],[[],["colorspec",3]],[[],["colorspec",3]],[[],["colorspec",3]],[[],["colorspec",3]],[[],["pathbuf",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["str",15]],["result",4]],[[["str",15]],[["result",4],["uitype",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[["write",8]],["result",6]],[[],[["str",15],["option",4]]],[[],["usize",15]],[[["into",8],["bookletconfig",3],["pathbuf",3]]],[[["statement",3]]],[[["evaluationdata",3]],[["result",4],["error",3]]],[[["pathbuf",3],["string",3],["into",8],["bool",15],["into",8]],[["result",4],["error",3],["bookletconfig",3]]],[[["into",8],["pathbuf",3],["statementconfig",3]],[["error",3],["result",4]]],[[],["statementconfig",3]],[[["bookletconfig",3],["evaluationdata",3],["str",15]],[["result",4],["vec",3],["error",3]]],[[],["string",3]],[[],[["string",3],["vec",3]]],[[["ioitask",3]]],[[["ioitask",3]],[["ioitaskinfo",3],["result",4],["error",3]]],[[["ioitask",3]],["solutionevaluationstate",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["string",3]],[[["ioitask",3]],["uistate",3]],[[["arc",3],["pathbuf",3],["into",8],["option",4],["option",4]],[["option",4],["sourcefile",3]]],[[["intoiterator",8],["asref",8],["str",15],["evaluationdata",3]],[["error",3],["result",4],["execution",3]]],[[["evaluationdata",3]],[["result",4],["error",3]]],[[["evaluationdata",3]],[["fileuuid",6],["error",3],["result",4]]],[[["terrytask",3]],[["error",3],["result",4],["terrytaskinfo",3]]],[[],["jsonui",3]],[[],["printui",3]],[[],["rawui",3]],[[],["silentui",3]]],"p":[[4,"Checker"],[4,"InputGenerator"],[4,"InputValidator"],[4,"OutputGenerator"],[3,"BatchTypeData"],[3,"CommunicationTypeData"],[4,"TaskType"],[4,"TestcaseScoreAggregator"],[3,"BookletConfig"],[3,"Booklet"],[3,"StatementConfig"],[3,"Statement"],[4,"TestcaseGenerationStatus"],[4,"TestcaseEvaluationStatus"],[3,"TestcaseGenerationState"],[3,"SubtaskGenerationState"],[3,"SolutionTestcaseEvaluationState"],[3,"SolutionSubtaskEvaluationState"],[3,"SolutionEvaluationState"],[3,"BookletDependencyState"],[3,"BookletState"],[3,"UIState"],[3,"IOITask"],[3,"SubtaskInfo"],[3,"TestcaseInfo"],[3,"ScoreManager"],[3,"TerryTaskInfo"],[3,"TerryTask"],[3,"SolutionOutcome"],[3,"SolutionValidation"],[3,"SolutionValidationCase"],[4,"CaseStatus"],[3,"SolutionFeedback"],[3,"SolutionFeedbackCase"],[3,"SolutionAlert"],[4,"UIMessage"],[13,"ServerStatus"],[13,"Compilation"],[13,"IOITask"],[13,"IOIGeneration"],[13,"IOIValidation"],[13,"IOISolution"],[13,"IOIEvaluation"],[13,"IOIChecker"],[13,"IOITestcaseScore"],[13,"IOISubtaskScore"],[13,"IOITaskScore"],[13,"IOIBooklet"],[13,"IOIBookletDependency"],[13,"TerryTask"],[13,"TerryGeneration"],[13,"TerryValidation"],[13,"TerrySolution"],[13,"TerryChecker"],[13,"TerrySolutionOutcome"],[13,"Warning"],[4,"UIExecutionStatus"],[13,"Started"],[13,"Done"],[4,"CompilationStatus"],[13,"Done"],[13,"Failed"],[8,"UIStateT"],[8,"FinishUI"],[3,"FinishUIUtils"],[3,"UIMessageSender"],[8,"UI"],[4,"UIType"],[4,"Tag"],[8,"TaskFormat"],[4,"TaskInfo"],[3,"EvaluationConfig"],[3,"EvaluationData"],[8,"UISender"],[3,"BookletTemplate"],[3,"IOITaskInfo"],[3,"TaskInfoLimits"],[3,"TaskInfoAttachment"],[3,"TaskInfoSubtask"],[3,"TaskInfoScoring"],[3,"TaskInfoStatement"],[3,"SourceFile"],[3,"VALID_TAGS"],[3,"JsonUI"],[3,"PrintUI"],[3,"RawUI"],[3,"SilentUI"],[3,"RED"],[3,"GREEN"],[3,"YELLOW"],[3,"BLUE"],[3,"BOLD"],[3,"DATA_DIR"]]},\
"task_maker_gen_autocompletion":{"doc":"Tool that generates the autocompletion scripts inside the …","t":[0,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,13,13,3,12,12,12,12,3,12,5,5,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["opt","Opt","task_dir","ui","keep_sandboxes","dry_run","print_dag","no_cache","exclusive","extra_time","copy_exe","copy_logs","filter","solution","seed","max_depth","clean","store_dir","max_cache","min_cache","num_cores","booklet_solutions","no_statement","verbose","evaluate_on","skip_sanity_checks","name","remote","task_info","dont_panic","sandbox","Remote","Server","Worker","ServerOptions","client_addr","worker_addr","client_password","worker_password","WorkerOptions","server_addr","skip_sanity_checks_long_help","no_cache_long_help","to_config","store_dir","enable_log","main","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","clone","clone","fmt","fmt","fmt","fmt","clap","from_clap","clap","from_clap","clap","from_clap","clap","from_clap","augment_clap","is_subcommand","augment_clap","from_subcommand","is_subcommand","augment_clap","is_subcommand","augment_clap","is_subcommand"],"q":["task_maker_gen_autocompletion","task_maker_gen_autocompletion::opt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","task_maker_gen_autocompletion","task_maker_gen_autocompletion::opt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Directory of the task to evaluate","Which UI to use, available UIS are: print, raw, curses, …","Keep all the sandbox directories","Do not write any file inside the task directory","Print the evaluation DAG in DOT format","Disable the cache for this comma separated list of tags","Do not run in parallel time critical executions on the …","Give to the solution some extra time before being killed","Copy the executables to the bin/ folder","Copy the logs of some executions to the bin/logs/ folder","Execute only the solutions whose names start with the …","Evaluate only the solution with the specified path","Force this seed instead of a random one in Terry.","Look at most for this number of parents for searching the …","Clear the task directory and exit","Where to store the storage files, including the cache","Maximum size of the storage directory, in MiB","When the storage is flushed, this is the new maximum …","The number of CPU cores to use","Include the solutions in the booklet","Do not build the statement files and the booklets","Verbose mode (-v, -vv, -vvv, etc.). Note that it does not …","Run the evaluation on a remote server instead of locally","List of sanity checks to skip.","The name to use for the workers or for the client in …","Options for spawning a client or a server.","Show task information","Wipe the internal storage of task-maker","Run the sandbox instead of the normal task-maker.","Options for spawning a client or a server.","Spawn a server instead of the normal task-maker","Spawn a worker instead of the normal task-maker","","Address to bind the server on for listening for the …","Address to bind the server on for listening for the …","Password for the connection of the clients","Password for the connection of the workers","","Address to use to connect to a remote server","Returns the long-help for the “skip sanity checks” …","Returns the long-help for the –no-cache option.","Make an <code>EvaluationConfig</code> from this command line options.","Get the store directory of this configuration. If nothing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,0,3,3,3,3,0,4,0,0,1,1,1,0,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,3,4,1,2,3,4,1,1,2,2,3,3,4,4,1,1,2,2,2,3,3,4,4],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[],["str",15]],[[],["evaluationconfig",3]],[[],["pathbuf",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["serveroptions",3]],[[],["workeroptions",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["app",3]],[[["argmatches",3]]],[[],["app",3]],[[["argmatches",3]]],[[],["app",3]],[[["argmatches",3]]],[[],["app",3]],[[["argmatches",3]]],[[["app",3]],["app",3]],[[],["bool",15]],[[["app",3]],["app",3]],[[],["option",4]],[[],["bool",15]],[[["app",3]],["app",3]],[[],["bool",15]],[[["app",3]],["app",3]],[[],["bool",15]]],"p":[[3,"Opt"],[4,"Remote"],[3,"ServerOptions"],[3,"WorkerOptions"]]},\
"task_maker_lang":{"doc":"Crate for managing programming languages and source files.","t":[3,3,12,12,12,12,8,10,10,10,11,11,11,11,11,11,11,11,11,11,11,3,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["GraderMap","Dependency","file","local_path","sandbox_path","executable","Language","name","extensions","need_compilation","compilation_command","compilation_args","compilation_add_file","compilation_dependencies","compiled_file_name","runtime_command","runtime_args","runtime_add_file","runtime_dependencies","custom_limits","executable_name","SourceFile","path","base_path","LanguageManager","detect_language","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","clone","clone","eq","ne","fmt","fmt","fmt","serialize","serialize","serialize","deserialize","deserialize","deserialize","type_script_ify","type_script_ify","type_script_ify","new","get_compilation_deps","get_runtime_deps","all_paths","compilation_command","compilation_args","compilation_add_file","compilation_dependencies","compiled_file_name","runtime_command","runtime_args","runtime_add_file","runtime_dependencies","custom_limits","executable_name","new","execute","copy_exe","link_static","executable","name","write_bin_to","prepare"],"q":["task_maker_lang","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The storage of the compilation/runtime dependencies for …","A dependency of an execution, all the sandbox paths must …","The handle of the file.","The path of the file on the local system.","The path inside of the sandbox of where to put the file. …","Whether the file should be executable or not.","Trait that defines the properties of the supported …","Full name of the language. This must be unique between …","List of valid extensions for this language. A file is …","Whether this language needs a compilation step. Returning …","Command to use to compile the source file. The blanked …","Arguments to pass to the compiler to compile to source …","Add a file to the compilation command if the language …","The dependencies to put inside the compilation sandbox. …","The name that the compiled file will have inside the …","Command to use to run the program. It defaults to the …","Arguments to pass to the executable to start the …","Add a file to the runtime command if the language …","The dependencies to put inside the execution sandbox. …","Update the limits for some language-specific …","The name of the executable inside the sandbox. If this …","A source file that will be able to be executed (with an …","Path to the source file.","Path to the base directory (e.g. the task root), used for …","Manager of all the known languages, you should use this …","Given a path to a file guess the language that the source …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Make a new map with the specified graders.","Extra compilation dependencies of the graders, will be an …","Extra runtime dependencies of the graders, will be an …","Return an iterator over the paths of all the graders in …","Command to use to compile the source file. The blanked …","Arguments to pass to the compiler to compile to source …","Add a file to the compilation command if the language …","The dependencies to put inside the compilation sandbox. …","The name that the compiled file will have inside the …","Command to use to run the program. It defaults to the …","Arguments to pass to the executable to start the …","Add a file to the runtime command if the language …","The dependencies to put inside the execution sandbox. …","Update the limits for some language-specific …","The name of the executable inside the sandbox. If this …","Make a new <code>SourceFile</code> from the provided file. Will return …","Execute the program relative to this source file with the …","Force the executable to be copied to <code>write_bin_to</code> …","Compile the source file to a statically-linked binary.","Prepare the source file if needed and return the …","The file name of the source file.","The optional destination of where to copy the executable …","Prepare the source file setting the <code>executable</code> and …"],"i":[0,0,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,0,4,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,1,3,1,1,5,1,3,5,1,3,5,1,3,5,1,3,5,5,5,5,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3],"f":[null,null,null,null,null,null,null,[[],["str",15]],[[],[["vec",3],["str",15]]],[[],["bool",15]],[[["path",3],["option",4]],["executioncommand",4]],[[["bool",15],["path",3],["option",4]],[["vec",3],["string",3]]],[[["vec",3],["string",3],["path",3]],[["vec",3],["string",3]]],[[["path",3]],[["vec",3],["dependency",3]]],[[["path",3],["option",4]],["pathbuf",3]],[[["path",3],["option",4]],["executioncommand",4]],[[["string",3],["vec",3],["path",3],["option",4]],[["vec",3],["string",3]]],[[["vec",3],["string",3],["path",3]],[["vec",3],["string",3]]],[[["path",3]],[["vec",3],["dependency",3]]],[[["executionlimits",3]]],[[["path",3],["option",4]],["pathbuf",3]],null,null,null,null,[[["asref",8],["path",3]],[["option",4],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["dependency",3]],[[],["sourcefile",3]],[[["dependency",3]],["bool",15]],[[["dependency",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[],[["str",15],["cow",4]]],[[["vec",3],["into",8],["pathbuf",3]],["gradermap",3]],[[["language",8]],[["vec",3],["dependency",3]]],[[["language",8]],[["vec",3],["dependency",3]]],[[]],[[["path",3],["option",4]],["executioncommand",4]],[[["bool",15],["path",3],["option",4]],[["vec",3],["string",3]]],[[["vec",3],["string",3],["path",3]],[["vec",3],["string",3]]],[[["path",3]],[["vec",3],["dependency",3]]],[[["path",3],["option",4]],["pathbuf",3]],[[["path",3],["option",4]],["executioncommand",4]],[[["string",3],["vec",3],["path",3],["option",4]],[["vec",3],["string",3]]],[[["vec",3],["string",3],["path",3]],[["vec",3],["string",3]]],[[["path",3]],[["vec",3],["dependency",3]]],[[["executionlimits",3]]],[[["path",3],["option",4]],["pathbuf",3]],[[["option",4],["pathbuf",3],["into",8],["arc",3],["option",4]],[["option",4],["sourcefile",3]]],[[["asref",8],["string",3],["vec",3],["str",15],["executiondag",3]],[["error",3],["result",4]]],[[]],[[]],[[["executiondag",3]],[["error",3],["result",4]]],[[],["string",3]],[[],[["option",4],["pathbuf",3]]],[[["executiondag",3]],[["option",4],["error",3],["result",4]]]],"p":[[3,"Dependency"],[8,"Language"],[3,"SourceFile"],[3,"LanguageManager"],[3,"GraderMap"]]},\
"task_maker_rust":{"doc":"task-maker-rust","t":[0,4,13,13,5,5,0,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,13,13,3,12,12,12,12,3,12,11,11,11,0,5,0,5,0,5,3,0,5,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["local","Evaluation","Done","Clean","run_evaluation","main_local","opt","Opt","task_dir","ui","keep_sandboxes","dry_run","print_dag","no_cache","exclusive","extra_time","copy_exe","copy_logs","filter","solution","seed","max_depth","clean","store_dir","max_cache","min_cache","num_cores","booklet_solutions","no_statement","verbose","evaluate_on","skip_sanity_checks","name","remote","task_info","dont_panic","sandbox","Remote","Server","Worker","ServerOptions","client_addr","worker_addr","client_password","worker_password","WorkerOptions","server_addr","to_config","store_dir","enable_log","print_dag","print_dag","remote","connect_to_remote_server","sandbox","main_sandbox","SelfExecSandboxRunner","server","main_server","worker","main_worker","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","clone","clone","default","fmt","fmt","fmt","fmt","run","clap","from_clap","clap","from_clap","clap","from_clap","clap","from_clap","augment_clap","is_subcommand","augment_clap","from_subcommand","is_subcommand","augment_clap","is_subcommand","augment_clap","is_subcommand"],"q":["task_maker_rust","task_maker_rust::local","","","","","task_maker_rust","task_maker_rust::opt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","task_maker_rust","task_maker_rust::print_dag","task_maker_rust","task_maker_rust::remote","task_maker_rust","task_maker_rust::sandbox","","task_maker_rust","task_maker_rust::server","task_maker_rust","task_maker_rust::worker","task_maker_rust::local","","","","","","","","task_maker_rust::opt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","task_maker_rust::sandbox","","","","","","","","task_maker_rust::opt","","task_maker_rust::sandbox","task_maker_rust::opt","","","","task_maker_rust::sandbox","task_maker_rust::opt","","","","","","","","","","","","","","","",""],"d":["","The result of an evaluation.","The evaluation has completed.","The task directory has been cleaned.","Run the local evaluation of some actions (either building …","Entry point of the local execution.","","","Directory of the task to evaluate","Which UI to use, available UIS are: print, raw, curses, …","Keep all the sandbox directories","Do not write any file inside the task directory","Print the evaluation DAG in DOT format","Disable the cache for this comma separated list of tags","Do not run in parallel time critical executions on the …","Give to the solution some extra time before being killed","Copy the executables to the bin/ folder","Copy the logs of some executions to the bin/logs/ folder","Execute only the solutions whose names start with the …","Evaluate only the solution with the specified path","Force this seed instead of a random one in Terry.","Look at most for this number of parents for searching the …","Clear the task directory and exit","Where to store the storage files, including the cache","Maximum size of the storage directory, in MiB","When the storage is flushed, this is the new maximum …","The number of CPU cores to use","Include the solutions in the booklet","Do not build the statement files and the booklets","Verbose mode (-v, -vv, -vvv, etc.). Note that it does not …","Run the evaluation on a remote server instead of locally","List of sanity checks to skip.","The name to use for the workers or for the client in …","Options for spawning a client or a server.","Show task information","Wipe the internal storage of task-maker","Run the sandbox instead of the normal task-maker.","Options for spawning a client or a server.","Spawn a server instead of the normal task-maker","Spawn a worker instead of the normal task-maker","","Address to bind the server on for listening for the …","Address to bind the server on for listening for the …","Password for the connection of the clients","Password for the connection of the workers","","Address to use to connect to a remote server","Make an <code>EvaluationConfig</code> from this command line options.","Get the store directory of this configuration. If nothing …","","","Print to <code>stdout</code> the nodes of this <code>ExecutionDAG</code> in DOT …","","Parse the server url address and try to connect to that …","","Run the sandbox for an execution.","Run the sandbox integrated in the task-maker binary, by …","","Entry point for the server.","","Entry point for the worker.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,0,4,4,4,4,0,5,2,2,2,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,4,5,6,2,3,4,5,6,2,2,3,3,4,4,5,5,2,2,3,3,3,4,4,5,5],"f":[null,null,null,null,[[["opt",3]],[["result",4],["error",3],["evaluation",4]]],[[["opt",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["evaluationconfig",3]],[[],["pathbuf",3]],[[]],null,[[["executiondag",3]]],null,[[["asref",8],["str",15],["u16",15]],[["error",3],["result",4]]],null,[[]],null,null,[[["opt",3],["serveroptions",3]]],null,[[["opt",3],["workeroptions",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["serveroptions",3]],[[],["workeroptions",3]],[[],["selfexecsandboxrunner",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["arc",3],["sandboxconfiguration",3],["atomicu32",3]],["rawsandboxresult",4]],[[],["app",3]],[[["argmatches",3]]],[[],["app",3]],[[["argmatches",3]]],[[],["app",3]],[[["argmatches",3]]],[[],["app",3]],[[["argmatches",3]]],[[["app",3]],["app",3]],[[],["bool",15]],[[["app",3]],["app",3]],[[],["option",4]],[[],["bool",15]],[[["app",3]],["app",3]],[[],["bool",15]],[[["app",3]],["app",3]],[[],["bool",15]]],"p":[[4,"Evaluation"],[3,"Opt"],[4,"Remote"],[3,"ServerOptions"],[3,"WorkerOptions"],[3,"SelfExecSandboxRunner"]]},\
"task_maker_store":{"doc":"This crate manages the file store on disk, a folder with …","t":[3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ReadFileIterator","FileStore","FileStoreKey","FileStoreHandle","new","store","get","from_file","from_content","path","key","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","drop","drop","next","clone","clone","cmp","eq","ne","eq","partial_cmp","to_string","fmt","fmt","fmt","hash","serialize","deserialize","new"],"q":["task_maker_store","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Struct implementing the Iterator trait which will iterate …","A file store will manage all the files in the store …","Handle of a file in the <code>FileStore</code>, this must be …","An handle to a specific file inside the store, until this …","Make a new <code>FileStore</code> in the specified base directory, …","Given an iterator of <code>Vec<u8></code> consume all of it writing …","Returns an handle to the file with that key or <code>None</code> if it…","Make a new <code>FileStoreKey</code> from a file on disk. The file …","Make a new <code>FileStoreKey</code> from an in-memory file.","The path to the file pointed by this handle.","The key of the file pointed by this handle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Make a new iterator reading the file at that path"],"i":[0,0,0,0,1,1,1,2,2,3,3,4,4,4,4,4,4,4,4,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,1,3,4,2,3,2,2,2,3,2,2,1,3,2,2,2,2,4],"f":[null,null,null,null,[[["into",8],["u64",15],["pathbuf",3]],[["result",4],["error",3],["filestore",3]]],[[["filestorekey",3]],[["error",3],["result",4],["filestorehandle",3]]],[[["filestorekey",3]],[["filestorehandle",3],["option",4]]],[[["asref",8],["path",3]],[["filestorekey",3],["error",3],["result",4]]],[[],["filestorekey",3]],[[],["path",3]],[[],["filestorekey",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[],["filestorekey",3]],[[]],[[["filestorekey",3]],["ordering",4]],[[["filestorekey",3]],["bool",15]],[[["filestorekey",3]],["bool",15]],[[],["bool",15]],[[["filestorekey",3]],[["ordering",4],["option",4]]],[[],["string",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[],["result",4]],[[],["result",4]],[[["asref",8],["path",3]],[["readfileiterator",3],["error",3],["result",4]]]],"p":[[3,"FileStore"],[3,"FileStoreKey"],[3,"FileStoreHandle"],[3,"ReadFileIterator"]]},\
"task_maker_test":{"doc":"","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["TestInterface","TestInterfaceSuccessful","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","fmt","fmt","run_local","run_remote","fail","success","time_limit","memory_limit","max_score","must_compile","must_not_compile","not_compiled","subtask_scores","solution_score","solution_statuses","generation_statuses","generation_fails","validation_fails"],"q":["task_maker_test","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Interface for testing a task.","Interface for testing a task.","","","","","","","","","","","","","","","","","","","","Evaluate the task using a “remote” setup (spawning a …","Expect task-maker to fail with the specified message.","Expect task-maker not to fail, unlocking the possibility …","Check that the time limit is the one specified.","Check that the memory limit is the one specified.","Check that the max score of the task is the one specified.","Check that the specified file is compiled successfully.","Check that the specified file fails to compile.","Check that the specified file is not compiled.","Check that the subtasks have the following scores.","Check that the solution scores those values for each …","Check that the statuses of the solution starts with the …","Check that the statuses of the generation are those.","Check that the generators fail with the specified …","Check that the validations fail with the specified …"],"i":[0,0,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,1,2,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2],"f":[null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["into",8],["pathbuf",3]]],[[["into",8],["pathbuf",3]]],[[["asref",8],["str",15]]],[[],["testinterfacesuccessful",3]],[[["f64",15]]],[[["u64",15]]],[[["f64",15]]],[[["into",8],["pathbuf",3]]],[[["into",8],["pathbuf",3]]],[[["into",8],["pathbuf",3]]],[[["intoiterator",8]]],[[["intoiterator",8],["into",8],["pathbuf",3]]],[[["intoiterator",8],["into",8],["pathbuf",3]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]]],"p":[[3,"TestInterface"],[3,"TestInterfaceSuccessful"]]},\
"task_maker_typescriptify":{"doc":"","t":[5,5],"n":["fix_bug_1","main"],"q":["task_maker_typescriptify",""],"d":["Apply the fix from PR#1 fixing some invalid types.",""],"i":[0,0],"f":[[[["asref",8],["str",15]],["string",3]],[[]]],"p":[]}\
}');
initSearch(searchIndex);