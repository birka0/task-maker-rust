var N=null,E="",T="t",U="u",searchIndex={};
var R=["readfileiterator","result","filestorekey","error","filestore","option","try_from","try_into","borrow","borrow_mut","type_id","to_string","ordering","formatter","backtrace","FileStoreError","ReadFileIterator","FileStoreKey","FileStore","cpu_time","sys_time","wall_time","Uuid of the file.","description","fileuuid","pathbuf","executionuuid","execution","executionlimits","to_owned","clone_into","typeid","default","executioncommand","serialize","deserialize","ProvidedFile","ExecutionDAGData","ExecutionDAG","ExecutionInput","ExecutionCallbacks","Execution","ExecutionLimits","ExecutionResourcesUsage","ExecutionResult","FileCallbacks","ExecutionCommand","ExecutionStatus","FileUuid","string","partial_cmp","executions","task_maker_exec","task_maker_exec::DAGError","The duplicated UUID.","resources","task_maker_exec::SandboxResult","executiondag","channelreceiver","channelsender","evaluate","task_maker_exec::proto","ProvideFile","sandboxresult","task_maker_exec::executors","sandbox","ExecutionDAGWatchSet","WorkerJob","ExecutorStatus","DAGError","SandboxResult","ExecutorClient","LocalExecutor","ExecutorClientMessage","ExecutorServerMessage","WorkerClientMessage","WorkerServerMessage","FileProtocol","ChannelFileIterator","ChannelFileSender","into_iter","local_path","executable","dependency","language","gradermap","sourcefile","compilation_command","Command to use to compile the source file. The blanked…","compilation_args","Arguments to pass to the compiler to compile to source…","compilation_add_file","Add a file to the compilation command if the language…","compilation_dependencies","The dependencies to put inside the compilation sandbox.…","runtime_command","Command to use to run the program. It defaults to the…","runtime_args","Arguments to pass to the executable to start the evaluation.","runtime_add_file","Add a file to the runtime command if the language requires…","runtime_dependencies","The dependencies to put inside the execution sandbox. This…","executable_name","The name of the executable to call inside the sandbox. It…","Dependency","SourceFile","GraderMap","LanguageManager","StaticFile","task_maker_format","intoiterator","task_maker_format::ui","task_maker_format::ui::UIExecutionStatus","task_maker_format::ui::UIMessage","The id of the subtask.","The id of the testcase.","testcase","The status of the solution.","The path of the solution.","subtask","solution","uimessage","evaluationdata","task_maker_format::ioi","on_message","EvaluationData","SubtaskInfo","TestcaseInfo","InputGenerator","InputValidator","OutputGenerator","TestcaseScoreAggregator","UIExecutionStatus","UIMessage","UIMessageSender","TaskFormat"];
searchIndex["task_maker"]={"doc":E,"i":[],"p":[]};
searchIndex["task_maker_dag"]={"doc":"DAG generation and resulting structures for `Execution`s…","i":[[3,R[36],"task_maker_dag","A wrapper around a File provided by the client, this means…",N,N],[12,"file",E,"The file handle.",0,N],[12,"key",E,"The key in the FileStore.",0,N],[12,R[81],E,"Path to the file in the client.",0,N],[3,R[37],E,"Serializable part of the execution DAG: everything except…",N,N],[12,"provided_files",E,"All the files provided by the client.",1,N],[12,R[51],E,"All the executions to run.",1,N],[3,R[38],E,"A computation DAG, this is not serializable because it…",N,N],[12,"data",E,"Serializable part of the DAG with all the executions and…",2,N],[12,"execution_callbacks",E,"Actual callbacks of the executions.",2,N],[12,"file_callbacks",E,"Actual callbacks of the files.",2,N],[3,R[39],E,"An input file of an `Execution`, can be marked as…",N,N],[12,"file",E,R[22],3,N],[12,R[82],E,"Whether this file should be marked as executable.",3,N],[3,R[40],E,"The callbacks to be called when an event of an execution…",N,N],[12,"on_start",E,"The callbacks called when the execution starts.",4,N],[12,"on_done",E,"The callbacks called when the execution has completed.",4,N],[12,"on_skip",E,"The callbacks called when the execution has been skipped.",4,N],[3,R[41],E,"An `Execution` is a process that will be executed by a…",N,N],[12,"uuid",E,"Uuid of the execution.",5,N],[12,R[23],E,"Description of the execution.",5,N],[12,"command",E,"Which command to execute.",5,N],[12,"args",E,"The list of command line arguments.",5,N],[12,"stdin",E,"Optional standard input to pass to the program.",5,N],[12,"stdout",E,"Optional standard output to capture.",5,N],[12,"stderr",E,"Optional standard error to capture.",5,N],[12,"inputs",E,"List of input files that should be put inside the sandbox.",5,N],[12,"outputs",E,"List of the output files that should be capture from the…",5,N],[12,"limits",E,"Limits on the execution.",5,N],[3,R[42],E,"Limits on an `Execution`. On some worker platforms some of…",N,N],[12,R[19],E,"Limit on the userspace cpu time of the process, in seconds.",6,N],[12,R[20],E,"Limit on the kernels pace cpu time of the process, in…",6,N],[12,R[21],E,"Limit on the total time of execution, in seconds. This…",6,N],[12,"memory",E,"Limit on the number of KiB the process can use in any…",6,N],[12,"nproc",E,"Limit on the number of threads/processes the process can…",6,N],[12,"nofile",E,"Limit on the number of file descriptors the process can…",6,N],[12,"fsize",E,"Maximum size of the files (in bytes) the process can…",6,N],[12,"memlock",E,"RLIMIT_MEMLOCK",6,N],[12,"stack",E,"Limit on the stack size for the process. 0 means unlimited.",6,N],[3,R[43],E,"Resources used during the execution, note that on some…",N,N],[12,R[19],E,"Number of seconds the process used in user space.",7,N],[12,R[20],E,"Number of seconds the process used in kernel space.",7,N],[12,R[21],E,"Number of seconds from the start to the end of the process.",7,N],[12,"memory",E,"Number of KiB used at most by the process.",7,N],[3,R[44],E,"The result of an `Execution`.",N,N],[12,"uuid",E,"Uuid of the completed execution.",8,N],[12,"status",E,"Status of the completed execution.",8,N],[12,R[55],E,"Resources used by the execution.",8,N],[3,R[45],E,"The callbacks that will trigger when the file is ready.",N,N],[12,"write_to",E,"Destination of the file if it has to be stored in the disk…",9,N],[12,"get_content",E,"Callback to be called with the first bytes of the file.",9,N],[3,"File",E,"An handle to a file in the evaluation, this only tracks…",N,N],[12,"uuid",E,R[22],10,N],[12,R[23],E,"Description of the file.",10,N],[4,R[46],E,"Command of an `Execution` to execute.",N,N],[13,"System",E,"A system command, the workers will search in their `$PATH`…",11,N],[13,"Local",E,"A command relative to the sandbox directory, not to be…",11,N],[4,R[47],E,"Status of a completed `Execution`.",N,N],[13,"Success",E,"The program exited with status 0 within the limits.",12,N],[13,"ReturnCode",E,"The program exited with a non-zero status code, which is…",12,N],[13,"Signal",E,"The program stopped due to a signal, the number and the…",12,N],[13,"TimeLimitExceeded",E,"The program hasn't exited within the time limit constraint.",12,N],[13,"SysTimeLimitExceeded",E,"The program hasn't exited within the sys time limit…",12,N],[13,"WallTimeLimitExceeded",E,"The program hasn't exited within the wall time limit…",12,N],[13,"MemoryLimitExceeded",E,"The program has exceeded the memory limit.",12,N],[13,"InternalError",E,"The sandbox failed to execute the program with the…",12,N],[11,"new",E,"Create an empty ExecutionDAG, without files and executions.",2,[[],[R[57]]]],[11,"provide_file",E,"Provide a file for the computation.",2,[[["self"],["into",[R[25]]],["file"],[R[25]]],[[R[3]],[R[1],[R[3]]]]]],[11,"add_execution",E,"Add an execution to the DAG.",2,[[["self"],[R[27]]]]],[11,"write_file_to",E,"When `file` is ready it will be written to `path`. The…",2,[[["self"],["into",[R[24]]],[R[24]],["into",[R[25]]],[R[25]]]]],[11,"get_file_content",E,"Call `callback` with the first `limit` bytes of the file…",2,[[["self"],["into",[R[24]]],[R[24]],["usize"],["f"]]]],[11,"on_execution_start",E,"Add a callback that will be called when the execution…",2,[[["self"],["f"],[R[26]]]]],[11,"on_execution_done",E,"Add a callback that will be called when the execution ends.",2,[[["self"],["f"],[R[26]]]]],[11,"on_execution_skip",E,"Add a callback that will be called when the execution is…",2,[[["self"],["f"],[R[26]]]]],[11,"new",E,"Make an empty limits where all the limits are disabled.…",6,[[],[R[28]]]],[11,R[19],E,"Set the cpu time limit in seconds.",6,[[["self"],["f64"]],["self"]]],[11,R[20],E,"Set the sys time limit in seconds.",6,[[["self"],["f64"]],["self"]]],[11,R[21],E,"Set the wall time limit in seconds.",6,[[["self"],["f64"]],["self"]]],[11,"memory",E,"Set the memory limit in KiB.",6,[[["self"],["u64"]],["self"]]],[11,"nproc",E,"Set the maximum number of processes/threads.",6,[[["self"],["u32"]],["self"]]],[11,"nofile",E,"Set the maximum number of opened file descriptors.",6,[[["self"],["u32"]],["self"]]],[11,"fsize",E,"Set the maximum size of the files (in bytes) the process…",6,[[["self"],["u64"]],["self"]]],[11,"memlock",E,"Set the memlock limit.",6,[[["self"],["u64"]],["self"]]],[11,"stack",E,"Set the stack limit.",6,[[["self"],["u64"]],["self"]]],[11,"new",E,"Create a basic `Execution` with the default limits.",5,[[[R[49]],[R[33]],["into",[R[49]]]],[R[27]]]],[11,"dependencies",E,"List of all the File dependencies of the execution,…",5,[[["self"]],[["vec",[R[24]]],[R[24]]]]],[11,"outputs",E,"List of all the File produced by the execution, including…",5,[[["self"]],[["vec",[R[24]]],[R[24]]]]],[11,"args",E,"Sets the command line arguments of the execution. Calling…",5,[[["self"],[R[111]]],["self"]]],[11,"stdin",E,"Bind the standard input to the specified file. Calling…",5,[[["self"],["into",[R[24]]],[R[24]]],["self"]]],[11,"stdout",E,"Handle to the standard output of the execution. This…",5,[[["self"]],["file"]]],[11,"stderr",E,"Handle to the standard error of the execution. This should…",5,[[["self"]],["file"]]],[11,"input",E,"Bind a file inside the sandbox to the specified file.…",5,[[["self"],["into",[R[24]]],[R[24]],["into",[R[25]]],["bool"],[R[25]]],["self"]]],[11,"output",E,"Handle to a file produced by the execution. This should be…",5,[[["self"],["debug"],["into",[R[25]]],[R[25]]],["file"]]],[11,"limits_mut",E,"Get a mutable reference to the execution limits.",5,[[["self"]],[R[28]]]],[11,"new",E,"Create a new file handle.",10,[[[R[49]],["into",[R[49]]]],["file"]]],[6,"ExecutionUuid",E,"The identifier of an execution, it's globally unique and…",N,N],[6,"WorkerUuid",E,"The identifier of a worker, it's globally unique and…",N,N],[6,"OnStartCallback",E,"Type of the callback called when an `Execution` starts.",N,N],[6,"OnDoneCallback",E,"Type of the callback called when an `Execution` ends.",N,N],[6,"OnSkipCallback",E,"Type of the callback called when an `Execution` is skipped.",N,N],[6,R[48],E,"The identifier of a file, it's globally unique and it…",N,N],[6,"GetContentCallback",E,"Type of the callback called when a file is returned to the…",N,N],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[30],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[6],E,E,0,[[[U]],[R[1]]]],[11,R[7],E,E,0,[[],[R[1]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[R[31]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[6],E,E,1,[[[U]],[R[1]]]],[11,R[7],E,E,1,[[],[R[1]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[R[31]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[6],E,E,2,[[[U]],[R[1]]]],[11,R[7],E,E,2,[[],[R[1]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[R[31]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[30],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[6],E,E,3,[[[U]],[R[1]]]],[11,R[7],E,E,3,[[],[R[1]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[R[31]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[6],E,E,4,[[[U]],[R[1]]]],[11,R[7],E,E,4,[[],[R[1]]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[R[31]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[30],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[6],E,E,5,[[[U]],[R[1]]]],[11,R[7],E,E,5,[[],[R[1]]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[R[31]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[30],E,E,6,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[6],E,E,6,[[[U]],[R[1]]]],[11,R[7],E,E,6,[[],[R[1]]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[R[31]]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[30],E,E,7,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[6],E,E,7,[[[U]],[R[1]]]],[11,R[7],E,E,7,[[],[R[1]]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[R[31]]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[30],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[6],E,E,8,[[[U]],[R[1]]]],[11,R[7],E,E,8,[[],[R[1]]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[R[31]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[6],E,E,9,[[[U]],[R[1]]]],[11,R[7],E,E,9,[[],[R[1]]]],[11,R[8],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[R[31]]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[30],E,E,10,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[6],E,E,10,[[[U]],[R[1]]]],[11,R[7],E,E,10,[[],[R[1]]]],[11,R[8],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[R[31]]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[30],E,E,11,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[6],E,E,11,[[[U]],[R[1]]]],[11,R[7],E,E,11,[[],[R[1]]]],[11,R[8],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[R[31]]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[30],E,E,12,[[["self"],[T]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[6],E,E,12,[[[U]],[R[1]]]],[11,R[7],E,E,12,[[],[R[1]]]],[11,R[8],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[R[31]]]],[11,"as_ref",E,E,10,[[["self"]],[R[24]]]],[11,R[32],E,"Default sane values for the execution limits, the limits…",6,[[],["self"]]],[11,R[32],E,E,4,[[],["self"]]],[11,R[32],E,E,9,[[],["filecallbacks"]]],[11,"clone",E,E,0,[[["self"]],["providedfile"]]],[11,"clone",E,E,11,[[["self"]],[R[33]]]],[11,"clone",E,E,3,[[["self"]],["executioninput"]]],[11,"clone",E,E,5,[[["self"]],[R[27]]]],[11,"clone",E,E,6,[[["self"]],[R[28]]]],[11,"clone",E,E,12,[[["self"]],["executionstatus"]]],[11,"clone",E,E,7,[[["self"]],["executionresourcesusage"]]],[11,"clone",E,E,8,[[["self"]],["executionresult"]]],[11,"clone",E,E,10,[[["self"]],["file"]]],[11,R[50],E,E,10,[[["self"],["file"]],[[R[5],[R[12]]],[R[12]]]]],[11,"lt",E,E,10,[[["self"],["file"]],["bool"]]],[11,"le",E,E,10,[[["self"],["file"]],["bool"]]],[11,"gt",E,E,10,[[["self"],["file"]],["bool"]]],[11,"ge",E,E,10,[[["self"],["file"]],["bool"]]],[11,"eq",E,E,10,[[["self"],["file"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["file"]],["bool"]]],[11,"from",E,E,13,[[["file"]],["self"]]],[11,"from",E,E,13,[[["file"]],["self"]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[[R[3]],[R[1],[R[3]]]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[[R[3]],[R[1],[R[3]]]]]],[11,R[34],E,E,0,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,1,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,11,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,3,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,5,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,6,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,12,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,7,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,8,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,10,[[["self"],["__s"]],[R[1]]]],[11,R[35],E,E,0,[[["__d"]],[R[1]]]],[11,R[35],E,E,1,[[["__d"]],[R[1]]]],[11,R[35],E,E,11,[[["__d"]],[R[1]]]],[11,R[35],E,E,3,[[["__d"]],[R[1]]]],[11,R[35],E,E,5,[[["__d"]],[R[1]]]],[11,R[35],E,E,6,[[["__d"]],[R[1]]]],[11,R[35],E,E,12,[[["__d"]],[R[1]]]],[11,R[35],E,E,7,[[["__d"]],[R[1]]]],[11,R[35],E,E,8,[[["__d"]],[R[1]]]],[11,R[35],E,E,10,[[["__d"]],[R[1]]]]],"p":[[3,R[36]],[3,R[37]],[3,R[38]],[3,R[39]],[3,R[40]],[3,R[41]],[3,R[42]],[3,R[43]],[3,R[44]],[3,R[45]],[3,"File"],[4,R[46]],[4,R[47]],[6,R[48]]]};
searchIndex["task_maker_exec"]={"doc":"DAG execution dispatching the tasks to the workers.","i":[[3,R[71],R[52],"This is a client of the `Executor`, the client is who…",N,N],[3,R[66],E,"List of the interesting files and executions, only the…",N,N],[12,R[51],E,"Set of the handles of the executions that have at least a…",0,N],[12,"files",E,"Set of the handles of the files that have at least a…",0,N],[3,R[67],E,"A job that is sent to a worker, this should include all…",N,N],[12,R[27],E,"What the worker should do.",1,N],[12,"dep_keys",E,"The FileStoreKeys the worker has to know to start the…",1,N],[3,R[68],E,"The current status of the `Executor`, this is sent to the…",N,N],[12,"connected_workers",E,"List of the connected workers with their uuid, name and if…",2,N],[12,"running_dags",E,"Number of running DAGs by the server.",2,N],[12,"ready_execs",E,"Number of executions waiting for workers.",2,N],[12,"waiting_execs",E,"Number of executions waiting for dependencies.",2,N],[3,"Sandbox",E,"Wrapper around the sandbox. Cloning this struct will keep…",N,N],[4,R[69],E,"An error in the DAG structure.",N,N],[13,"MissingFile",E,"A file is used as input in an execution but it's missing,…",3,N],[12,"uuid",R[53],"The UUID of the missing file.",3,N],[12,R[23],E,"The description of the missing file.",3,N],[13,"MissingExecution",R[52],"A callback is registered on an execution but it's missing.",3,N],[12,"uuid",R[53],"The UUID of the missing execution.",3,N],[13,"CycleDetected",R[52],"There is a dependency cycle in the DAG.",3,N],[12,R[23],R[53],"The description of an execution inside the cycle.",3,N],[13,"DuplicateExecutionUUID",R[52],"There is a duplicate execution UUID.",3,N],[12,"uuid",R[53],R[54],3,N],[13,"DuplicateFileUUID",R[52],"There is a duplicate file UUID.",3,N],[12,"uuid",R[53],R[54],3,N],[4,R[70],R[52],"Result of the execution of the sandbox.",N,N],[13,"Success",E,"The sandbox exited successfully, the statistics about the…",4,N],[12,"exit_status",R[56],"The exit status of the process.",4,N],[12,"signal",E,"The signal that caused the process to exit.",4,N],[12,R[55],E,"Resources used by the process.",4,N],[13,"Failed",R[52],"The sandbox failed to execute the process, an error…",4,N],[12,R[3],R[56],"The error reported by the sandbox.",4,N],[5,"serialize_into",R[52],"Serialize a message into the sender serializing it.",N,[[[R[59]],[T]],[[R[3]],[R[1],[R[3]]]]]],[5,"deserialize_from",E,"Deserialize a message from the channel and return it.",N,[[[R[58]]],[[R[1],[R[3]]],[R[3]]]]],[5,"eval_dag_locally",E,"Evaluate a DAG locally spawning a new `LocalExecutor` with…",N,[[[R[57]],["into",[R[25]]],["usize"],[R[25]]]]],[11,R[60],E,"Begin the evaluation sending the DAG to the server,…",5,[[[R[57]],[R[58]],[R[59]]],[[R[3]],[R[1],[R[3]]]]]],[0,"executors",E,"The supported executors.",N,N],[3,R[72],R[64],"An Executor that runs locally by spawning a number of…",N,N],[12,"num_workers",E,"The number of local workers to spawn.",6,N],[11,"new",E,"Make a new `LocalExecutor` based on a `FileStore` and…",6,[[["arc",["mutex"]],["mutex",[R[4]]],["usize"]],["localexecutor"]]],[11,R[60],E,"Starts the Executor spawning the workers on new threads…",6,[[["self"],[R[58]],[R[59]]],[[R[3]],[R[1],[R[3]]]]]],[0,"proto",R[52],"The protocol related structs and enums.",N,N],[3,R[78],R[61],"An iterator over the byte chunks sent during the…",N,N],[3,R[79],E,"Utility function to send a file to a channel using…",N,N],[4,R[73],E,"Messages that the client sends to the server.",N,N],[13,"Evaluate",E,"The client is asking to evaluate a DAG.",7,N],[12,"dag","task_maker_exec::proto::ExecutorClientMessage","The DAG to evaluate.",7,N],[12,"callbacks",E,"The list of the executions and files to keep track of.",7,N],[13,R[62],R[61],"The client is providing a file. After this message there…",7,N],[13,"Stop",E,"The client is asking to stop the evaluation. All the…",7,N],[13,"Status",E,"The client is asking for the server status. After this…",7,N],[4,R[74],E,"Messages that the server sends to the client.",N,N],[13,"AskFile",E,"The server needs the file with that Uuid. The client must…",8,N],[13,R[62],E,"The server is sending a file. After this message there is…",8,N],[13,"NotifyStart",E,"The execution has started on a worker.",8,N],[13,"NotifyDone",E,"The execution has completed with that result.",8,N],[13,"NotifySkip",E,"The execution has been skipped.",8,N],[13,"Error",E,"There was an error during the evaluation.",8,N],[13,"Status",E,"The server status as asked by the client.",8,N],[13,"Done",E,"The evaluation of the DAG is complete, this message will…",8,N],[4,R[75],E,"Messages sent by the workers to the server.",N,N],[13,"GetWork",E,"The worker is ready for some job. The worker will wait for…",9,N],[13,"WorkerDone",E,"The worker completed the job with this result.",9,N],[13,R[62],E,"The worker is sending a file to the server. After this…",9,N],[13,"AskFile",E,"The worker needs a file from the server. The server should…",9,N],[4,R[76],E,"Messages sent by the server to the worker.",N,N],[13,"Work",E,"The job the worker should do. Boxed to reduce the enum size.",10,N],[13,R[62],E,"The file the workers as asked After this message there is…",10,N],[4,R[77],E,"Messages sent during the FileProtocol operation, during…",N,N],[13,"Data",E,"A chunk of data.",11,N],[13,"End",E,"The end of the stream.",11,N],[11,"new",E,"Create a new iterator over a receiver channel.",12,[[[R[58]]],["channelfileiterator"]]],[11,"send",E,"Send a local file to a channel using `FileProtocol`.",13,[[["asref",["path"]],["path"],[R[59]]],[[R[3]],[R[1],[R[3]]]]]],[11,"new",R[52],"Make a new sandbox for the specified execution, copying…",14,[[["path"],["hashmap"],[R[4]],[R[27]]],[[R[65]],[R[3]],[R[1],[R[65],R[3]]]]]],[11,"run",E,"Starts the sandbox and blocks the thread until the sandbox…",14,[[["self"]],[[R[1],[R[63],R[3]]],[R[63]],[R[3]]]]],[11,"kill",E,"Tell the sandbox process to kill the underlying process,…",14,[[["self"]]]],[11,"keep",E,"Make the sandbox persistent, the sandbox directory won't…",14,[[["self"]]]],[11,"stdout_path",E,"Path of the file where the standard output is written to.",14,[[["self"]],[R[25]]]],[11,"stderr_path",E,"Path of the file where the standard error is written to.",14,[[["self"]],[R[25]]]],[11,"output_path",E,"Path of the file where that output file is written to.",14,[[["self"],["path"]],[R[25]]]],[6,"ChannelSender",E,"The channel part that sends data.",N,N],[6,"ChannelReceiver",E,"The channel part that receives data.",N,N],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[6],E,E,5,[[[U]],[R[1]]]],[11,R[7],E,E,5,[[],[R[1]]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[R[31]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[6],E,E,0,[[[U]],[R[1]]]],[11,R[7],E,E,0,[[],[R[1]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[R[31]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[30],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[6],E,E,1,[[[U]],[R[1]]]],[11,R[7],E,E,1,[[],[R[1]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[R[31]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[6],E,E,2,[[[U]],[R[1]]]],[11,R[7],E,E,2,[[],[R[1]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[R[31]]]],[11,R[29],E,E,14,[[["self"]],[T]]],[11,R[30],E,E,14,[[["self"],[T]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[6],E,E,14,[[[U]],[R[1]]]],[11,R[7],E,E,14,[[],[R[1]]]],[11,R[8],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[R[31]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[["self"]],[R[49]]]],[11,R[6],E,E,3,[[[U]],[R[1]]]],[11,R[7],E,E,3,[[],[R[1]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[R[31]]]],[11,"as_fail",E,E,3,[[["self"]],["fail"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[6],E,E,4,[[[U]],[R[1]]]],[11,R[7],E,E,4,[[],[R[1]]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[R[31]]]],[11,"from",R[64],E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[6],E,E,6,[[[U]],[R[1]]]],[11,R[7],E,E,6,[[],[R[1]]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[R[31]]]],[11,R[80],R[61],E,12,[[],["i"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[6],E,E,12,[[[U]],[R[1]]]],[11,R[7],E,E,12,[[],[R[1]]]],[11,R[8],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[R[31]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[6],E,E,13,[[[U]],[R[1]]]],[11,R[7],E,E,13,[[],[R[1]]]],[11,R[8],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[R[31]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[6],E,E,7,[[[U]],[R[1]]]],[11,R[7],E,E,7,[[],[R[1]]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[R[31]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[6],E,E,8,[[[U]],[R[1]]]],[11,R[7],E,E,8,[[],[R[1]]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[R[31]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[6],E,E,9,[[[U]],[R[1]]]],[11,R[7],E,E,9,[[],[R[1]]]],[11,R[8],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[R[31]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[6],E,E,10,[[[U]],[R[1]]]],[11,R[7],E,E,10,[[],[R[1]]]],[11,R[8],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[R[31]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[6],E,E,11,[[[U]],[R[1]]]],[11,R[7],E,E,11,[[],[R[1]]]],[11,R[8],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[R[31]]]],[11,"clone",R[52],E,1,[[["self"]],["workerjob"]]],[11,"clone",E,E,14,[[["self"]],[R[65]]]],[11,"next",R[61],E,12,[[["self"]],[R[5]]]],[11,"fmt",R[52],E,3,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",R[61],E,7,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",R[52],E,4,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,14,[[["self"],[R[13]]],[R[1]]]],[11,"name",E,E,3,[[["self"]],[[R[5],["str"]],["str"]]]],[11,"cause",E,E,3,[[["self"]],[["fail"],[R[5],["fail"]]]]],[11,R[14],E,E,3,[[["self"]],[[R[5],[R[14]]],[R[14]]]]],[11,R[34],E,E,0,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,1,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,2,[[["self"],["__s"]],[R[1]]]],[11,R[34],R[61],E,7,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,8,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,9,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,10,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,11,[[["self"],["__s"]],[R[1]]]],[11,R[35],R[52],E,0,[[["__d"]],[R[1]]]],[11,R[35],E,E,1,[[["__d"]],[R[1]]]],[11,R[35],E,E,2,[[["__d"]],[R[1]]]],[11,R[35],R[61],E,7,[[["__d"]],[R[1]]]],[11,R[35],E,E,8,[[["__d"]],[R[1]]]],[11,R[35],E,E,9,[[["__d"]],[R[1]]]],[11,R[35],E,E,10,[[["__d"]],[R[1]]]],[11,R[35],E,E,11,[[["__d"]],[R[1]]]]],"p":[[3,R[66]],[3,R[67]],[3,R[68]],[4,R[69]],[4,R[70]],[3,R[71]],[3,R[72]],[4,R[73]],[4,R[74]],[4,R[75]],[4,R[76]],[4,R[77]],[3,R[78]],[3,R[79]],[3,"Sandbox"]]};
searchIndex["task_maker_format"]={"doc":"TODO rustdoc","i":[[3,R[106],R[110],"Wrapper around `task_maker_lang::SourceFile` that also…",N,N],[3,R[126],E,"The data for an evaluation, including the DAG and the UI…",N,N],[12,"dag",E,"The DAG with the evaluation data.",0,N],[12,"sender",E,"The sender of the UI.",0,N],[0,"ioi",E,"The IOI task format.",N,N],[3,"Task",R[124],"Information about a generic IOI task.",N,N],[12,"path",E,"Path of the directory of the task.",1,N],[12,"task_type",E,"The type of the task.",1,N],[12,"name",E,"The name of the task (the short one).",1,N],[12,"title",E,"The title of the task (the long one).",1,N],[12,"time_limit",E,"The time limit for the execution of the solutions, if…",1,N],[12,"memory_limit",E,"The memory limit in MiB of the execution of the solution,…",1,N],[12,"infile",E,"The input file for the solutions, usually…",1,N],[12,"outfile",E,"The output file for the solutions, usually…",1,N],[12,"subtasks",E,"The list of the subtasks.",1,N],[12,"checker",E,"The checker to use for this task.",1,N],[12,"testcase_score_aggregator",E,"The aggregator to use to compute the score of the subtask…",1,N],[12,"grader_map",E,"The graders registered for this task.",1,N],[3,R[127],E,"A subtask of a IOI task.",N,N],[12,"id",E,R[115],2,N],[12,"max_score",E,"The maximum score of the subtask, must be >= 0.",2,N],[12,"testcases",E,"The testcases inside this subtask.",2,N],[3,R[128],E,"A testcase of a IOI task.",N,N],[12,"id",E,R[116],3,N],[12,"input_generator",E,"The generator of the input file for this testcase.",3,N],[12,"input_validator",E,"The validator of the input file for this testcase.",3,N],[12,"output_generator",E,"The generator of the output file for this testcase.",3,N],[4,"Checker",E,"Which tool to use to compute the score on a testcase given…",N,N],[13,"WhiteDiff",E,"Use a built-in white diff checker that scores 1.0 if the…",4,N],[13,"Custom",E,"Use a custom checker based on an executable that can…",4,N],[4,R[129],E,"The source of the input files. It can either be a…",N,N],[13,R[109],E,"Use the static file as input. The file will be copied…",5,N],[13,"Custom",E,"Use a custom command to generate the input file. The file…",5,N],[4,R[130],E,"An input file validator is responsible for checking that…",N,N],[13,"AssumeValid",E,"Skip the validation and assume the input file is valid.",6,N],[13,"Custom",E,"Use a custom command to check if the input file is valid.…",6,N],[4,R[131],E,"The source of the output files. It can either be a…",N,N],[13,R[109],E,"Use the static file as output. The file will be copied…",7,N],[13,"Custom",E,"Use a custom command to generate the output file. The task…",7,N],[4,R[132],E,"The aggregator of testcase scores for computing the…",N,N],[13,"Min",E,"Take the minimum of all the testcases, formally:",8,N],[13,"Sum",E,"Sum the score of all the testcases, formally:",8,N],[4,"TaskType",E,"The type of the task. This changes the behaviour of the…",N,N],[13,"Batch",E,"The solution is a single file that will be executed once…",9,N],[6,"SubtaskId",E,"In IOI tasks the subtask numbers are non-negative 0-based…",N,N],[6,"TestcaseId",E,"In IOI tasks the testcase numbers are non-negative 0-based…",N,N],[11,"new",E,"Try to make a `Task` from the specified path. Will return…",1,[[["asref",["path"]],["path"]],[[R[3]],["task"],[R[1],["task",R[3]]]]]],[11,"new",R[110],"Make a new `SourceFile`. See `task_maker_lang::SourceFile`…",10,[[[R[25]],["into",[R[25]]],[R[5],["arc"]],["arc",[R[85]]]],[[R[86]],[R[5],[R[86]]]]]],[11,"execute",E,"Prepare an execution of the source file, eventually adding…",10,[[["self"],["asref",["str"]],[R[111]],["str"],[R[123]]],[[R[1],[R[27],R[3]]],[R[3]],[R[27]]]]],[0,"ui",E,"The UI functionality for the task formats.",N,N],[3,"PrintUI",R[112],"A simple UI that will print to stdout the human readable…",N,N],[3,"RawUI",E,"This UI will print to stdout all the raw information it…",N,N],[3,R[135],E,"The sender of the UIMessage",N,N],[4,R[133],E,"The status of an execution.",N,N],[13,"Pending",E,"The `Execution` is known to the DAG and when all its…",11,N],[13,"Started",E,"The `Execution` has been started on a worker.",11,N],[12,"worker",R[113],"The UUID of the worker.",11,N],[13,"Done",R[112],"The `Execution` has been completed.",11,N],[12,R[1],R[113],"The result of the execution.",11,N],[13,"Skipped",R[112],"At least one of its dependencies have failed, the…",11,N],[4,R[134],E,"A message sent to the UI.",N,N],[13,"Compilation",E,"An update on the compilation status.",12,N],[12,"file",R[114],"The compilation of this file.",12,N],[12,"status",E,"The status of the compilation.",12,N],[13,"IOITask",R[112],"The information about the task which is being run.",12,N],[12,"task",R[114],"The task information.",12,N],[13,"IOIGeneration",R[112],"The generation of a testcase in a IOI task.",12,N],[12,R[120],R[114],R[115],12,N],[12,R[117],E,R[116],12,N],[12,"status",E,"The status of the generation.",12,N],[13,"IOIValidation",R[112],"The validation of a testcase in a IOI task.",12,N],[12,R[120],R[114],R[115],12,N],[12,R[117],E,R[116],12,N],[12,"status",E,"The status of the validation.",12,N],[13,"IOISolution",R[112],"The solution of a testcase in a IOI task.",12,N],[12,R[120],R[114],R[115],12,N],[12,R[117],E,R[116],12,N],[12,"status",E,R[118],12,N],[13,"IOIEvaluation",R[112],"The evaluation of a solution in a IOI task.",12,N],[12,R[120],R[114],R[115],12,N],[12,R[117],E,R[116],12,N],[12,R[121],E,R[119],12,N],[12,"status",E,R[118],12,N],[13,"IOIChecker",R[112],"The checking of a solution in a IOI task.",12,N],[12,R[120],R[114],R[115],12,N],[12,R[117],E,R[116],12,N],[12,R[121],E,R[119],12,N],[12,"status",E,"The status of the solution. Note that a failure of this…",12,N],[13,"IOITestcaseScore",R[112],"The score of a testcase is ready.",12,N],[12,R[120],R[114],R[115],12,N],[12,R[117],E,R[116],12,N],[12,R[121],E,R[119],12,N],[12,"score",E,"The score of the testcase.",12,N],[12,"message",E,"The message associated with the score.",12,N],[13,"IOISubtaskScore",R[112],"The score of a subtask is ready.",12,N],[12,R[120],R[114],R[115],12,N],[12,R[121],E,R[119],12,N],[12,"score",E,"The score of the subtask.",12,N],[13,"IOITaskScore",R[112],"The score of a task is ready.",12,N],[12,R[121],R[114],R[119],12,N],[12,"score",E,"The score of the task.",12,N],[4,"UIType",R[112],"The type of the UI to use, it enumerates all the known UI…",N,N],[13,"Print",E,"The PrintUI.",13,N],[13,"Raw",E,"The RawUI",13,N],[13,"Curses",E,"The CursesUI",13,N],[11,"new",E,"Make a new PrintUI.",14,[[],["printui"]]],[11,"new",E,"Make a new RawUI.",15,[[],["rawui"]]],[6,"UIChannelSender",E,"Channel type for sending `UIMessage`s.",N,N],[6,"UIChannelReceiver",E,"Channel type for receiving `UIMessage`s.",N,N],[8,"UI",E,"The trait that describes the UI functionalities.",N,N],[10,R[125],E,"Process a new UI message.",16,[[["self"],[R[122]]]]],[10,"finish",E,"Make the UI print the ending results.",16,[[["self"]]]],[11,"new",E,"Make a new pair of UIMessageSender and ChannelReceiver.",17,[[]]],[11,"send",E,"Send a message to the channel.",17,[[["self"],[R[122]]],[[R[3]],[R[1],[R[3]]]]]],[8,R[136],R[110],"Trait that defines the capabilities of a task format,…",N,N],[10,"ui",E,"Get an appropriate `UI` for this task.",18,[[["self"],["uitype"]],[["box",["ui"]],[R[3]],[R[1],["box",R[3]]]]]],[10,"execute",E,"Execute the evaluation of this task by adding the…",18,[[["self"],[R[123]]],[[R[3]],[R[1],[R[3]]]]]],[8,"UISender",E,"What can send `UIMessage`s.",N,N],[10,"send",E,"Send that `UIMessage` to the UI.",19,[[["self"],[R[122]]],[[R[3]],[R[1],[R[3]]]]]],[11,"new",E,"Crate a new `EvaluationData` returning the data and the…",0,[[]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[30],E,E,10,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[6],E,E,10,[[[U]],[R[1]]]],[11,R[7],E,E,10,[[],[R[1]]]],[11,R[8],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[R[31]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[6],E,E,0,[[[U]],[R[1]]]],[11,R[7],E,E,0,[[],[R[1]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[R[31]]]],[11,R[29],R[124],E,1,[[["self"]],[T]]],[11,R[30],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[6],E,E,1,[[[U]],[R[1]]]],[11,R[7],E,E,1,[[],[R[1]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[R[31]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[30],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[6],E,E,2,[[[U]],[R[1]]]],[11,R[7],E,E,2,[[],[R[1]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[R[31]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[30],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[6],E,E,3,[[[U]],[R[1]]]],[11,R[7],E,E,3,[[],[R[1]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[R[31]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[30],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[6],E,E,4,[[[U]],[R[1]]]],[11,R[7],E,E,4,[[],[R[1]]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[R[31]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[30],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[6],E,E,5,[[[U]],[R[1]]]],[11,R[7],E,E,5,[[],[R[1]]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[R[31]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[30],E,E,6,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[6],E,E,6,[[[U]],[R[1]]]],[11,R[7],E,E,6,[[],[R[1]]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[R[31]]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[30],E,E,7,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[6],E,E,7,[[[U]],[R[1]]]],[11,R[7],E,E,7,[[],[R[1]]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[R[31]]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[30],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[6],E,E,8,[[[U]],[R[1]]]],[11,R[7],E,E,8,[[],[R[1]]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[R[31]]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[30],E,E,9,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[6],E,E,9,[[[U]],[R[1]]]],[11,R[7],E,E,9,[[],[R[1]]]],[11,R[8],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[R[31]]]],[11,"from",R[112],E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[6],E,E,14,[[[U]],[R[1]]]],[11,R[7],E,E,14,[[],[R[1]]]],[11,R[8],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[R[31]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[6],E,E,15,[[[U]],[R[1]]]],[11,R[7],E,E,15,[[],[R[1]]]],[11,R[8],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[["self"]],[T]]],[11,R[10],E,E,15,[[["self"]],[R[31]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[6],E,E,17,[[[U]],[R[1]]]],[11,R[7],E,E,17,[[],[R[1]]]],[11,R[8],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[["self"]],[T]]],[11,R[10],E,E,17,[[["self"]],[R[31]]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[30],E,E,11,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[6],E,E,11,[[[U]],[R[1]]]],[11,R[7],E,E,11,[[],[R[1]]]],[11,R[8],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[R[31]]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[30],E,E,12,[[["self"],[T]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[6],E,E,12,[[[U]],[R[1]]]],[11,R[7],E,E,12,[[],[R[1]]]],[11,R[8],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[R[31]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[6],E,E,13,[[[U]],[R[1]]]],[11,R[7],E,E,13,[[],[R[1]]]],[11,R[8],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[R[31]]]],[11,R[125],E,E,14,[[["self"],[R[122]]]]],[11,"finish",E,E,14,[[["self"]]]],[11,R[125],E,E,15,[[["self"],[R[122]]]]],[11,"finish",E,E,15,[[["self"]]]],[11,"ui",R[124],E,1,[[["self"],["uitype"]],[["box",["ui"]],[R[3]],[R[1],["box",R[3]]]]]],[11,"execute",E,E,1,[[["self"],[R[123]]],[[R[3]],[R[1],[R[3]]]]]],[11,"clone",E,E,4,[[["self"]],["checker"]]],[11,"clone",E,E,5,[[["self"]],["inputgenerator"]]],[11,"clone",E,E,6,[[["self"]],["inputvalidator"]]],[11,"clone",E,E,7,[[["self"]],["outputgenerator"]]],[11,"clone",E,E,8,[[["self"]],["testcasescoreaggregator"]]],[11,"clone",E,E,9,[[["self"]],["tasktype"]]],[11,"clone",E,E,1,[[["self"]],["task"]]],[11,"clone",E,E,2,[[["self"]],["subtaskinfo"]]],[11,"clone",E,E,3,[[["self"]],["testcaseinfo"]]],[11,"clone",R[110],E,10,[[["self"]],[R[86]]]],[11,"clone",R[112],E,11,[[["self"]],["uiexecutionstatus"]]],[11,"clone",E,E,12,[[["self"]],[R[122]]]],[11,"deref",R[110],E,10,[[["self"]]]],[11,"deref_mut",E,E,10,[[["self"]]]],[11,"fmt",R[124],E,4,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",R[110],E,10,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",R[112],E,11,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,13,[[["self"],[R[13]]],[R[1]]]],[11,"from_str",R[124],E,8,[[["str"]],[R[1]]]],[11,"from_str",R[112],E,13,[[["str"]],[[R[1],["uitype"]],["uitype"]]]],[11,R[34],R[124],E,4,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,5,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,6,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,7,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,8,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,9,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,1,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,2,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,3,[[["self"],["__s"]],[R[1]]]],[11,R[34],R[110],E,10,[[["self"],["__s"]],[R[1]]]],[11,R[34],R[112],E,11,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,12,[[["self"],["__s"]],[R[1]]]],[11,R[35],R[124],E,4,[[["__d"]],[R[1]]]],[11,R[35],E,E,5,[[["__d"]],[R[1]]]],[11,R[35],E,E,6,[[["__d"]],[R[1]]]],[11,R[35],E,E,7,[[["__d"]],[R[1]]]],[11,R[35],E,E,8,[[["__d"]],[R[1]]]],[11,R[35],E,E,9,[[["__d"]],[R[1]]]],[11,R[35],E,E,1,[[["__d"]],[R[1]]]],[11,R[35],E,E,2,[[["__d"]],[R[1]]]],[11,R[35],E,E,3,[[["__d"]],[R[1]]]],[11,R[35],R[110],E,10,[[["__d"]],[R[1]]]],[11,R[35],R[112],E,11,[[["__d"]],[R[1]]]],[11,R[35],E,E,12,[[["__d"]],[R[1]]]]],"p":[[3,R[126]],[3,"Task"],[3,R[127]],[3,R[128]],[4,"Checker"],[4,R[129]],[4,R[130]],[4,R[131]],[4,R[132]],[4,"TaskType"],[3,R[106]],[4,R[133]],[4,R[134]],[4,"UIType"],[3,"PrintUI"],[3,"RawUI"],[8,"UI"],[3,R[135]],[8,R[136]],[8,"UISender"]]};
searchIndex["task_maker_lang"]={"doc":"Crate for managing programming languages and source files.","i":[[3,R[107],"task_maker_lang","The storage of the compilation/runtime dependencies for…",N,N],[3,R[105],E,"A dependency of an execution, all the sandbox paths must…",N,N],[12,"file",E,"The handle of the file.",0,N],[12,R[81],E,"The path of the file on the local system.",0,N],[12,"sandbox_path",E,"The path inside of the sandbox of where to put the file.…",0,N],[12,R[82],E,"Whether the file should be executable or not.",0,N],[3,R[106],E,"A source file that will be able to be executed (with an…",N,N],[12,"path",E,"Path to the source file.",1,N],[3,R[108],E,"Manager of all the known languages, you should use this to…",N,N],[11,"new",E,"Make a new map with the specified graders.",2,[[["into",[R[25]]],["vec"],[R[25]]],[R[85]]]],[11,"get_compilation_deps",E,"Extra compilation dependencies of the graders, will be an…",2,[[["self"],[R[84]]],[["vec",[R[83]]],[R[83]]]]],[11,"get_runtime_deps",E,"Extra runtime dependencies of the graders, will be an…",2,[[["self"],[R[84]]],[["vec",[R[83]]],[R[83]]]]],[11,"all_paths",E,"Return an iterator over the paths of all the graders in…",2,[[["self"]]]],[11,"new",E,"Make a new `SourceFile` from the provided file. Will…",1,[[["arc",[R[85]]],[R[5],["arc"]],["into",[R[25]]],[R[25]]],[[R[5],[R[86]]],[R[86]]]]],[11,"execute",E,"Execute the program relative to this source file with the…",1,[[["self"],[R[57]],["vec",[R[49]]],["str"],[R[49]],["asref",["str"]]],[[R[1],[R[3]]],[R[3]]]]],[11,"name",E,"The file name of the source file.",1,[[["self"]],[R[49]]]],[8,"Language",E,"Trait that defines the properties of the supported…",N,N],[10,"name",E,"Full name of the language. This must be unique between all…",3,[[["self"]],["str"]]],[10,"extensions",E,"List of valid extensions for this language. A file is…",3,[[["self"]],[["vec",["str"]],["str"]]]],[10,"need_compilation",E,"Whether this language needs a compilation step. Returning…",3,[[["self"]],["bool"]]],[11,R[87],E,R[88],3,[[["self"],["path"]],[R[33]]]],[11,R[89],E,R[90],3,[[["self"],["path"]],[[R[49]],["vec",[R[49]]]]]],[11,R[91],E,R[92],3,[[["self"],["path"],["vec",[R[49]]],[R[49]]],[[R[49]],["vec",[R[49]]]]]],[11,R[93],E,R[94],3,[[["self"],["path"]],[["vec",[R[83]]],[R[83]]]]],[11,R[95],E,R[96],3,[[["self"],["path"]],[R[33]]]],[11,R[97],E,R[98],3,[[["self"],["path"],["vec",[R[49]]],[R[49]]],[[R[49]],["vec",[R[49]]]]]],[11,R[99],E,R[100],3,[[["self"],["path"],["vec",[R[49]]],[R[49]]],[[R[49]],["vec",[R[49]]]]]],[11,R[101],E,R[102],3,[[["self"],["path"]],[["vec",[R[83]]],[R[83]]]]],[11,R[103],E,R[104],3,[[["self"],["path"]],[R[25]]]],[11,"detect_language",E,"Given a path to a file guess the language that the source…",4,[[["asref",["path"]],["path"]],[["arc",[R[84]]],[R[5],["arc"]]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[6],E,E,2,[[[U]],[R[1]]]],[11,R[7],E,E,2,[[],[R[1]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[R[31]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[30],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[6],E,E,0,[[[U]],[R[1]]]],[11,R[7],E,E,0,[[],[R[1]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[R[31]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[30],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[6],E,E,1,[[[U]],[R[1]]]],[11,R[7],E,E,1,[[],[R[1]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[R[31]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[6],E,E,4,[[[U]],[R[1]]]],[11,R[7],E,E,4,[[],[R[1]]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[R[31]]]],[11,"clone",E,E,0,[[["self"]],[R[83]]]],[11,"clone",E,E,1,[[["self"]],[R[86]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[1]]]],[11,R[34],E,E,2,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,0,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,1,[[["self"],["__s"]],[R[1]]]],[11,R[35],E,E,2,[[["__d"]],[R[1]]]],[11,R[35],E,E,0,[[["__d"]],[R[1]]]],[11,R[35],E,E,1,[[["__d"]],[R[1]]]],[11,R[87],E,R[88],3,[[["self"],["path"]],[R[33]]]],[11,R[89],E,R[90],3,[[["self"],["path"]],[[R[49]],["vec",[R[49]]]]]],[11,R[91],E,R[92],3,[[["self"],["path"],["vec",[R[49]]],[R[49]]],[[R[49]],["vec",[R[49]]]]]],[11,R[93],E,R[94],3,[[["self"],["path"]],[["vec",[R[83]]],[R[83]]]]],[11,R[95],E,R[96],3,[[["self"],["path"]],[R[33]]]],[11,R[97],E,R[98],3,[[["self"],["path"],["vec",[R[49]]],[R[49]]],[[R[49]],["vec",[R[49]]]]]],[11,R[99],E,R[100],3,[[["self"],["path"],["vec",[R[49]]],[R[49]]],[[R[49]],["vec",[R[49]]]]]],[11,R[101],E,R[102],3,[[["self"],["path"]],[["vec",[R[83]]],[R[83]]]]],[11,R[103],E,R[104],3,[[["self"],["path"]],[R[25]]]]],"p":[[3,R[105]],[3,R[106]],[3,R[107]],[8,"Language"],[3,R[108]]]};
searchIndex["task_maker_store"]={"doc":"This crate manages the file store on disk, a folder with…","i":[[3,R[16],"task_maker_store","Struct implementing the Iterator trait which will iterate…",N,N],[3,R[18],E,"A file store will manage all the files in the store…",N,N],[3,R[17],E,"Handle of a file in the FileStore, this must be computable…",N,N],[4,R[15],E,"Errors generated by the FileStore",N,N],[13,"InvalidPath",E,"An invalid path is provided.",0,N],[13,"NotFound",E,"The file is not present in the store.",0,N],[11,"new",E,"Make a new iterator reading the file at that path",1,[[["asref",["path"]],["path"]],[[R[3]],[R[1],[R[0],R[3]]],[R[0]]]]],[11,"from_file",E,"Make the key related to the specified file.",2,[[["asref",["path"]],["path"]],[[R[2]],[R[1],[R[2],R[3]]],[R[3]]]]],[11,"new",E,"Make a new FileStore in the specified base directory, will…",3,[[["asref",["path"]],["path"]],[[R[4]],[R[3]],[R[1],[R[4],R[3]]]]]],[11,"store",E,"Given an iterator of `Vec<u8>` consume all of it writing…",3,[[["self"],[R[2]],["i"]],[[R[1],[R[3]]],[R[3]]]]],[11,"get",E,"Returns the path of the file with that key or `None` if…",3,[[["self"],[R[2]]],[[R[3]],[R[5],[R[25]]],[R[1],[R[5],R[3]]]]]],[11,"has_key",E,"Checks if the store has that key inside.",3,[[["self"],[R[2]]],["bool"]]],[11,"persist",E,"Mark the file as persistent. Being persistent means that…",3,[[["self"],[R[2]]],[[R[1],[R[3]]],[R[3]]]]],[11,"flush",E,"Write the FileStore data to disk. Some internal structures…",3,[[["self"]],[[R[1],[R[3]]],[R[3]]]]],[11,R[80],E,E,1,[[],["i"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[6],E,E,1,[[[U]],[R[1]]]],[11,R[7],E,E,1,[[],[R[1]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[R[31]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[6],E,E,3,[[[U]],[R[1]]]],[11,R[7],E,E,3,[[],[R[1]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[R[31]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[30],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[["self"]],[R[49]]]],[11,R[6],E,E,2,[[[U]],[R[1]]]],[11,R[7],E,E,2,[[],[R[1]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[R[31]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[["self"]],[R[49]]]],[11,R[6],E,E,0,[[[U]],[R[1]]]],[11,R[7],E,E,0,[[],[R[1]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[R[31]]]],[11,"as_fail",E,E,0,[[["self"]],["fail"]]],[11,"clone",E,E,2,[[["self"]],[R[2]]]],[11,R[50],E,E,2,[[["self"],[R[2]]],[[R[5],[R[12]]],[R[12]]]]],[11,"lt",E,E,2,[[["self"],[R[2]]],["bool"]]],[11,"le",E,E,2,[[["self"],[R[2]]],["bool"]]],[11,"gt",E,E,2,[[["self"],[R[2]]],["bool"]]],[11,"ge",E,E,2,[[["self"],[R[2]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[2]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[2]]],["bool"]]],[11,"next",E,E,1,[[["self"]],[R[5]]]],[11,R[11],E,E,2,[[["self"]],[R[49]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[[R[3]],[R[1],[R[3]]]]]],[11,R[34],E,E,2,[[["self"],["__s"]],[R[1]]]],[11,R[35],E,E,2,[[["__d"]],[R[1]]]],[11,"name",E,E,0,[[["self"]],[[R[5],["str"]],["str"]]]],[11,"cause",E,E,0,[[["self"]],[[R[5],["fail"]],["fail"]]]],[11,R[14],E,E,0,[[["self"]],[[R[14]],[R[5],[R[14]]]]]]],"p":[[4,R[15]],[3,R[16]],[3,R[17]],[3,R[18]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);