var N=null,E="",T="t",U="u",searchIndex={};
var R=["readfileiterator","result","filestorekey","error","filestore","option","try_from","try_into","borrow_mut","borrow","type_id","to_string","ordering","formatter","backtrace","FileStoreError","ReadFileIterator","FileStoreKey","FileStore","executions","cpu_time","sys_time","wall_time","Uuid of the file.","description","task_maker_dag","task_maker_dag::DAGError","dagerror","pathbuf","fileuuid","executionuuid","execution","executionlimits","to_owned","clone_into","typeid","string","default","executioncommand","serialize","deserialize","ProvidedFile","ExecutionDAGData","ExecutionDAGCallbacks","ExecutionDAG","ExecutionInput","ExecutionCallbacks","Execution","ExecutionLimits","ExecutionResourcesUsage","ExecutionResult","FileCallbacks","DAGError","ExecutionCommand","ExecutionStatus","FileUuid","partial_cmp","task_maker","sourcefile","ready_execs","callbacks","task_maker::executor","ProvideFile","task_maker::executor::SandboxResult","channelsender","channelreceiver","evaluationdata","executor","evaluate","sandboxresult","executable","dependency","language","hashmap","subtaskinfo","scoretype","gradermap","score_type","source_file","task_maker::task_types::ioi::formats","task_maker::task_types::ioi::formats::TaskInputEntry","subtask","iterator","task_maker::task_types::ioi","task_maker::task_types","subtaskid","testcaseid","max_score","generator","validator","solution","uimessagesender","uiexecutionstatus","testcase_score","subtasks","testcases","The score type to use for this task.","solutions","taskuiinterface","localexecutor","SubtaskInfo","TestcaseInfo","task_maker::ui","task_maker::ui::UIExecutionStatus","task_maker::ui::UIMessage","The id of the subtaks.","testcase","The id of the testcase.","IOISolution","The status of the solution.","The path of the solution.","uimessage","task_maker::evaluation","task_maker::execution","task_maker::languages","task_maker::score_types","get_subtask_score","get_task_score","generate","ioitestcaseid","ioisubtaskid","boxfnonce","write_input_to","write_output_to","cache_mode","task_info","generation_result","validation_result","solution_result","evaluation_result","checker_result","subtask_score","task_score","get_ui_interface","EvaluationData","SourceFile","WorkerJob","WorkerState","ExecutorData","ExecutorStatus","LocalExecutor","WorkerConn","ExecutorClientMessage","ExecutorServerMessage","WorkerClientMessage","WorkerServerMessage","FileProtocol","SandboxResult","WorkerError","ExecutorClient","ChannelFileIterator","ChannelFileSender","Dependency","LanguageManager","ScoreTypeMin","ScoreType","StaticFileProvider","CheckerResult","WhiteDiffChecker","GraderMap","IOIBatchTask","IOITaskInfo","IOITaskYAML","IOISubtaskInfo","IOITestcaseInfo","IOIGenerator","IOIValidator","TaskInputEntry","Generator","Validator","EvaluationOptions","TaskUIInterface","TaskFormat","UIExecutionStatus","UIMessage","UIMessageSender","IOITaskUIInterface","IOIEvaluationOptions","IOIItalianYaml","local_path","resources","into_iter"];
searchIndex["task_maker"]={"doc":E,"i":[[0,"evaluation",R[57],E,N,N],[3,R[134],R[112],"The data for an evaluation, including the DAG and the UI…",N,N],[12,"dag",E,"The DAG with the evaluation data.",0,N],[12,"sender",E,"The sender of the UI.",0,N],[8,"UISender",E,"What can send UIMessages.",N,N],[10,"send",E,E,1,[[["self"],[R[111]]],[[R[1],[R[3]]],[R[3]]]]],[11,"new",E,"Crate a new EvaluationData returning the data and the…",0,[[]]],[0,R[31],R[57],E,N,N],[3,R[135],R[113],"A source file that will be able to be execute (with an…",N,N],[12,"path",E,"Path to the source file.",2,N],[12,R[72],E,"Language of the source file.",2,N],[12,R[70],E,"Handle to the executable after the compilation/provided…",2,N],[12,"grader_map",E,"An optional handler to the map of the graders.",2,N],[11,"new",E,"Make a new SourceFile from the provided file. Will return…",2,[[["path"],["arc",[R[76]]],[R[5],["arc"]]],[[R[5],[R[58]]],[R[58]]]]],[11,"execute",E,"Execute the program relative to this source file with the…",2,[[[R[66]],[R[36]],["vec",[R[36]]],["str"],["self"]],[[R[1],[R[31],R[3]]],[R[3]],[R[31]]]]],[11,"name",E,"The name of the source file, it's based on the name of the…",2,[[["self"]],[R[36]]]],[0,R[67],R[57],E,N,N],[3,R[149],R[61],"This is a client of the Executor, the client is who sends…",N,N],[3,R[136],E,"A job that is sent to a worker, this should include all…",N,N],[12,R[31],E,"What the worker should do",3,N],[12,"dep_keys",E,"The FileStoreKeys the worker has to know to start the…",3,N],[3,R[137],E,"State of a worker as seen by the server",N,N],[12,"name",E,"Name of the worker",4,N],[12,"job",E,"Current job of the worker, None if the worker is waiting…",4,N],[12,"cv",E,"Conditional variable the worker thread on the server is…",4,N],[3,R[138],E,"Internal state of the Executor",N,N],[12,"dag",E,"The current DAG which is being evaluated",5,N],[12,R[60],E,"The sets of callbaks the client is interested in",5,N],[12,"client_sender",E,"A channel to the client",5,N],[12,"workers",E,"The state of the connected workers",5,N],[12,R[59],E,"The priority queue of the ready tasks, waiting for the…",5,N],[12,"missing_deps",E,"The list of tasks waiting for some dependencies, each…",5,N],[12,"dependents",E,"The list of tasks that depends on a file, this is a lookup…",5,N],[12,"file_store",E,"A reference to the server's FileStore",5,N],[12,"file_keys",E,"The list of known FileStoreKeys for the current DAG",5,N],[3,R[139],E,"The current status of the Executor, this is sent to the…",N,N],[12,"connected_workers",E,"List of the connected workers with their name",6,N],[12,"running_dags",E,"Number of running DAGs by the server",6,N],[12,R[59],E,"Number of executions waiting for workers",6,N],[12,"waiting_execs",E,"Number of executions waiting for dependencies",6,N],[3,"Executor",E,"The Executor is the main component of the server, this…",N,N],[12,"data",E,"The internals of the executor",7,N],[3,R[150],E,"An iterator over the byte chunks sent during the…",N,N],[3,R[151],E,"Utility function to send a file to a channel using…",N,N],[3,R[140],E,"An Executor that runs locally",N,N],[12,"num_workers",E,"The number of local workers to spawn",8,N],[3,"Sandbox",E,"Wrapper around the sandbox. Cloning this struct will keep…",N,N],[3,"Worker",E,"The worker is the component that receives the work from…",N,N],[3,R[141],E,"An handle of the connection to the worker",N,N],[12,"uuid",E,"The identifier of the worker",9,N],[12,"name",E,"The name of the worker",9,N],[12,"sender",E,"The channel that sends messages to the worker",9,N],[12,"receiver",E,"The channel that receives messages from the server",9,N],[4,R[142],E,"Messages that the client sends to the server",N,N],[13,"Evaluate",E,"The client is asking to evaluate a DAG",10,N],[12,"dag","task_maker::executor::ExecutorClientMessage",E,10,N],[12,R[60],E,E,10,N],[13,R[62],R[61],"The client is providing a file. After this message there…",10,N],[13,"Stop",E,"The client is asking to stop the evaluation",10,N],[13,"Status",E,"The client is asking for the server status",10,N],[4,R[143],E,"Messages that the server sends to the client",N,N],[13,"AskFile",E,"The server needs the file with that Uuid",11,N],[13,R[62],E,"The server is sending a file. After this message there is…",11,N],[13,"NotifyStart",E,"The execution has started on a worker",11,N],[13,"NotifyDone",E,"The execution has completed with that result",11,N],[13,"NotifySkip",E,"The execution has been skipped",11,N],[13,"Error",E,"There was an error during the evaluation",11,N],[13,"Status",E,"The server status as asked by the client",11,N],[13,"Done",E,"The evaluation of the DAG is complete, this message will…",11,N],[4,R[144],E,"Messages sent by the workers to the server",N,N],[13,"GetWork",E,"The worker is ready for some job",12,N],[13,"WorkerDone",E,"The worker completed the job with this result",12,N],[13,R[62],E,"The worker is sending a file to the server. After this…",12,N],[13,"AskFile",E,"The worker needs a file from the server",12,N],[4,R[145],E,"Messages sent by the server to the worker",N,N],[13,"Work",E,"The job the worker should do. Boxed to reduce the enum size.",13,N],[13,R[62],E,"The file the workers as asked After this message there is…",13,N],[4,R[146],E,"Messages sent during the FileProtocol operation, ie during…",N,N],[13,"Data",E,"A chunk of data",14,N],[13,"End",E,"The end of the stream",14,N],[4,R[147],E,"Result of the execution of the sandbox",N,N],[13,"Success",E,"The sandbox exited succesfully, the statistics about the…",15,N],[12,"exit_status",R[63],"The exit status of the process",15,N],[12,"signal",E,"The signal that caused the process to exit",15,N],[12,R[180],E,"Resources used by the process",15,N],[13,"Failed",R[61],"The sandbox failed to execute the process, an error…",15,N],[12,R[3],R[63],"The error reported by the sandbox",15,N],[4,R[148],R[61],"An error generated by the worker",N,N],[13,"MissingDependencyKey",E,E,16,N],[12,"uuid","task_maker::executor::WorkerError",E,16,N],[5,"strsignal",R[61],"Returns a string with the text representation of the signal.",N,[[["u32"]],[R[36]]]],[5,"serialize_into",E,"Serialize a message into the sender serializing it.",N,[[[T],[R[64]]],[[R[1],[R[3]]],[R[3]]]]],[5,"deserialize_from",E,"Deserialize a message from the channel and return it.",N,[[[R[65]]],[[R[1],[R[3]]],[R[3]]]]],[11,R[68],E,"Begin the evaluation sending the DAG to the server,…",17,[[[R[64]],[R[65]],[R[66]]],[[R[1],[R[3]]],[R[3]]]]],[11,"new",E,"Prepare a new Executor based on the specified FileStore",7,[[["arc",["mutex"]],["mutex",[R[4]]]],[R[67]]]],[11,"add_worker",E,"Connect a new worker to the server, this will spawn a new…",7,[[["self"],["workerconn"]]]],[11,R[68],E,"Starts the Executor for a client, this will block and will…",7,[[["self"],[R[65]],[R[64]]],[[R[1],[R[3]]],[R[3]]]]],[11,"new",E,"Create a new iterator over a receiver channel",18,[[[R[65]]],["channelfileiterator"]]],[11,"send",E,"Send a local file to a channel using FileProtocol",19,[[["path"],[R[64]]],[[R[1],[R[3]]],[R[3]]]]],[11,"new",E,"Make a new LocalExecutor based on a FileStore and ready to…",8,[[["arc",["mutex"]],["mutex",[R[4]]],["usize"]],[R[99]]]],[11,R[68],E,"Starts the Executor spawning the workers on new threads…",8,[[["self"],[R[65]],[R[64]]],[[R[1],[R[3]]],[R[3]]]]],[11,"new",E,"Make a new sandbox for the specified execution, copying…",20,[[["path"],[R[31]],[R[73]],[R[4]]],[[R[1],["sandbox",R[3]]],["sandbox"],[R[3]]]]],[11,"run",E,"Starts the sandbox and blocks the thread until the sandbox…",20,[[["self"]],[[R[1],[R[69],R[3]]],[R[69]],[R[3]]]]],[11,"kill",E,"Tell the sandbox process to kill the underlying process,…",20,[[["self"]]]],[11,"keep",E,"Make the sandbox persistent, the sandbox directory won't…",20,[[["self"]]]],[11,"stdout_path",E,"Path of the file where the standard output is written to",20,[[["self"]],[R[28]]]],[11,"stderr_path",E,"Path of the file where the standard error is written to",20,[[["self"]],[R[28]]]],[11,"output_path",E,"Path of the file where that output file is written to",20,[[["path"],["self"]],[R[28]]]],[11,"new",E,"Make a new worker attached to a FileStore, will return a…",21,[[["arc",["mutex"]],["mutex",[R[4]]],["str"]]]],[11,"work",E,"The worker body, this function will block.",21,[[],[[R[1],[R[3]]],[R[3]]]]],[6,"ChannelSender",E,"The channel part that sends data.",N,N],[6,"ChannelReceiver",E,"The channel part that receives data.",N,N],[0,"languages",R[57],E,N,N],[3,R[152],R[114],"A dependency of an execution, all the sandbox paths must…",N,N],[12,"file",E,"The handle of the file.",22,N],[12,R[179],E,"The path of the file on the local system.",22,N],[12,"sandbox_path",E,"The path inside of the sandbox of where to put the file.…",22,N],[12,R[70],E,"Whether the file should be executable or not.",22,N],[3,R[153],E,"Singleton that manages the known languages",N,N],[8,"Language",E,"Trait that defines what a language is.",N,N],[10,"name",E,"Full name of the language",23,[[["self"]],["str"]]],[10,"extensions",E,"List of valid extensions for this language",23,[[["self"]],[["vec",["str"]],["str"]]]],[10,"need_compilation",E,"Whether this language needs a compilation step",23,[[["self"]],["bool"]]],[11,"compilation_command",E,"Command to use to compile the source file. The result of…",23,[[["path"],["self"]],[R[38]]]],[11,"compilation_args",E,"Arguments to pass to the compiler to compile to source…",23,[[["path"],["self"]],[[R[36]],["vec",[R[36]]]]]],[11,"compilation_add_file",E,"Add a file to the compilation command if the language…",23,[[["path"],[R[36]],["vec",[R[36]]],["self"]],[[R[36]],["vec",[R[36]]]]]],[11,"compilation_dependencies",E,"The dependencies to put inside the compilation sandbox.…",23,[[["path"],["self"]],[[R[71]],["vec",[R[71]]]]]],[11,"runtime_command",E,"Command to use to run the program.",23,[[["path"],["self"]],[R[38]]]],[11,"runtime_args",E,"Arguments to pass to the executable to start the evaluation",23,[[["path"],[R[36]],["vec",[R[36]]],["self"]],[[R[36]],["vec",[R[36]]]]]],[11,"runtime_add_file",E,"Add a file to the runtime command if the language requires…",23,[[["path"],[R[36]],["vec",[R[36]]],["self"]],[[R[36]],["vec",[R[36]]]]]],[11,"runtime_dependencies",E,"The dependencies to put inside the execution sandbox. This…",23,[[["path"],["self"]],[[R[71]],["vec",[R[71]]]]]],[11,"executable_name",E,"The name of the executable to call inside the sandbox",23,[[["path"],["self"]],[R[28]]]],[11,"detect_language",E,"Given a path to an existing file detect the best language…",24,[[["path"]],[[R[5],["arc"]],["arc",[R[72]]]]]],[0,"score_types",R[57],E,N,N],[3,R[154],R[115],"The score type `min`, for each subtask takes the value of…",N,N],[11,"new",E,"Make a new ScoreTypeMin.",25,[[[R[73],[R[73]]],[R[74]],[R[73],[R[74]]],[R[73],["testcaseinfo"]]],["scoretypemin"]]],[8,R[155],E,"A score type is the aggregation function for the testcases…",N,N],[10,R[93],E,"Tell the ScoreType the score of a new testcase. Will…",26,[[["self"],[R[85]],["f64"],[R[86]]]]],[10,R[116],E,"Set the callback that will be called when a subtask has…",26,[[["self"],["fn"],["box",["fn"]]]]],[10,R[117],E,"Set the callback that will be called when the task has the…",26,[[["self"],["box",["fn"]],["fn"]]]],[10,"boxed",E,"Clone this ScoreType inside a Box. Note that the callbacks…",26,[[["self"]],[["box",[R[75]]],[R[75]]]]],[0,"task_types",R[57],E,N,N],[3,R[156],R[84],"A generator/solution that will simply use a static file",N,N],[12,R[24],E,"A textual description of the testcase, for example 'Sample…",27,N],[12,"path",E,"Path to the file on the disk",27,N],[3,R[158],E,"A checker that compares the output files ignoring the…",N,N],[3,R[159],E,"The storage of the compilation/runtime graders of the…",N,N],[3,R[157],E,"The result of the checking process",N,N],[12,"score",E,"Value from 0.0 (not correct) to 1.0 (correct) with the…",28,N],[12,"message",E,"Optional message from the checker",28,N],[11,"new",E,"Make a new StaticFileProvider",27,[[[R[28]],[R[36]]],["staticfileprovider"]]],[11,"new",E,"Make a new WhiteDiffChecker",29,[[],["whitediffchecker"]]],[11,"new",E,"Make a new map with the speicified graders.",30,[[[R[28]],["vec",[R[28]]]],[R[76]]]],[11,"get_compilation_deps",E,"Extra compilation dependencies of the graders, will be an…",30,[[["self"],[R[72]]],[[R[71]],["vec",[R[71]]]]]],[11,"get_runtime_deps",E,"Extra runtime dependencies of the graders, will be an…",30,[[["self"],[R[72]]],[[R[71]],["vec",[R[71]]]]]],[0,"ioi",E,E,N,N],[3,R[160],R[83],"In a IOI Batch task each input file is evaluated by a…",N,N],[12,"info",E,"Information about the task",31,N],[12,R[97],E,"List of the known solutions",31,N],[3,R[176],E,"The interface between a IOI task and the UI.",N,N],[3,R[161],E,"Information about a generic IOI task",N,N],[12,"path",E,"Path of the directory of the task.",32,N],[12,"yaml",E,"The information from the yaml file",32,N],[12,R[94],E,"The list of the subtasks",32,N],[12,R[95],E,"The list of the testcases of each subtask",32,N],[12,"checker",E,"The checker to use for this task",32,N],[12,R[77],E,"The score type to use for this task",32,N],[3,R[162],E,"Deserialized data from the task.yaml of a IOI format task",N,N],[12,"name",E,"The name of the task (the short one)",33,N],[12,"title",E,"The title of the task (the long one)",33,N],[12,"n_input",E,"The number of input files, if not provided will be…",33,N],[12,"score_mode",E,"The score mode for this task, task-maker will ignore this.",33,N],[12,R[77],E,R[96],33,N],[12,"token_mode",E,"The token mode of this task.",33,N],[12,"time_limit",E,"The timelimit for the execution of the solutions, if not…",33,N],[12,"memory_limit",E,"The memory limit in MiB of the execution of the solution,…",33,N],[12,"public_testcases",E,"A list of comma separated numbers of the testcases with…",33,N],[12,"output_only",E,"Whether this is an output only task. Defaults to false.",33,N],[12,"total_value",E,"The maximum score of this task, if it's not set it will be…",33,N],[12,"infile",E,"The input file for the solutions, usually 'input.txt' or…",33,N],[12,"outfile",E,"The output file for the solutions, usually 'output.txt' or…",33,N],[12,"primary_language",E,"The primary language for this task.",33,N],[3,R[163],E,"A subtask of a IOI task",N,N],[12,R[87],E,"The maximum score of the subtask, must be >= 0",34,N],[3,R[164],E,"A testcase of a IOI task. Every testcase has an input and…",N,N],[12,R[106],E,"The number of the testcase",35,N],[12,R[88],E,"The generator of this testcase",35,N],[12,R[89],E,"The validator of this testcase",35,N],[12,R[90],E,"The official solution of this testcase",35,N],[3,R[165],E,"A generator formed by a source file and a list of…",N,N],[12,R[78],E,"The source file with the generator.",36,N],[12,"args",E,"The list of arguments to pass to the generator",36,N],[3,R[166],E,"A validator of a testcase.",N,N],[12,R[78],E,"The source file with the validator.",37,N],[12,"args",E,"The list of arguments to pass to the validator.",37,N],[3,R[108],E,"A solution for a task, not necessary the official one.",N,N],[12,R[78],E,"The source file with the solution.",38,N],[12,"infile",E,"The input file the solution is expecting, None for stdin.",38,N],[12,"outfile",E,"The output file the solution is writing to. None for stdout.",38,N],[12,"limits",E,"Limits to set to the execution of the solution.",38,N],[3,R[177],E,"Evaluation options for a IOI task",N,N],[5,"list_files",E,"List all the files inside `cwd` that matches a list of…",N,[[["path"],["vec",["str"]],["str"]],[[R[28]],["vec",[R[28]]]]]],[5,"find_source_file",E,"Make a SourceFile with the first file that matches the…",N,[[["path"],["vec",["str"]],["str"],[R[5],["arc"]],["arc",[R[76]]]],[[R[5],[R[58]]],[R[58]]]]],[11,"new",E,"Make a new IOIGenerator based on that source file and…",36,[[[R[36]],["vec",[R[36]]],["arc",[R[58]]],[R[58]]],["ioigenerator"]]],[11,"new",E,"Make a new IOIValidator based on that source file and…",37,[[[R[36]],["vec",[R[36]]],["arc",[R[58]]],[R[58]]],["ioivalidator"]]],[11,"new",E,"Make a new IOISolution based on that source file.",38,[[[R[5],[R[28]]],["arc",[R[58]]],[R[28]],[R[58]],[R[32]]],["ioisolution"]]],[0,"formats",E,E,N,N],[3,R[178],R[79],"italian_yaml format is structured as follow: * task.yaml -…",N,N],[4,"Rule",E,E,N,N],[13,"EOI",E,E,39,N],[13,"whitespace",E,E,39,N],[13,"non_newline",E,E,39,N],[13,"number",E,E,39,N],[13,"word",E,E,39,N],[13,"spaces",E,E,39,N],[13,"comment",E,E,39,N],[13,R[81],E,E,39,N],[13,"copy",E,E,39,N],[13,"command",E,E,39,N],[13,"empty",E,E,39,N],[13,"line",E,E,39,N],[13,"file",E,E,39,N],[4,R[167],E,"The iterator item type when following the task input…",N,N],[13,"Subtask",E,E,40,N],[12,"id",R[80],E,40,N],[12,"info",E,E,40,N],[13,"GenerateTestcase",R[79],E,40,N],[12,R[81],R[80],E,40,N],[12,"id",E,E,40,N],[12,"cmd",E,E,40,N],[13,"CopyTestcase",R[79],E,40,N],[12,R[81],R[80],E,40,N],[12,"id",E,E,40,N],[12,"path",E,E,40,N],[5,"parse_gen_gen",R[79],"Parse the gen/GEN file extracting the subtasks and the…",N,[[["path"]],[[R[1],["box",R[3]]],[R[3]],["box",[R[82]]]]]],[5,"static_inputs",E,"Make an iterator over all the input files inside the…",N,[[["path"]],[[R[1],["box",R[3]]],[R[3]],["box",[R[82]]]]]],[6,"IOISubtasksInfo",E,E,N,N],[6,"IOITestcasesInfo",E,E,N,N],[6,"IOISubtaskId",R[83],"In IOI tasks the subtask numbers are non-negative integers",N,N],[6,"IOITestcaseId",E,"In IOI tasks the testcase numbers are non-negative integers",N,N],[8,R[168],R[84],"A trait that describes what is a generator: something that…",N,N],[10,R[118],E,"Generate an input file editing the DAG and returning the…",41,[[[R[66]],["self"],[R[85]],[R[86]]]]],[8,R[169],E,"A trait that describes what is a validator: something that…",N,N],[10,"validate",E,"Validate the input file editing the DAG and returing an…",42,[[[R[66]],["file"],["self"],[R[85]],[R[86]]]]],[8,"Solution",E,"A trait that describes what is a solution: something that…",N,N],[10,"solve",E,"Generate the output file editing the DAG and returning the…",43,[[[R[66]],["file"],[R[86]],["self"],[R[5],["file"]],[R[85]]]]],[8,"Checker",E,"A trait that describes what is a checker: something that…",N,N],[10,"check",E,"Add the checking process to the DAG and call the callback…",44,[[["file"],[R[121]],["self"],[R[5],["file"]],[R[86]],[R[66]],[R[85]]],[R[31]]]],[8,R[100],E,"Some basic information about a subtask",N,N],[10,R[87],E,"Maximum score of this subtask",45,[[["self"]],["f64"]]],[8,R[101],E,"Some basic information about a testcase.",N,N],[10,R[122],E,"Write the input file to this path if it's not a dry-run,…",46,[[["self"]],[[R[28]],[R[5],[R[28]]]]]],[10,R[123],E,"Write the output file to this path if it's not a dry-run,…",46,[[["self"]],[[R[28]],[R[5],[R[28]]]]]],[10,R[88],E,"The generator that will create that testcase",46,[[["self"]],[["arc",[R[88]]],[R[88]]]]],[10,R[89],E,"The optional validator that will validate that testcase",46,[[["self"]],[[R[5],["arc"]],["arc",[R[89]]]]]],[10,R[90],E,"The solution of the testcase.",46,[[["self"]],[["arc",[R[90]]],[R[90]]]]],[8,R[170],E,"The options for an evaluation",N,N],[10,"dry_run",E,"Whether the input/output files should be written somewhere",47,[[["self"]],["bool"]]],[10,R[124],E,"The cache mode to use for the evaluation",47,[[["self"]],["bool"]]],[8,R[171],E,"An interface between a Task type and the UI. Each task…",N,N],[10,R[125],E,"Send the information about the task to the UI.",48,[[["arc",["mutex"]],["self"],["mutex",[R[91]]]]]],[10,R[126],E,"Send to the UI the status of the generation of a testcase.",48,[[["mutex",[R[91]]],[R[86]],[R[92]],["self"],[R[85]],["arc",["mutex"]]]]],[10,R[127],E,"Send to the UI the status of the validation of a testcase.",48,[[["mutex",[R[91]]],[R[86]],[R[92]],["self"],[R[85]],["arc",["mutex"]]]]],[10,R[128],E,"Send to the UI the status of the generation of the output…",48,[[["mutex",[R[91]]],[R[86]],[R[92]],["self"],[R[85]],["arc",["mutex"]]]]],[10,R[129],E,"Send to the ui the status of the evaluation of a solution…",48,[[["mutex",[R[91]]],[R[86]],[R[92]],[R[28]],["self"],[R[85]],["arc",["mutex"]]]]],[10,R[130],E,"Send to the ui the status of the checking of a solution on…",48,[[["mutex",[R[91]]],[R[86]],[R[92]],[R[28]],["self"],[R[85]],["arc",["mutex"]]]]],[10,R[93],E,"Send to the ui the score of a solution of a testcase.",48,[[["mutex",[R[91]]],[R[86]],["f64"],[R[28]],["self"],[R[85]],["arc",["mutex"]]]]],[10,R[131],E,"Send to the ui the score of a solution of a subtask.",48,[[["mutex",[R[91]]],["f64"],[R[28]],["self"],[R[85]],["arc",["mutex"]]]]],[10,R[132],E,"Send to the ui the score of a solution of a task.",48,[[["mutex",[R[91]]],[R[28]],["self"],["f64"],["arc",["mutex"]]]]],[8,"Task",E,"Trait that describes a generic task. Every task must have…",N,N],[10,"format",E,"Name of the format of the task",49,[[],["str"]]],[10,"path",E,"Path to the root folder of the task.",49,[[["self"]],["path"]]],[10,"name",E,"Name of the task (the short one)",49,[[["self"]],[R[36]]]],[10,"title",E,"Title of the task (the long one)",49,[[["self"]],[R[36]]]],[10,R[94],E,"The list of the subtasks for this task",49,[[["self"]],[R[73]]]],[10,R[95],E,"The list of the testcases for that subtask",49,[[["self"],[R[85]]],[R[73]]]],[10,R[77],E,R[96],49,[[["self"]],[R[75]]]],[10,R[97],E,"The list of known solution files",49,[[["self"]],[R[73]]]],[10,"checker",E,"The optional checker that will check the output file",49,[[["self"],[R[85]],[R[86]]],["box"]]],[10,R[133],E,"Get the TaskUIInterface relative to this",49,[[["self"]],[[R[98]],["arc",[R[98]]]]]],[11,R[68],E,"Build the DAG of the evaluation of this task and use the…",49,[[[R[66]],[R[99]],["self"],["evaluationoptions"]]]],[8,R[172],E,"A task format is a way of laying files in a task folder,…",N,N],[16,"SubtaskId",E,"Type of the identifier of a subtask",50,N],[16,"TestcaseId",E,"Type of the identifier of a testcase",50,N],[16,R[100],E,"Type of the information about a subtask",50,N],[16,R[101],E,"Type of the information about a testcase",50,N],[10,"is_valid",E,"Whether the `path` points to a valid task for this format.",50,[[["path"]],["bool"]]],[10,"parse",E,"Assuming `path` is valid make a Task from that directory.",50,[[["path"]],[["box",["task"]],[R[3]],[R[1],["box",R[3]]]]]],[11,"new",E,"Make a new CheckerResult",28,[[[R[5],["str"]],["f64"],["str"]],["checkerresult"]]],[0,"ui",R[57],E,N,N],[3,R[175],R[102],"The sender of the UIMessage",N,N],[4,R[173],E,"The status of an execution.",N,N],[13,"Pending",E,"The Execution is known to the DAG and when all its…",51,N],[13,"Started",E,"The Execution has been started on a worker.",51,N],[12,"worker",R[103],E,51,N],[13,"Done",R[102],"The Execution has been completed.",51,N],[12,R[1],R[103],E,51,N],[13,"Skipped",R[102],"At least one of its dependencies have failed, the…",51,N],[4,R[174],E,"A message sent to the UI.",N,N],[13,"Compilation",E,"An update on the compilation status.",52,N],[12,"file",R[104],"The compilation of this file.",52,N],[12,"status",E,"The status of the compilation.",52,N],[13,"IOITask",R[102],"The information about the task which is being run.",52,N],[12,"name",R[104],"The short name of the task.",52,N],[12,"title",E,"The long name of the task.",52,N],[12,"path",E,"The path to the task on the client disk.",52,N],[12,R[94],E,"The list of the subtasks with their information.",52,N],[12,R[95],E,"The set of testcases for each subtask.",52,N],[13,"IOIGeneration",R[102],"The generation of a testcase in a IOI task.",52,N],[12,R[81],R[104],R[105],52,N],[12,R[106],E,R[107],52,N],[12,"status",E,"The status of the generation.",52,N],[13,"IOIValidation",R[102],"The validation of a testcase in a IOI task.",52,N],[12,R[81],R[104],R[105],52,N],[12,R[106],E,R[107],52,N],[12,"status",E,"The status of the validation.",52,N],[13,R[108],R[102],"The solution of a testcase in a IOI task.",52,N],[12,R[81],R[104],R[105],52,N],[12,R[106],E,R[107],52,N],[12,"status",E,R[109],52,N],[13,"IOIEvaluation",R[102],"The evaluation of a solution in a IOI task.",52,N],[12,R[81],R[104],R[105],52,N],[12,R[106],E,R[107],52,N],[12,R[90],E,R[110],52,N],[12,"status",E,R[109],52,N],[13,"IOIChecker",R[102],"The checking of a solution in a IOI task.",52,N],[12,R[81],R[104],R[105],52,N],[12,R[106],E,R[107],52,N],[12,R[90],E,R[110],52,N],[12,"status",E,"The status of the solution. Note that a failure of this…",52,N],[13,"IOITestcaseScore",R[102],"The score of a testcase is ready.",52,N],[12,R[81],R[104],R[105],52,N],[12,R[106],E,R[107],52,N],[12,R[90],E,R[110],52,N],[12,"score",E,"The score of the testcase.",52,N],[13,"IOISubtaskScore",R[102],"The score of a subtask is ready.",52,N],[12,R[81],R[104],R[105],52,N],[12,R[90],E,R[110],52,N],[12,"score",E,"The score of the subtask.",52,N],[13,"IOITaskScore",R[102],"The score of a task is ready.",52,N],[12,R[90],R[104],R[110],52,N],[12,"score",E,"The score of the task.",52,N],[4,"UIType",R[102],"The type of the UI to use, it enumerates all the known UI…",N,N],[13,"Print",E,"The PrintUI.",53,N],[13,"Raw",E,"The RawUI",53,N],[13,"Curses",E,"The CursesUI",53,N],[6,"UIChannelSender",E,E,N,N],[6,"UIChannelReceiver",E,E,N,N],[8,"UI",E,"The trait that describes the UI functionalities.",N,N],[10,"on_message",E,"Process a new UI message.",54,[[["self"],[R[111]]]]],[10,"finish",E,"Make the UI print the ending results.",54,[[["self"]]]],[11,"new",E,"Make a new pair of UIMessageSender and ChannelReceiver.",55,[[]]],[11,"send",E,"Send a message to the channel.",55,[[["self"],[R[111]]],[[R[1],[R[3]]],[R[3]]]]],[11,"start",E,E,53,[[["self"],["uichannelreceiver"]]]],[11,"from",R[112],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[6],E,E,0,[[[U]],[R[1]]]],[11,R[7],E,E,0,[[],[R[1]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[R[35]]]],[11,"from",R[113],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[6],E,E,2,[[[U]],[R[1]]]],[11,R[7],E,E,2,[[],[R[1]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[R[35]]]],[11,"from",R[61],E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[6],E,E,17,[[[U]],[R[1]]]],[11,R[7],E,E,17,[[],[R[1]]]],[11,R[8],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[["self"]],[T]]],[11,R[10],E,E,17,[[["self"]],[R[35]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[33],E,E,3,[[["self"]],[T]]],[11,R[34],E,E,3,[[[T],["self"]]]],[11,R[6],E,E,3,[[[U]],[R[1]]]],[11,R[7],E,E,3,[[],[R[1]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[R[35]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[6],E,E,4,[[[U]],[R[1]]]],[11,R[7],E,E,4,[[],[R[1]]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[R[35]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[6],E,E,5,[[[U]],[R[1]]]],[11,R[7],E,E,5,[[],[R[1]]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[R[35]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[6],E,E,6,[[[U]],[R[1]]]],[11,R[7],E,E,6,[[],[R[1]]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[R[35]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[6],E,E,7,[[[U]],[R[1]]]],[11,R[7],E,E,7,[[],[R[1]]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[R[35]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[181],E,E,18,[[],["i"]]],[11,R[6],E,E,18,[[[U]],[R[1]]]],[11,R[7],E,E,18,[[],[R[1]]]],[11,R[8],E,E,18,[[["self"]],[T]]],[11,R[9],E,E,18,[[["self"]],[T]]],[11,R[10],E,E,18,[[["self"]],[R[35]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[6],E,E,19,[[[U]],[R[1]]]],[11,R[7],E,E,19,[[],[R[1]]]],[11,R[8],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[["self"]],[T]]],[11,R[10],E,E,19,[[["self"]],[R[35]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[6],E,E,8,[[[U]],[R[1]]]],[11,R[7],E,E,8,[[],[R[1]]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[R[35]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[33],E,E,20,[[["self"]],[T]]],[11,R[34],E,E,20,[[[T],["self"]]]],[11,R[6],E,E,20,[[[U]],[R[1]]]],[11,R[7],E,E,20,[[],[R[1]]]],[11,R[8],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[["self"]],[T]]],[11,R[10],E,E,20,[[["self"]],[R[35]]]],[11,R[11],E,E,21,[[["self"]],[R[36]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[6],E,E,21,[[[U]],[R[1]]]],[11,R[7],E,E,21,[[],[R[1]]]],[11,R[8],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[["self"]],[T]]],[11,R[10],E,E,21,[[["self"]],[R[35]]]],[11,R[11],E,E,9,[[["self"]],[R[36]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[6],E,E,9,[[[U]],[R[1]]]],[11,R[7],E,E,9,[[],[R[1]]]],[11,R[8],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[R[35]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[6],E,E,10,[[[U]],[R[1]]]],[11,R[7],E,E,10,[[],[R[1]]]],[11,R[8],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[R[35]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[6],E,E,11,[[[U]],[R[1]]]],[11,R[7],E,E,11,[[],[R[1]]]],[11,R[8],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[R[35]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[6],E,E,12,[[[U]],[R[1]]]],[11,R[7],E,E,12,[[],[R[1]]]],[11,R[8],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[R[35]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[6],E,E,13,[[[U]],[R[1]]]],[11,R[7],E,E,13,[[],[R[1]]]],[11,R[8],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[R[35]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[6],E,E,14,[[[U]],[R[1]]]],[11,R[7],E,E,14,[[],[R[1]]]],[11,R[8],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[R[35]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[6],E,E,15,[[[U]],[R[1]]]],[11,R[7],E,E,15,[[],[R[1]]]],[11,R[8],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[["self"]],[T]]],[11,R[10],E,E,15,[[["self"]],[R[35]]]],[11,R[11],E,E,16,[[["self"]],[R[36]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[6],E,E,16,[[[U]],[R[1]]]],[11,R[7],E,E,16,[[],[R[1]]]],[11,R[8],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[["self"]],[T]]],[11,R[10],E,E,16,[[["self"]],[R[35]]]],[11,"as_fail",E,E,16,[[["self"]],["fail"]]],[11,"from",R[114],E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[33],E,E,22,[[["self"]],[T]]],[11,R[34],E,E,22,[[[T],["self"]]]],[11,R[6],E,E,22,[[[U]],[R[1]]]],[11,R[7],E,E,22,[[],[R[1]]]],[11,R[8],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[["self"]],[T]]],[11,R[10],E,E,22,[[["self"]],[R[35]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[6],E,E,24,[[[U]],[R[1]]]],[11,R[7],E,E,24,[[],[R[1]]]],[11,R[8],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[["self"]],[T]]],[11,R[10],E,E,24,[[["self"]],[R[35]]]],[11,"from",R[115],E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[6],E,E,25,[[[U]],[R[1]]]],[11,R[7],E,E,25,[[],[R[1]]]],[11,R[8],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[["self"]],[T]]],[11,R[10],E,E,25,[[["self"]],[R[35]]]],[11,"from",R[84],E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[6],E,E,27,[[[U]],[R[1]]]],[11,R[7],E,E,27,[[],[R[1]]]],[11,R[8],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[["self"]],[T]]],[11,R[10],E,E,27,[[["self"]],[R[35]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[6],E,E,29,[[[U]],[R[1]]]],[11,R[7],E,E,29,[[],[R[1]]]],[11,R[8],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[["self"]],[T]]],[11,R[10],E,E,29,[[["self"]],[R[35]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[6],E,E,30,[[[U]],[R[1]]]],[11,R[7],E,E,30,[[],[R[1]]]],[11,R[8],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[["self"]],[T]]],[11,R[10],E,E,30,[[["self"]],[R[35]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[6],E,E,28,[[[U]],[R[1]]]],[11,R[7],E,E,28,[[],[R[1]]]],[11,R[8],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[["self"]],[T]]],[11,R[10],E,E,28,[[["self"]],[R[35]]]],[11,"from",R[83],E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[6],E,E,31,[[[U]],[R[1]]]],[11,R[7],E,E,31,[[],[R[1]]]],[11,R[8],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[["self"]],[T]]],[11,R[10],E,E,31,[[["self"]],[R[35]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[6],E,E,56,[[[U]],[R[1]]]],[11,R[7],E,E,56,[[],[R[1]]]],[11,R[8],E,E,56,[[["self"]],[T]]],[11,R[9],E,E,56,[[["self"]],[T]]],[11,R[10],E,E,56,[[["self"]],[R[35]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[6],E,E,32,[[[U]],[R[1]]]],[11,R[7],E,E,32,[[],[R[1]]]],[11,R[8],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[["self"]],[T]]],[11,R[10],E,E,32,[[["self"]],[R[35]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[6],E,E,33,[[[U]],[R[1]]]],[11,R[7],E,E,33,[[],[R[1]]]],[11,R[8],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[["self"]],[T]]],[11,R[10],E,E,33,[[["self"]],[R[35]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[33],E,E,34,[[["self"]],[T]]],[11,R[34],E,E,34,[[[T],["self"]]]],[11,R[6],E,E,34,[[[U]],[R[1]]]],[11,R[7],E,E,34,[[],[R[1]]]],[11,R[8],E,E,34,[[["self"]],[T]]],[11,R[9],E,E,34,[[["self"]],[T]]],[11,R[10],E,E,34,[[["self"]],[R[35]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[6],E,E,35,[[[U]],[R[1]]]],[11,R[7],E,E,35,[[],[R[1]]]],[11,R[8],E,E,35,[[["self"]],[T]]],[11,R[9],E,E,35,[[["self"]],[T]]],[11,R[10],E,E,35,[[["self"]],[R[35]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[6],E,E,36,[[[U]],[R[1]]]],[11,R[7],E,E,36,[[],[R[1]]]],[11,R[8],E,E,36,[[["self"]],[T]]],[11,R[9],E,E,36,[[["self"]],[T]]],[11,R[10],E,E,36,[[["self"]],[R[35]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[6],E,E,37,[[[U]],[R[1]]]],[11,R[7],E,E,37,[[],[R[1]]]],[11,R[8],E,E,37,[[["self"]],[T]]],[11,R[9],E,E,37,[[["self"]],[T]]],[11,R[10],E,E,37,[[["self"]],[R[35]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[6],E,E,38,[[[U]],[R[1]]]],[11,R[7],E,E,38,[[],[R[1]]]],[11,R[8],E,E,38,[[["self"]],[T]]],[11,R[9],E,E,38,[[["self"]],[T]]],[11,R[10],E,E,38,[[["self"]],[R[35]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[6],E,E,57,[[[U]],[R[1]]]],[11,R[7],E,E,57,[[],[R[1]]]],[11,R[8],E,E,57,[[["self"]],[T]]],[11,R[9],E,E,57,[[["self"]],[T]]],[11,R[10],E,E,57,[[["self"]],[R[35]]]],[11,"from",R[79],E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[6],E,E,58,[[[U]],[R[1]]]],[11,R[7],E,E,58,[[],[R[1]]]],[11,R[8],E,E,58,[[["self"]],[T]]],[11,R[9],E,E,58,[[["self"]],[T]]],[11,R[10],E,E,58,[[["self"]],[R[35]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[33],E,E,39,[[["self"]],[T]]],[11,R[34],E,E,39,[[[T],["self"]]]],[11,R[6],E,E,39,[[[U]],[R[1]]]],[11,R[7],E,E,39,[[],[R[1]]]],[11,R[8],E,E,39,[[["self"]],[T]]],[11,R[9],E,E,39,[[["self"]],[T]]],[11,R[10],E,E,39,[[["self"]],[R[35]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[6],E,E,40,[[[U]],[R[1]]]],[11,R[7],E,E,40,[[],[R[1]]]],[11,R[8],E,E,40,[[["self"]],[T]]],[11,R[9],E,E,40,[[["self"]],[T]]],[11,R[10],E,E,40,[[["self"]],[R[35]]]],[11,"from",R[102],E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[6],E,E,55,[[[U]],[R[1]]]],[11,R[7],E,E,55,[[],[R[1]]]],[11,R[8],E,E,55,[[["self"]],[T]]],[11,R[9],E,E,55,[[["self"]],[T]]],[11,R[10],E,E,55,[[["self"]],[R[35]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[33],E,E,51,[[["self"]],[T]]],[11,R[34],E,E,51,[[[T],["self"]]]],[11,R[6],E,E,51,[[[U]],[R[1]]]],[11,R[7],E,E,51,[[],[R[1]]]],[11,R[8],E,E,51,[[["self"]],[T]]],[11,R[9],E,E,51,[[["self"]],[T]]],[11,R[10],E,E,51,[[["self"]],[R[35]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[33],E,E,52,[[["self"]],[T]]],[11,R[34],E,E,52,[[[T],["self"]]]],[11,R[6],E,E,52,[[[U]],[R[1]]]],[11,R[7],E,E,52,[[],[R[1]]]],[11,R[8],E,E,52,[[["self"]],[T]]],[11,R[9],E,E,52,[[["self"]],[T]]],[11,R[10],E,E,52,[[["self"]],[R[35]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[6],E,E,53,[[[U]],[R[1]]]],[11,R[7],E,E,53,[[],[R[1]]]],[11,R[8],E,E,53,[[["self"]],[T]]],[11,R[9],E,E,53,[[["self"]],[T]]],[11,R[10],E,E,53,[[["self"]],[R[35]]]],[11,R[93],R[115],E,25,[[["self"],[R[85]],["f64"],[R[86]]]]],[11,R[116],E,E,25,[[["self"],["fn"],["box",["fn"]]]]],[11,R[117],E,E,25,[[["self"],["box",["fn"]],["fn"]]]],[11,"boxed",E,E,25,[[["self"]],[["box",[R[75]]],[R[75]]]]],[11,R[118],R[84],E,27,[[[R[66]],["self"],[R[85]],[R[86]]]]],[11,R[118],R[83],E,36,[[[R[66]],[R[119]],[R[120]],["self"]]]],[11,"validate",E,E,37,[[[R[66]],["file"],[R[119]],[R[120]],["self"]]]],[11,"solve",R[84],E,27,[[[R[66]],["file"],[R[86]],["self"],[R[5],["file"]],[R[85]]]]],[11,"solve",R[83],E,38,[[[R[66]],["file"],[R[119]],[R[120]],["self"],[R[5],["file"]]]]],[11,"check",R[84],E,29,[[["file"],[R[121]],["self"],[R[5],["file"]],[R[86]],[R[66]],[R[85]]],[R[31]]]],[11,R[87],R[83],E,34,[[["self"]],["f64"]]],[11,R[122],E,E,35,[[["self"]],[[R[28]],[R[5],[R[28]]]]]],[11,R[123],E,E,35,[[["self"]],[[R[28]],[R[5],[R[28]]]]]],[11,R[88],E,E,35,[[["self"]],[[R[88],[R[120],R[119]]],["arc",[R[88]]]]]],[11,R[89],E,E,35,[[["self"]],[[R[5],["arc"]],["arc",[R[89]]]]]],[11,R[90],E,E,35,[[["self"]],[["arc",[R[90]]],[R[90],[R[120],R[119]]]]]],[11,"dry_run",E,E,57,[[["self"]],["bool"]]],[11,R[124],E,E,57,[[["self"]],["bool"]]],[11,R[125],E,E,56,[[["arc",["mutex"]],["self"],["mutex",[R[91]]]]]],[11,R[126],E,E,56,[[["mutex",[R[91]]],[R[119]],[R[120]],["self"],[R[92]],["arc",["mutex"]]]]],[11,R[127],E,E,56,[[["mutex",[R[91]]],[R[119]],[R[120]],["self"],[R[92]],["arc",["mutex"]]]]],[11,R[128],E,E,56,[[["mutex",[R[91]]],[R[119]],[R[120]],["self"],[R[92]],["arc",["mutex"]]]]],[11,R[129],E,E,56,[[["mutex",[R[91]]],[R[119]],[R[120]],[R[28]],["self"],[R[92]],["arc",["mutex"]]]]],[11,R[130],E,E,56,[[["mutex",[R[91]]],[R[119]],[R[120]],[R[28]],["self"],[R[92]],["arc",["mutex"]]]]],[11,R[93],E,E,56,[[["mutex",[R[91]]],[R[119]],[R[120]],[R[28]],["self"],["f64"],["arc",["mutex"]]]]],[11,R[131],E,E,56,[[["mutex",[R[91]]],[R[120]],[R[28]],["self"],["f64"],["arc",["mutex"]]]]],[11,R[132],E,E,56,[[["mutex",[R[91]]],[R[28]],["self"],["f64"],["arc",["mutex"]]]]],[11,"format",E,E,31,[[],["str"]]],[11,"path",E,E,31,[[["self"]],["path"]]],[11,"name",E,E,31,[[["self"]],[R[36]]]],[11,"title",E,E,31,[[["self"]],[R[36]]]],[11,R[94],E,E,31,[[["self"]],[R[73]]]],[11,R[95],E,E,31,[[["self"],[R[120]]],[R[73]]]],[11,R[77],E,E,31,[[["self"]],[R[75]]]],[11,R[97],E,E,31,[[["self"]],[R[73]]]],[11,"checker",E,E,31,[[["self"],[R[119]],[R[120]]],["box"]]],[11,R[133],E,E,31,[[["self"]],[[R[98],[R[120],R[119]]],["arc",[R[98]]]]]],[11,"is_valid",R[79],"Checks that there is at least one of gen/GEN or the input…",58,[[["path"]],["bool"]]],[11,"parse",E,"Parse the task folder making one of the following task…",58,[[["path"]],[["box",["task"]],[R[3]],[R[1],["box",R[3]]]]]],[11,"next",R[61],E,18,[[["self"]],[R[5]]]],[11,"clone",E,E,3,[[["self"]],["workerjob"]]],[11,"clone",E,E,20,[[["self"]],["sandbox"]]],[11,"clone",R[114],E,22,[[["self"]],[R[71]]]],[11,"clone",R[83],E,34,[[["self"]],["ioisubtaskinfo"]]],[11,"clone",R[79],E,39,[[["self"]],["rule"]]],[11,"clone",R[102],E,51,[[["self"]],[R[92]]]],[11,"clone",E,E,52,[[["self"]],[R[111]]]],[11,"cmp",R[79],E,39,[[["self"],["rule"]],[R[12]]]],[11,R[56],E,E,39,[[["self"],["rule"]],[[R[5],[R[12]]],[R[12]]]]],[11,"eq",E,E,39,[[["self"],["rule"]],["bool"]]],[11,"fmt",R[113],E,2,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",R[61],E,3,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,13,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,14,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,15,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,20,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,16,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",R[114],E,22,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",R[115],E,25,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",R[84],E,27,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,29,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,30,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",R[83],E,31,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,32,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,34,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,35,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,36,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,37,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,38,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",R[79],E,39,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",R[102],E,51,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,52,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,53,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",R[61],E,16,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,9,[[[R[13]],["self"]],[R[1]]]],[11,"fmt",E,E,21,[[[R[13]],["self"]],[R[1]]]],[11,"from_str",R[102],E,53,[[["str"]],[[R[1],["uitype"]],["uitype"]]]],[11,"hash",R[79],E,39,[[["self"],["__h"]]]],[11,R[39],R[61],E,3,[[["self"],["__s"]],[R[1]]]],[11,R[39],E,E,10,[[["self"],["__s"]],[R[1]]]],[11,R[39],E,E,11,[[["self"],["__s"]],[R[1]]]],[11,R[39],E,E,12,[[["self"],["__s"]],[R[1]]]],[11,R[39],E,E,13,[[["self"],["__s"]],[R[1]]]],[11,R[39],E,E,6,[[["self"],["__s"]],[R[1]]]],[11,R[39],E,E,14,[[["self"],["__s"]],[R[1]]]],[11,R[39],R[83],E,33,[[["self"],["__s"]],[R[1]]]],[11,R[39],E,E,34,[[["self"],["__s"]],[R[1]]]],[11,R[39],R[102],E,51,[[["self"],["__s"]],[R[1]]]],[11,R[39],E,E,52,[[["self"],["__s"]],[R[1]]]],[11,R[40],R[61],E,3,[[["__d"]],[R[1]]]],[11,R[40],E,E,10,[[["__d"]],[R[1]]]],[11,R[40],E,E,11,[[["__d"]],[R[1]]]],[11,R[40],E,E,12,[[["__d"]],[R[1]]]],[11,R[40],E,E,13,[[["__d"]],[R[1]]]],[11,R[40],E,E,6,[[["__d"]],[R[1]]]],[11,R[40],E,E,14,[[["__d"]],[R[1]]]],[11,R[40],R[83],E,33,[[["__d"]],[R[1]]]],[11,R[40],E,E,34,[[["__d"]],[R[1]]]],[11,R[40],R[102],E,51,[[["__d"]],[R[1]]]],[11,R[40],E,E,52,[[["__d"]],[R[1]]]],[11,"name",R[61],E,16,[[["self"]],[[R[5],["str"]],["str"]]]],[11,"cause",E,E,16,[[["self"]],[["fail"],[R[5],["fail"]]]]],[11,R[14],E,E,16,[[["self"]],[[R[14]],[R[5],[R[14]]]]]]],"p":[[3,R[134]],[8,"UISender"],[3,R[135]],[3,R[136]],[3,R[137]],[3,R[138]],[3,R[139]],[3,"Executor"],[3,R[140]],[3,R[141]],[4,R[142]],[4,R[143]],[4,R[144]],[4,R[145]],[4,R[146]],[4,R[147]],[4,R[148]],[3,R[149]],[3,R[150]],[3,R[151]],[3,"Sandbox"],[3,"Worker"],[3,R[152]],[8,"Language"],[3,R[153]],[3,R[154]],[8,R[155]],[3,R[156]],[3,R[157]],[3,R[158]],[3,R[159]],[3,R[160]],[3,R[161]],[3,R[162]],[3,R[163]],[3,R[164]],[3,R[165]],[3,R[166]],[3,R[108]],[4,"Rule"],[4,R[167]],[8,R[168]],[8,R[169]],[8,"Solution"],[8,"Checker"],[8,R[100]],[8,R[101]],[8,R[170]],[8,R[171]],[8,"Task"],[8,R[172]],[4,R[173]],[4,R[174]],[4,"UIType"],[8,"UI"],[3,R[175]],[3,R[176]],[3,R[177]],[3,R[178]]]};
searchIndex["task_maker_dag"]={"doc":"DAG generation and resulting structures for `Execution`s…","i":[[3,R[41],R[25],"A wrapper around a File provided by the client, this means…",N,N],[12,"file",E,"The file handle.",0,N],[12,"key",E,"The key in the FileStore.",0,N],[12,R[179],E,"Path to the file in the client.",0,N],[3,R[42],E,"Serializable part of the execution DAG: everything except…",N,N],[12,"provided_files",E,"All the files provided by the client.",1,N],[12,R[19],E,"All the executions to run.",1,N],[3,R[43],E,"List of the interesting files and executions, only the…",N,N],[12,R[19],E,"Set of the handles of the executions that have at least a…",2,N],[12,"files",E,"Set of the handles of the files that have at least a…",2,N],[3,R[44],E,"A computation DAG, this is not serializable because it…",N,N],[12,"data",E,"Serializable part of the DAG with all the executions and…",3,N],[12,"execution_callbacks",E,"Actual callbacks of the executions.",3,N],[12,"file_callbacks",E,"Actual callbacks of the files.",3,N],[3,R[45],E,"An input file of an `Execution`, can be marked as…",N,N],[12,"file",E,R[23],4,N],[12,R[70],E,"Whether this file should be marked as executable.",4,N],[3,R[46],E,"The callbacks to be called when an event of an execution…",N,N],[12,"on_start",E,"The callbacks called when the execution starts.",5,N],[12,"on_done",E,"The callbacks called when the execution has completed.",5,N],[12,"on_skip",E,"The callbacks called when the execution has been skipped.",5,N],[3,R[47],E,"An `Execution` is a process that will be executed by a…",N,N],[12,"uuid",E,"Uuid of the execution.",6,N],[12,R[24],E,"Description of the execution.",6,N],[12,"command",E,"Which command to execute.",6,N],[12,"args",E,"The list of command line arguments.",6,N],[12,"stdin",E,"Optional standard input to pass to the program.",6,N],[12,"stdout",E,"Optional standard output to capture.",6,N],[12,"stderr",E,"Optional standard error to capture.",6,N],[12,"inputs",E,"List of input files that should be put inside the sandbox.",6,N],[12,"outputs",E,"List of the output files that should be capture from the…",6,N],[12,"limits",E,"Limits on the execution.",6,N],[3,R[48],E,"Limits on an `Execution`. On some worker platforms some of…",N,N],[12,R[20],E,"Limit on the userspace cpu time of the process, in seconds.",7,N],[12,R[21],E,"Limit on the kernels pace cpu time of the process, in…",7,N],[12,R[22],E,"Limit on the total time of execution, in seconds. This…",7,N],[12,"memory",E,"Limit on the number of KiB the process can use in any…",7,N],[12,"nproc",E,"Limit on the number of threads/processes the process can…",7,N],[12,"nofile",E,"Limit on the number of file descriptors the process can…",7,N],[12,"fsize",E,"Maximum size of the files (in bytes) the process can…",7,N],[12,"memlock",E,"RLIMIT_MEMLOCK",7,N],[12,"stack",E,"Limit on the stack size for the process. 0 means unlimited.",7,N],[3,R[49],E,"Resources used during the execution, note that on some…",N,N],[12,R[20],E,"Number of seconds the process used in user space.",8,N],[12,R[21],E,"Number of seconds the process used in kernel space.",8,N],[12,R[22],E,"Number of seconds from the start to the end of the process.",8,N],[12,"memory",E,"Number of KiB used at most by the process.",8,N],[3,R[50],E,"The result of an `Execution`.",N,N],[12,"uuid",E,"Uuid of the completed execution.",9,N],[12,"status",E,"Status of the completed execution.",9,N],[12,R[180],E,"Resources used by the execution.",9,N],[3,R[51],E,"The callbacks that will trigger when the file is ready.",N,N],[12,"write_to",E,"Destination of the file if it has to be stored in the disk…",10,N],[12,"get_content",E,"Callback to be called with the first bytes of the file.",10,N],[3,"File",E,"An handle to a file in the evaluation, this only tracks…",N,N],[12,"uuid",E,R[23],11,N],[12,R[24],E,"Description of the file.",11,N],[4,R[52],E,"An error in the DAG structure.",N,N],[13,"MissingFile",E,"A file is used as input in an execution but it's missing,…",12,N],[12,"uuid",R[26],E,12,N],[12,R[24],E,E,12,N],[13,"MissingExecution",R[25],"A callback is registered on an execution but it's missing.",12,N],[12,"uuid",R[26],E,12,N],[13,"CycleDetected",R[25],"There is a dependency cycle in the DAG.",12,N],[12,R[24],R[26],E,12,N],[13,"DuplicateExecutionUUID",R[25],"There is a duplicate execution UUID.",12,N],[12,"uuid",R[26],E,12,N],[13,"DuplicateFileUUID",R[25],"There is a duplicate file UUID.",12,N],[12,"uuid",R[26],E,12,N],[4,R[53],R[25],"Command of an `Execution` to execute.",N,N],[13,"System",E,"A system command, the workers will search in their `$PATH`…",13,N],[13,"Local",E,"A command relative to the sandbox directory, not to be…",13,N],[4,R[54],E,"Status of a completed `Execution`.",N,N],[13,"Success",E,"The program exited with status 0 within the limits.",14,N],[13,"ReturnCode",E,"The program exited with a non-zero status code, which is…",14,N],[13,"Signal",E,"The program stopped due to a signal, the number and the…",14,N],[13,"TimeLimitExceeded",E,"The program hasn't exited within the time limit constraint.",14,N],[13,"SysTimeLimitExceeded",E,"The program hasn't exited within the sys time limit…",14,N],[13,"WallTimeLimitExceeded",E,"The program hasn't exited within the wall time limit…",14,N],[13,"MemoryLimitExceeded",E,"The program has exceeded the memory limit.",14,N],[13,"InternalError",E,"The sandbox failed to execute the program with the…",14,N],[5,"check_dag",E,"Validate the DAG checking if all the required pieces are…",N,[[["executiondagcallbacks"],["executiondagdata"]],[[R[27]],[R[1],[R[27]]]]]],[11,"new",E,"Create an empty ExecutionDAG, without files and executions.",3,[[],["executiondag"]]],[11,"provide_file",E,"Provide a file for the computation.",3,[[["self"],["file"],["into",[R[28]]],[R[28]]],[[R[3]],[R[1],[R[3]]]]]],[11,"add_execution",E,"Add an execution to the DAG.",3,[[["self"],[R[31]]]]],[11,"write_file_to",E,"When `file` is ready it will be written to `path`. The…",3,[[["self"],["into",[R[28]]],[R[28]],[R[29]],["into",[R[29]]]]]],[11,"get_file_content",E,"Call `callback` with the first `limit` bytes of the file…",3,[[["self"],["usize"],[R[29]],["f"],["into",[R[29]]]]]],[11,"on_execution_start",E,"Add a callback that will be called when the execution…",3,[[["self"],[R[30]],["f"]]]],[11,"on_execution_done",E,"Add a callback that will be called when the execution ends.",3,[[["self"],[R[30]],["f"]]]],[11,"on_execution_skip",E,"Add a callback that will be called when the execution is…",3,[[["self"],[R[30]],["f"]]]],[11,"new",E,"Make an empty limits where all the limits are disabled.…",7,[[],[R[32]]]],[11,R[20],E,"Set the cpu time limit in seconds.",7,[[["self"],["f64"]],["self"]]],[11,R[21],E,"Set the sys time limit in seconds.",7,[[["self"],["f64"]],["self"]]],[11,R[22],E,"Set the wall time limit in seconds.",7,[[["self"],["f64"]],["self"]]],[11,"memory",E,"Set the memory limit in seconds.",7,[[["self"],["u64"]],["self"]]],[11,"nproc",E,"Set the maximum number of processes/threads.",7,[[["self"],["u32"]],["self"]]],[11,"nofile",E,"Set the maximum number of opened file descriptors.",7,[[["self"],["u32"]],["self"]]],[11,"fsize",E,"Set the maximum size of the files (in bytes) the process…",7,[[["self"],["u64"]],["self"]]],[11,"memlock",E,"Set the memlock limit.",7,[[["self"],["u64"]],["self"]]],[11,"stack",E,"Set the stack limit.",7,[[["self"],["u64"]],["self"]]],[11,"new",E,"Create a basic `Execution` with the default limits.",6,[[[R[36]],["into",[R[36]]],[R[38]]],[R[31]]]],[11,"dependencies",E,"List of all the File dependencies of the execution,…",6,[[["self"]],[[R[29]],["vec",[R[29]]]]]],[11,"outputs",E,"List of all the File produced by the execution, including…",6,[[["self"]],[[R[29]],["vec",[R[29]]]]]],[11,"stdin",E,"Bind the standard input to the specified file. Calling…",6,[[["self"],[R[29]],["into",[R[29]]]],["self"]]],[11,"stdout",E,"Handle to the standard output of the execution. This…",6,[[["self"]],["file"]]],[11,"stderr",E,"Handle to the standard error of the execution. This should…",6,[[["self"]],["file"]]],[11,"input",E,"Bind a file inside the sandbox to the specified file.…",6,[[["self"],["bool"],["into",[R[28]]],[R[28]],[R[29]],["into",[R[29]]]],["self"]]],[11,"output",E,"Handle to a file produced by the execution. This should be…",6,[[["self"],["into",[R[28]]],[R[28]],["debug"]],["file"]]],[11,"limits",E,"Set the limits for the execution.",6,[[["self"],[R[32]]],["self"]]],[11,"new",E,"Create a new file handle.",11,[[[R[36]],["into",[R[36]]]],["file"]]],[6,"ExecutionUuid",E,"The identifier of an execution, it's globally unique and…",N,N],[6,"WorkerUuid",E,"The identifier of a worker, it's globally unique and…",N,N],[6,"OnStartCallback",E,"Type of the callback called when an `Execution` starts.",N,N],[6,"OnDoneCallback",E,"Type of the callback called when an `Execution` ends.",N,N],[6,"OnSkipCallback",E,"Type of the callback called when an `Execution` is skipped.",N,N],[6,R[55],E,"The identifier of a file, it's globally unique and it…",N,N],[6,"GetContentCallback",E,"Type of the callback called when a file is returned to the…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[33],E,E,0,[[["self"]],[T]]],[11,R[34],E,E,0,[[[T],["self"]]]],[11,R[6],E,E,0,[[[U]],[R[1]]]],[11,R[7],E,E,0,[[],[R[1]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[R[35]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[6],E,E,1,[[[U]],[R[1]]]],[11,R[7],E,E,1,[[],[R[1]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[R[35]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[6],E,E,2,[[[U]],[R[1]]]],[11,R[7],E,E,2,[[],[R[1]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[R[35]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[6],E,E,3,[[[U]],[R[1]]]],[11,R[7],E,E,3,[[],[R[1]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[R[35]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[33],E,E,4,[[["self"]],[T]]],[11,R[34],E,E,4,[[[T],["self"]]]],[11,R[6],E,E,4,[[[U]],[R[1]]]],[11,R[7],E,E,4,[[],[R[1]]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[R[35]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[6],E,E,5,[[[U]],[R[1]]]],[11,R[7],E,E,5,[[],[R[1]]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[R[35]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[33],E,E,6,[[["self"]],[T]]],[11,R[34],E,E,6,[[[T],["self"]]]],[11,R[6],E,E,6,[[[U]],[R[1]]]],[11,R[7],E,E,6,[[],[R[1]]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[R[35]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[33],E,E,7,[[["self"]],[T]]],[11,R[34],E,E,7,[[[T],["self"]]]],[11,R[6],E,E,7,[[[U]],[R[1]]]],[11,R[7],E,E,7,[[],[R[1]]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[R[35]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[33],E,E,8,[[["self"]],[T]]],[11,R[34],E,E,8,[[[T],["self"]]]],[11,R[6],E,E,8,[[[U]],[R[1]]]],[11,R[7],E,E,8,[[],[R[1]]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[R[35]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[33],E,E,9,[[["self"]],[T]]],[11,R[34],E,E,9,[[[T],["self"]]]],[11,R[6],E,E,9,[[[U]],[R[1]]]],[11,R[7],E,E,9,[[],[R[1]]]],[11,R[8],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[R[35]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[6],E,E,10,[[[U]],[R[1]]]],[11,R[7],E,E,10,[[],[R[1]]]],[11,R[8],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[R[35]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[33],E,E,11,[[["self"]],[T]]],[11,R[34],E,E,11,[[[T],["self"]]]],[11,R[6],E,E,11,[[[U]],[R[1]]]],[11,R[7],E,E,11,[[],[R[1]]]],[11,R[8],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[R[35]]]],[11,R[11],E,E,12,[[["self"]],[R[36]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[6],E,E,12,[[[U]],[R[1]]]],[11,R[7],E,E,12,[[],[R[1]]]],[11,R[8],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[R[35]]]],[11,"as_fail",E,E,12,[[["self"]],["fail"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[33],E,E,13,[[["self"]],[T]]],[11,R[34],E,E,13,[[[T],["self"]]]],[11,R[6],E,E,13,[[[U]],[R[1]]]],[11,R[7],E,E,13,[[],[R[1]]]],[11,R[8],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[R[35]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[33],E,E,14,[[["self"]],[T]]],[11,R[34],E,E,14,[[[T],["self"]]]],[11,R[6],E,E,14,[[[U]],[R[1]]]],[11,R[7],E,E,14,[[],[R[1]]]],[11,R[8],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[R[35]]]],[11,R[37],E,"Default sane values for the execution limits, the limits…",7,[[],["self"]]],[11,R[37],E,E,5,[[],["self"]]],[11,R[37],E,E,10,[[],["filecallbacks"]]],[11,"clone",E,E,0,[[["self"]],["providedfile"]]],[11,"clone",E,E,13,[[["self"]],[R[38]]]],[11,"clone",E,E,4,[[["self"]],["executioninput"]]],[11,"clone",E,E,6,[[["self"]],[R[31]]]],[11,"clone",E,E,7,[[["self"]],[R[32]]]],[11,"clone",E,E,14,[[["self"]],["executionstatus"]]],[11,"clone",E,E,8,[[["self"]],["executionresourcesusage"]]],[11,"clone",E,E,9,[[["self"]],["executionresult"]]],[11,"clone",E,E,11,[[["self"]],["file"]]],[11,"from",E,E,15,[[["file"]],["self"]]],[11,"from",E,E,15,[[["file"]],["self"]]],[11,R[56],E,E,11,[[["self"],["file"]],[[R[5],[R[12]]],[R[12]]]]],[11,"lt",E,E,11,[[["self"],["file"]],["bool"]]],[11,"le",E,E,11,[[["self"],["file"]],["bool"]]],[11,"gt",E,E,11,[[["self"],["file"]],["bool"]]],[11,"ge",E,E,11,[[["self"],["file"]],["bool"]]],[11,"eq",E,E,11,[[["self"],["file"]],["bool"]]],[11,"ne",E,E,11,[[["self"],["file"]],["bool"]]],[11,"as_ref",E,E,11,[[["self"]],[R[29]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,13,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,14,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,5,[[[R[13]],["self"]],[[R[1],[R[3]]],[R[3]]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,10,[[[R[13]],["self"]],[[R[1],[R[3]]],[R[3]]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[1]]]],[11,"name",E,E,12,[[["self"]],[[R[5],["str"]],["str"]]]],[11,"cause",E,E,12,[[["self"]],[[R[5],["fail"]],["fail"]]]],[11,R[14],E,E,12,[[["self"]],[[R[14]],[R[5],[R[14]]]]]],[11,R[39],E,E,0,[[["self"],["__s"]],[R[1]]]],[11,R[39],E,E,1,[[["self"],["__s"]],[R[1]]]],[11,R[39],E,E,2,[[["self"],["__s"]],[R[1]]]],[11,R[39],E,E,13,[[["self"],["__s"]],[R[1]]]],[11,R[39],E,E,4,[[["self"],["__s"]],[R[1]]]],[11,R[39],E,E,6,[[["self"],["__s"]],[R[1]]]],[11,R[39],E,E,7,[[["self"],["__s"]],[R[1]]]],[11,R[39],E,E,14,[[["self"],["__s"]],[R[1]]]],[11,R[39],E,E,8,[[["self"],["__s"]],[R[1]]]],[11,R[39],E,E,9,[[["self"],["__s"]],[R[1]]]],[11,R[39],E,E,11,[[["self"],["__s"]],[R[1]]]],[11,R[40],E,E,0,[[["__d"]],[R[1]]]],[11,R[40],E,E,1,[[["__d"]],[R[1]]]],[11,R[40],E,E,2,[[["__d"]],[R[1]]]],[11,R[40],E,E,13,[[["__d"]],[R[1]]]],[11,R[40],E,E,4,[[["__d"]],[R[1]]]],[11,R[40],E,E,6,[[["__d"]],[R[1]]]],[11,R[40],E,E,7,[[["__d"]],[R[1]]]],[11,R[40],E,E,14,[[["__d"]],[R[1]]]],[11,R[40],E,E,8,[[["__d"]],[R[1]]]],[11,R[40],E,E,9,[[["__d"]],[R[1]]]],[11,R[40],E,E,11,[[["__d"]],[R[1]]]]],"p":[[3,R[41]],[3,R[42]],[3,R[43]],[3,R[44]],[3,R[45]],[3,R[46]],[3,R[47]],[3,R[48]],[3,R[49]],[3,R[50]],[3,R[51]],[3,"File"],[4,R[52]],[4,R[53]],[4,R[54]],[6,R[55]]]};
searchIndex["task_maker_store"]={"doc":"This crate manages the file store on disk, a folder with…","i":[[3,R[16],"task_maker_store","Struct implementing the Iterator trait which will iterate…",N,N],[3,R[18],E,"A file store will manage all the files in the store…",N,N],[3,R[17],E,"Handle of a file in the FileStore, this must be computable…",N,N],[4,R[15],E,"Errors generated by the FileStore",N,N],[13,"InvalidPath",E,"An invalid path is provided.",0,N],[13,"NotFound",E,"The file is not present in the store.",0,N],[11,"new",E,"Make a new iterator reading the file at that path",1,[[["path"],["asref",["path"]]],[[R[1],[R[0],R[3]]],[R[3]],[R[0]]]]],[11,"from_file",E,"Make the key related to the specified file.",2,[[["path"],["asref",["path"]]],[[R[2]],[R[1],[R[2],R[3]]],[R[3]]]]],[11,"new",E,"Make a new FileStore in the specified base directory, will…",3,[[["path"],["asref",["path"]]],[[R[3]],[R[1],[R[4],R[3]]],[R[4]]]]],[11,"store",E,"Given an iterator of `Vec<u8>` consume all of it writing…",3,[[["self"],[R[2]],["i"]],[[R[1],[R[3]]],[R[3]]]]],[11,"get",E,"Returns the path of the file with that key or `None` if…",3,[[["self"],[R[2]]],[[R[3]],[R[1],[R[5],R[3]]],[R[5],[R[28]]]]]],[11,"has_key",E,"Checks if the store has that key inside.",3,[[["self"],[R[2]]],["bool"]]],[11,"persist",E,"Mark the file as persistent. Being persistent means that…",3,[[["self"],[R[2]]],[[R[1],[R[3]]],[R[3]]]]],[11,"flush",E,"Write the FileStore data to disk. Some internal structures…",3,[[["self"]],[[R[1],[R[3]]],[R[3]]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[181],E,E,1,[[],["i"]]],[11,R[6],E,E,1,[[[U]],[R[1]]]],[11,R[7],E,E,1,[[],[R[1]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[R[35]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[6],E,E,3,[[[U]],[R[1]]]],[11,R[7],E,E,3,[[],[R[1]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[R[35]]]],[11,R[11],E,E,2,[[["self"]],[R[36]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[33],E,E,2,[[["self"]],[T]]],[11,R[34],E,E,2,[[[T],["self"]]]],[11,R[6],E,E,2,[[[U]],[R[1]]]],[11,R[7],E,E,2,[[],[R[1]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[R[35]]]],[11,R[11],E,E,0,[[["self"]],[R[36]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[6],E,E,0,[[[U]],[R[1]]]],[11,R[7],E,E,0,[[],[R[1]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[R[35]]]],[11,"as_fail",E,E,0,[[["self"]],["fail"]]],[11,"next",E,E,1,[[["self"]],[R[5]]]],[11,"clone",E,E,2,[[["self"]],[R[2]]]],[11,R[11],E,E,2,[[["self"]],[R[36]]]],[11,R[56],E,E,2,[[[R[2]],["self"]],[[R[5],[R[12]]],[R[12]]]]],[11,"lt",E,E,2,[[[R[2]],["self"]],["bool"]]],[11,"le",E,E,2,[[[R[2]],["self"]],["bool"]]],[11,"gt",E,E,2,[[[R[2]],["self"]],["bool"]]],[11,"ge",E,E,2,[[[R[2]],["self"]],["bool"]]],[11,"eq",E,E,2,[[[R[2]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[2]],["self"]],["bool"]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,2,[[[R[13]],["self"]],[[R[1],[R[3]]],[R[3]]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[1]]]],[11,R[39],E,E,2,[[["self"],["__s"]],[R[1]]]],[11,R[40],E,E,2,[[["__d"]],[R[1]]]],[11,"name",E,E,0,[[["self"]],[[R[5],["str"]],["str"]]]],[11,"cause",E,E,0,[[["self"]],[[R[5],["fail"]],["fail"]]]],[11,R[14],E,E,0,[[["self"]],[[R[5],[R[14]]],[R[14]]]]]],"p":[[4,R[15]],[3,R[16]],[3,R[17]],[3,R[18]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);