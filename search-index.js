var N=null,E="",T="t",U="u",searchIndex={};
var R=["readfileiterator","pathbuf","result","filestore","error","filestorehandle","filestorekey","try_from","try_into","borrow","borrow_mut","type_id","to_owned","clone_into","ordering","to_string","formatter","ReadFileIterator","FileStore","FileStoreKey","FileStoreHandle","cpu_time","sys_time","wall_time","Uuid of the file.","description","fileuuid","executionuuid","executiondagconfig","keep_sandboxes","cache_mode","extra_time","copy_exe","execution","executionlimits","typeid","default","cachemode","executiontag","executioncommand","executionstatus","executionresourcesusage","executionresult","option","string","serialize","deserialize","ExecutionDAGConfig","ProvidedFile","ExecutionDAGData","ExecutionDAG","ExecutionTag","ExecutionInput","ExecutionCallbacks","Execution","ExecutionLimits","ExecutionResourcesUsage","ExecutionResult","FileCallbacks","CacheMode","ExecutionCommand","ExecutionStatus","FileUuid","partial_cmp","local_path","executable","dependency","language","gradermap","sourcefile","executiondag","compilation_command","Command to use to compile the source file. The blanked…","compilation_args","Arguments to pass to the compiler to compile to source…","compilation_add_file","Add a file to the compilation command if the language…","compilation_dependencies","The dependencies to put inside the compilation sandbox.…","runtime_command","Command to use to run the program. It defaults to the…","runtime_args","Arguments to pass to the executable to start the evaluation.","runtime_add_file","Add a file to the runtime command if the language requires…","runtime_dependencies","The dependencies to put inside the execution sandbox. This…","executable_name","The name of the executable to call inside the sandbox. It…","Dependency","SourceFile","GraderMap","Language","LanguageManager","task_maker_cache","CacheResult","outputs","executions","resources","was_killed","task_maker_exec","task_maker_exec::SandboxResult","channelsender","channelreceiver","task_maker_exec::proto","ProvideFile","sandboxresult","task_maker_exec::executors","ExecutionDAGWatchSet","WorkerJob","ExecutorWorkerStatus","ExecutorStatus","SandboxResult","ExecutorClient","LocalExecutor","ExecutorClientMessage","ExecutorServerMessage","WorkerClientMessage","WorkerServerMessage","FileProtocol","ChannelFileIterator","ChannelFileSender","into_iter","StaticFile","task_maker_format","intoiterator","task_maker_format::ui","task_maker_format::ui::UIExecutionStatus","The result of the execution.","task_maker_format::ui::UIMessage","The compilation of this file.","The id of the subtask.","The id of the testcase.","testcase","The status of the solution.","The path of the solution.","subtask","solution","uimessage","evaluationdata","Write to `$self.stream`, in the color specified as second…","task_maker_format::ioi","on_message","evaluationconfig","EvaluationConfig","EvaluationData","SubtaskInfo","TestcaseInfo","InputGenerator","InputValidator","OutputGenerator","TestcaseScoreAggregator","UIExecutionStatus","UIMessage","UIMessageSender","TaskFormat"];
searchIndex["task_maker"]={"doc":"The new cmsMake!","i":[],"p":[]};
searchIndex["task_maker_cache"]={"doc":"Crate for managing the cache of the executions of a DAG.","i":[[3,"Cache",R[94],"Handle the cached executions, loading and storing them to…",N,N],[4,R[95],E,"The result of a cache query, can be either successful…",N,N],[13,"Miss",E,"The requested entry is not present in the cache.",0,N],[13,"Hit",E,"The requested entry is present in the cache.",0,N],[12,R[2],"task_maker_cache::CacheResult",R[128],0,N],[12,R[96],E,"The outputs of the execution.",0,N],[11,"new",R[94],"Make a new `Cache` stored in the specified cache…",1,[[["asref",["path"]],["path"]],[["cache"],[R[4]],[R[2],["cache",R[4]]]]]],[11,"insert",E,"Insert a new entry inside the cache. They key is computed…",1,[[["self"],[R[33]],["hashmap"],[R[42]]]]],[11,"get",E,"Search in the cache for a valid entry, returning a cache…",1,[[["self"],[R[33]],["hashmap"],[R[3]]],["cacheresult"]]],[11,"is_cacheable",E,"Checks whether a result is allowed in the cache.",1,[[[R[42]]],["bool"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[35]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[35]]]],[11,"drop",E,E,1,[[["self"]]]],[11,"fmt",E,E,1,[[["self"],[R[16]]],[R[2]]]]],"p":[[4,R[95]],[3,"Cache"]]};
searchIndex["task_maker_dag"]={"doc":"DAG generation and resulting structures for `Execution`s…","i":[[3,R[47],"task_maker_dag","Configuration setting of an `ExecutionDAG`, some of the…",N,N],[12,R[29],E,"Keep the sandbox directory of each execution.",0,N],[12,"dry_run",E,"Do not write any file inside the task directory. This…",0,N],[12,R[30],E,"The cache mode for this DAG.",0,N],[12,R[31],E,"Extra time to give to the sandbox before killing the…",0,N],[12,R[32],E,"Whether to copy the executables of the compilation inside…",0,N],[3,R[48],E,"A wrapper around a File provided by the client, this means…",N,N],[12,"file",E,"The file handle.",1,N],[12,"key",E,"The key of the file for the lookup in the `FileStore`.",1,N],[12,R[64],E,"Path to the file in the client.",1,N],[3,R[49],E,"Serializable part of the execution DAG: everything except…",N,N],[12,"provided_files",E,"All the files provided by the client.",2,N],[12,R[97],E,"All the executions to run.",2,N],[12,"config",E,"The configuration of this DAG.",2,N],[3,R[50],E,"A computation DAG, this is not serializable because it…",N,N],[12,"data",E,"Serializable part of the DAG with all the executions and…",3,N],[12,"execution_callbacks",E,"Actual callbacks of the executions.",3,N],[12,"file_callbacks",E,"Actual callbacks of the files.",3,N],[3,R[51],E,"A tag on an `Execution`. Can be used to classify the…",N,N],[12,"name",E,"The name of the tag.",4,N],[3,R[52],E,"An input file of an `Execution`, can be marked as…",N,N],[12,"file",E,R[24],5,N],[12,R[65],E,"Whether this file should be marked as executable.",5,N],[3,R[53],E,"The callbacks to be called when an event of an execution…",N,N],[12,"on_start",E,"The callbacks called when the execution starts.",6,N],[12,"on_done",E,"The callbacks called when the execution has completed.",6,N],[12,"on_skip",E,"The callbacks called when the execution has been skipped.",6,N],[3,R[54],E,"An `Execution` is a process that will be executed by a…",N,N],[12,"uuid",E,"Uuid of the execution.",7,N],[12,R[25],E,"Description of the execution.",7,N],[12,"command",E,"Which command to execute.",7,N],[12,"args",E,"The list of command line arguments.",7,N],[12,"stdin",E,"Optional standard input to pass to the program.",7,N],[12,"stdout",E,"Optional standard output to capture.",7,N],[12,"stderr",E,"Optional standard error to capture.",7,N],[12,"inputs",E,"List of input files that should be put inside the sandbox.",7,N],[12,R[96],E,"List of the output files that should be capture from the…",7,N],[12,"limits",E,"Limits on the execution.",7,N],[12,"tag",E,"The tag associated with this execution.",7,N],[3,R[55],E,"Limits on an `Execution`. On some worker platforms some of…",N,N],[12,R[21],E,"Limit on the userspace cpu time of the process, in seconds.",8,N],[12,R[22],E,"Limit on the kernels pace cpu time of the process, in…",8,N],[12,R[23],E,"Limit on the total time of execution, in seconds. This…",8,N],[12,"memory",E,"Limit on the number of KiB the process can use in any…",8,N],[12,"nproc",E,"Limit on the number of threads/processes the process can…",8,N],[12,"nofile",E,"Limit on the number of file descriptors the process can…",8,N],[12,"fsize",E,"Maximum size of the files (in bytes) the process can…",8,N],[12,"memlock",E,"RLIMIT_MEMLOCK",8,N],[12,"stack",E,"Limit on the stack size for the process. 0 means unlimited.",8,N],[12,"read_only",E,"Whether the process in the sandbox is not allowed to…",8,N],[3,R[56],E,"Resources used during the execution, note that on some…",N,N],[12,R[21],E,"Number of seconds the process used in user space.",9,N],[12,R[22],E,"Number of seconds the process used in kernel space.",9,N],[12,R[23],E,"Number of seconds from the start to the end of the process.",9,N],[12,"memory",E,"Number of KiB used at most by the process.",9,N],[3,R[57],E,"The result of an `Execution`.",N,N],[12,"status",E,"Status of the completed execution.",10,N],[12,R[99],E,"Whether the execution has been killed by the sandbox.",10,N],[12,"was_cached",E,"Whether the execution result come from the cache.",10,N],[12,R[98],E,"Resources used by the execution.",10,N],[3,R[58],E,"The callbacks that will trigger when the file is ready.",N,N],[12,"write_to",E,"Destination of the file if it has to be stored in the disk…",11,N],[12,"get_content",E,"Callback to be called with the first bytes of the file.",11,N],[3,"File",E,"An handle to a file in the evaluation, this only tracks…",N,N],[12,"uuid",E,R[24],12,N],[12,R[25],E,"Description of the file.",12,N],[4,R[59],E,"The setting of the cache level.",N,N],[13,"Everything",E,"Use the cache as much as possible.",13,N],[13,"Nothing",E,"Never use the cache.",13,N],[13,"Except",E,"Use the cache except for these tags.",13,N],[4,R[60],E,"Command of an `Execution` to execute.",N,N],[13,"System",E,"A system command, the workers will search in their `$PATH`…",14,N],[13,"Local",E,"A command relative to the sandbox directory, not to be…",14,N],[4,R[61],E,"Status of a completed `Execution`.",N,N],[13,"Success",E,"The program exited with status 0 within the limits.",15,N],[13,"ReturnCode",E,"The program exited with a non-zero status code, which is…",15,N],[13,"Signal",E,"The program stopped due to a signal, the number and the…",15,N],[13,"TimeLimitExceeded",E,"The program hasn't exited within the time limit constraint.",15,N],[13,"SysTimeLimitExceeded",E,"The program hasn't exited within the sys time limit…",15,N],[13,"WallTimeLimitExceeded",E,"The program hasn't exited within the wall time limit…",15,N],[13,"MemoryLimitExceeded",E,"The program has exceeded the memory limit.",15,N],[13,"InternalError",E,"The sandbox failed to execute the program with the…",15,N],[11,"new",E,"Create an empty ExecutionDAG, without files and executions.",3,[[],[R[70]]]],[11,"provide_file",E,"Provide a file for the computation.",3,[[["self"],["into",[R[1]]],["file"],[R[1]]],[[R[4]],[R[2],[R[4]]]]]],[11,"add_execution",E,"Add an execution to the DAG.",3,[[["self"],[R[33]]]]],[11,"write_file_to",E,"When `file` is ready it will be written to `path`. The…",3,[[["self"],["bool"],["into",[R[1]]],[R[26]],["into",[R[26]]],[R[1]]]]],[11,"get_file_content",E,"Call `callback` with the first `limit` bytes of the file…",3,[[["self"],["usize"],[R[26]],["into",[R[26]]],["f"]]]],[11,"on_execution_start",E,"Add a callback that will be called when the execution…",3,[[["self"],["f"],[R[27]]]]],[11,"on_execution_done",E,"Add a callback that will be called when the execution ends.",3,[[["self"],["f"],[R[27]]]]],[11,"on_execution_skip",E,"Add a callback that will be called when the execution is…",3,[[["self"],["f"],[R[27]]]]],[11,"config_mut",E,"Get a mutable reference to the config of this DAG.",3,[[["self"]],[R[28]]]],[11,"new",E,"Make a new `ExecutionDAGConfig`.",0,[[],[R[28]]]],[11,R[29],E,"Whether to keep the sandbox directory of each execution.",0,[[["self"],["bool"]],["self"]]],[11,"dry_run",E,"Whether to ignore all the subsequent calls to…",0,[[["self"],["bool"]],["self"]]],[11,R[30],E,"Set the cache mode for the executions of this DAG.",0,[[["self"],[R[37]]],["self"]]],[11,R[31],E,"Set the extra time to give to the executions before being…",0,[[["self"],["f64"]],["self"]]],[11,R[32],E,"Set whether to copy the executables of the compilation…",0,[[["self"],["bool"]],["self"]]],[11,"new",E,"Make an empty limits where all the limits are disabled.…",8,[[],[R[34]]]],[11,R[21],E,"Set the cpu time limit in seconds.",8,[[["self"],["f64"]],["self"]]],[11,R[22],E,"Set the sys time limit in seconds.",8,[[["self"],["f64"]],["self"]]],[11,R[23],E,"Set the wall time limit in seconds.",8,[[["self"],["f64"]],["self"]]],[11,"memory",E,"Set the memory limit in KiB.",8,[[["self"],["u64"]],["self"]]],[11,"nproc",E,"Set the maximum number of processes/threads.",8,[[["self"],["u32"]],["self"]]],[11,"nofile",E,"Set the maximum number of opened file descriptors.",8,[[["self"],["u32"]],["self"]]],[11,"fsize",E,"Set the maximum size of the files (in bytes) the process…",8,[[["self"],["u64"]],["self"]]],[11,"memlock",E,"Set the memlock limit.",8,[[["self"],["u64"]],["self"]]],[11,"stack",E,"Set the stack limit.",8,[[["self"],["u64"]],["self"]]],[11,"new",E,"Create a basic `Execution` with the default limits.",7,[[[R[44]],[R[39]],["into",[R[44]]]],[R[33]]]],[11,"dependencies",E,"List of all the File dependencies of the execution,…",7,[[["self"]],[[R[26]],["vec",[R[26]]]]]],[11,R[96],E,"List of all the File produced by the execution, including…",7,[[["self"]],[[R[26]],["vec",[R[26]]]]]],[11,"args",E,"Sets the command line arguments of the execution. Calling…",7,[[["self"],[R[125]]],["self"]]],[11,"stdin",E,"Bind the standard input to the specified file. Calling…",7,[[["self"],["into",[R[26]]],[R[26]]],["self"]]],[11,"stdout",E,"Handle to the standard output of the execution. This…",7,[[["self"]],["file"]]],[11,"stderr",E,"Handle to the standard error of the execution. This should…",7,[[["self"]],["file"]]],[11,"input",E,"Bind a file inside the sandbox to the specified file.…",7,[[["self"],["bool"],["into",[R[1]]],[R[26]],["into",[R[26]]],[R[1]]],["self"]]],[11,"output",E,"Handle to a file produced by the execution. This should be…",7,[[["self"],["debug"],["into",[R[1]]],[R[1]]],["file"]]],[11,"limits_mut",E,"Get a mutable reference to the execution limits.",7,[[["self"]],[R[34]]]],[11,"config",E,"A reference to the configuration of the underlying DAG.",7,[[["self"]],[R[28]]]],[11,"tag",E,"Set the tag of this `Execution`.",7,[[["self"],[R[38]]],["self"]]],[11,"status",E,"Compute the `ExecutionStatus` based on the result of the…",7,[[["self"],["u32"],[R[43],["u32"]],[R[41]]],[R[40]]]],[11,"new",E,"Create a new file handle.",12,[[[R[44]],["into",[R[44]]]],["file"]]],[6,"ExecutionUuid",E,"The identifier of an execution, it's globally unique and…",N,N],[6,"WorkerUuid",E,"The identifier of a worker, it's globally unique and…",N,N],[6,"OnStartCallback",E,"Type of the callback called when an `Execution` starts.",N,N],[6,"OnDoneCallback",E,"Type of the callback called when an `Execution` ends.",N,N],[6,"OnSkipCallback",E,"Type of the callback called when an `Execution` is skipped.",N,N],[6,R[62],E,"The identifier of a file, it's globally unique and it…",N,N],[6,"GetContentCallback",E,"Type of the callback called when a file is returned to the…",N,N],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[35]]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[35]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[35]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[35]]]],[11,R[12],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[35]]]],[11,R[12],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[35]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[35]]]],[11,R[12],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[7],E,E,7,[[[U]],[R[2]]]],[11,R[8],E,E,7,[[],[R[2]]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[35]]]],[11,R[12],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[7],E,E,8,[[[U]],[R[2]]]],[11,R[8],E,E,8,[[],[R[2]]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[35]]]],[11,R[12],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[7],E,E,9,[[[U]],[R[2]]]],[11,R[8],E,E,9,[[],[R[2]]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[35]]]],[11,R[12],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[7],E,E,10,[[[U]],[R[2]]]],[11,R[8],E,E,10,[[],[R[2]]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[35]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[7],E,E,11,[[[U]],[R[2]]]],[11,R[8],E,E,11,[[],[R[2]]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[35]]]],[11,R[12],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"],[T]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[7],E,E,12,[[[U]],[R[2]]]],[11,R[8],E,E,12,[[],[R[2]]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[35]]]],[11,R[12],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"],[T]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[7],E,E,13,[[[U]],[R[2]]]],[11,R[8],E,E,13,[[],[R[2]]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[35]]]],[11,R[12],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"],[T]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[7],E,E,14,[[[U]],[R[2]]]],[11,R[8],E,E,14,[[],[R[2]]]],[11,R[9],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[35]]]],[11,R[12],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"],[T]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[7],E,E,15,[[[U]],[R[2]]]],[11,R[8],E,E,15,[[],[R[2]]]],[11,R[9],E,E,15,[[["self"]],[T]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[35]]]],[11,"as_ref",E,E,12,[[["self"]],[R[26]]]],[11,R[36],E,E,0,[[],["self"]]],[11,R[36],E,E,3,[[],["self"]]],[11,R[36],E,"Default sane values for the execution limits, the limits…",8,[[],["self"]]],[11,R[36],E,E,6,[[],["self"]]],[11,R[36],E,E,11,[[],["filecallbacks"]]],[11,"clone",E,E,13,[[["self"]],[R[37]]]],[11,"clone",E,E,0,[[["self"]],[R[28]]]],[11,"clone",E,E,1,[[["self"]],["providedfile"]]],[11,"clone",E,E,4,[[["self"]],[R[38]]]],[11,"clone",E,E,14,[[["self"]],[R[39]]]],[11,"clone",E,E,5,[[["self"]],["executioninput"]]],[11,"clone",E,E,7,[[["self"]],[R[33]]]],[11,"clone",E,E,8,[[["self"]],[R[34]]]],[11,"clone",E,E,15,[[["self"]],[R[40]]]],[11,"clone",E,E,9,[[["self"]],[R[41]]]],[11,"clone",E,E,10,[[["self"]],[R[42]]]],[11,"clone",E,E,12,[[["self"]],["file"]]],[11,R[63],E,E,12,[[["self"],["file"]],[[R[43],[R[14]]],[R[14]]]]],[11,"lt",E,E,12,[[["self"],["file"]],["bool"]]],[11,"le",E,E,12,[[["self"],["file"]],["bool"]]],[11,"gt",E,E,12,[[["self"],["file"]],["bool"]]],[11,"ge",E,E,12,[[["self"],["file"]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[38]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[38]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[39]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[39]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[34]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[34]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[40]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[40]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[41]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[41]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[42]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[42]]],["bool"]]],[11,"eq",E,E,12,[[["self"],["file"]],["bool"]]],[11,"ne",E,E,12,[[["self"],["file"]],["bool"]]],[11,"from",E,E,13,[[[R[43],[R[43]]],[R[43],[R[44]]]],["self"]]],[11,"from",E,E,4,[[["str"]],["self"]]],[11,"from",E,E,16,[[["file"]],["self"]]],[11,"from",E,E,16,[[["file"]],["self"]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",E,E,14,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"fmt",E,E,13,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,14,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,15,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[16]]],[[R[4]],[R[2],[R[4]]]]]],[11,"fmt",E,E,12,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[16]]],[[R[4]],[R[2],[R[4]]]]]],[11,R[45],E,E,13,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,0,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,1,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,2,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,4,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,14,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,5,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,7,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,8,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,15,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,9,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,10,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,12,[[["self"],["__s"]],[R[2]]]],[11,R[46],E,E,13,[[["__d"]],[R[2]]]],[11,R[46],E,E,0,[[["__d"]],[R[2]]]],[11,R[46],E,E,1,[[["__d"]],[R[2]]]],[11,R[46],E,E,2,[[["__d"]],[R[2]]]],[11,R[46],E,E,4,[[["__d"]],[R[2]]]],[11,R[46],E,E,14,[[["__d"]],[R[2]]]],[11,R[46],E,E,5,[[["__d"]],[R[2]]]],[11,R[46],E,E,7,[[["__d"]],[R[2]]]],[11,R[46],E,E,8,[[["__d"]],[R[2]]]],[11,R[46],E,E,15,[[["__d"]],[R[2]]]],[11,R[46],E,E,9,[[["__d"]],[R[2]]]],[11,R[46],E,E,10,[[["__d"]],[R[2]]]],[11,R[46],E,E,12,[[["__d"]],[R[2]]]]],"p":[[3,R[47]],[3,R[48]],[3,R[49]],[3,R[50]],[3,R[51]],[3,R[52]],[3,R[53]],[3,R[54]],[3,R[55]],[3,R[56]],[3,R[57]],[3,R[58]],[3,"File"],[4,R[59]],[4,R[60]],[4,R[61]],[6,R[62]]]};
searchIndex["task_maker_exec"]={"doc":"DAG execution dispatching the tasks to the workers.","i":[[3,R[113],R[100],"This is a client of the `Executor`, the client is who…",N,N],[3,R[108],E,"List of the interesting files and executions, only the…",N,N],[12,R[97],E,"Set of the handles of the executions that have at least a…",0,N],[12,"files",E,"Set of the handles of the files that have at least a…",0,N],[3,R[109],E,"A job that is sent to a worker, this should include all…",N,N],[12,R[33],E,"What the worker should do.",1,N],[12,"dep_keys",E,"The `FileStoreKey`s the worker has to know to start the…",1,N],[3,R[110],E,"Status of a worker of an `Executor`.",N,N],[12,"uuid",E,"UUID of the worker.",2,N],[12,"name",E,"Name of the worker.",2,N],[12,"current_job",E,"What the worker is currently working on: the description…",2,N],[3,R[111],E,"The current status of the `Executor`, this is sent to the…",N,N],[12,"connected_workers",E,"List of the connected workers with their uuid, name and if…",3,N],[12,"ready_execs",E,"Number of executions waiting for workers.",3,N],[12,"waiting_execs",E,"Number of executions waiting for dependencies.",3,N],[3,"Sandbox",E,"Wrapper around the sandbox. Cloning this struct will keep…",N,N],[4,R[112],E,"Result of the execution of the sandbox.",N,N],[13,"Success",E,"The sandbox exited successfully, the statistics about the…",4,N],[12,"exit_status",R[101],"The exit status of the process.",4,N],[12,"signal",E,"The signal that caused the process to exit.",4,N],[12,R[98],E,"Resources used by the process.",4,N],[12,R[99],E,"Whether the sandbox killed the process.",4,N],[13,"Failed",R[100],"The sandbox failed to execute the process, an error…",4,N],[12,R[4],R[101],"The error reported by the sandbox.",4,N],[5,"serialize_into",R[100],"Serialize a message into the sender serializing it.",N,[[[R[102]],[T]],[[R[4]],[R[2],[R[4]]]]]],[5,"deserialize_from",E,"Deserialize a message from the channel and return it.",N,[[[R[103]]],[[R[4]],[R[2],[R[4]]]]]],[5,"eval_dag_locally",E,"Evaluate a DAG locally spawning a new `LocalExecutor` with…",N,[[[R[70]],["into",[R[1]]],["usize"],[R[1]]]]],[11,"evaluate",E,"Begin the evaluation sending the DAG to the server,…",5,[[[R[70]],["fnmut"],[R[102]],[R[103]]],[[R[4]],[R[2],[R[4]]]]]],[0,"executors",E,"The supported executors.",N,N],[3,R[114],R[107],"An Executor that runs locally by spawning a number of…",N,N],[12,"num_workers",E,"The number of local workers to spawn.",6,N],[11,"new",E,"Make a new `LocalExecutor` based on a `FileStore` and…",6,[[["usize"],[R[3]],["arc",[R[3]]],["into",[R[1]]],[R[1]]],["localexecutor"]]],[11,"evaluate",E,"Starts the Executor spawning the workers on new threads…",6,[[["cache"],[R[102]],[R[103]]],[[R[4]],[R[2],[R[4]]]]]],[0,"proto",R[100],"The protocol related structs and enums.",N,N],[3,R[120],R[104],"An iterator over the byte chunks sent during the…",N,N],[3,R[121],E,"Utility function to send a file to a channel using…",N,N],[4,R[115],E,"Messages that the client sends to the server.",N,N],[13,"Evaluate",E,"The client is asking to evaluate a DAG.",7,N],[12,"dag","task_maker_exec::proto::ExecutorClientMessage","The DAG to evaluate.",7,N],[12,"callbacks",E,"The list of the executions and files to keep track of.",7,N],[13,R[105],R[104],"The client is providing a file. After this message there…",7,N],[13,"Stop",E,"The client is asking to stop the evaluation. All the…",7,N],[13,"Status",E,"The client is asking for the server status. After this…",7,N],[4,R[116],E,"Messages that the server sends to the client.",N,N],[13,"AskFile",E,"The server needs the file with that Uuid. The client must…",8,N],[13,R[105],E,"The server is sending a file. After this message there is…",8,N],[13,"NotifyStart",E,"The execution has started on a worker.",8,N],[13,"NotifyDone",E,"The execution has completed with that result.",8,N],[13,"NotifySkip",E,"The execution has been skipped.",8,N],[13,"Error",E,"There was an error during the evaluation.",8,N],[13,"Status",E,"The server status as asked by the client.",8,N],[13,"Done",E,"The evaluation of the DAG is complete, this message will…",8,N],[4,R[117],E,"Messages sent by the workers to the server.",N,N],[13,"GetWork",E,"The worker is ready for some job. The worker will wait for…",9,N],[13,"WorkerDone",E,"The worker completed the job with this result producing…",9,N],[13,R[105],E,"The worker is sending a file to the server. After this…",9,N],[13,"AskFile",E,"The worker needs a file from the server. The server should…",9,N],[4,R[118],E,"Messages sent by the server to the worker.",N,N],[13,"Work",E,"The job the worker should do. Boxed to reduce the enum size.",10,N],[13,R[105],E,"The file the workers as asked. After this message there is…",10,N],[13,"Exit",E,"Ask the worker to exit.",10,N],[4,R[119],E,"Messages sent during the FileProtocol operation, during…",N,N],[13,"Data",E,"A chunk of data.",11,N],[13,"End",E,"The end of the stream.",11,N],[11,"new",E,"Create a new iterator over a receiver channel.",12,[[[R[103]]],["channelfileiterator"]]],[11,"send",E,"Send a local file to a channel using `FileProtocol`.",13,[[["asref",["path"]],["path"],[R[102]]],[[R[4]],[R[2],[R[4]]]]]],[11,"new",R[100],"Make a new sandbox for the specified execution, copying…",14,[[["path"],[R[33]],["hashmap"]],[[R[4]],[R[2],["sandbox",R[4]]],["sandbox"]]]],[11,"run",E,"Starts the sandbox and blocks the thread until the sandbox…",14,[[["self"]],[[R[4]],[R[106]],[R[2],[R[106],R[4]]]]]],[11,"kill",E,"Tell the sandbox process to kill the underlying process,…",14,[[["self"]]]],[11,"keep",E,"Make the sandbox persistent, the sandbox directory won't…",14,[[["self"]]]],[11,"stdout_path",E,"Path of the file where the standard output is written to.",14,[[["self"]],[R[1]]]],[11,"stderr_path",E,"Path of the file where the standard error is written to.",14,[[["self"]],[R[1]]]],[11,"output_path",E,"Path of the file where that output file is written to.",14,[[["self"],["path"]],[R[1]]]],[6,"ChannelSender",E,"The channel part that sends data.",N,N],[6,"ChannelReceiver",E,"The channel part that receives data.",N,N],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[35]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[35]]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[35]]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[35]]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[35]]]],[11,R[12],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"],[T]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[7],E,E,14,[[[U]],[R[2]]]],[11,R[8],E,E,14,[[],[R[2]]]],[11,R[9],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[35]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[35]]]],[11,"from",R[107],E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[35]]]],[11,R[122],R[104],E,12,[[],["i"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[7],E,E,12,[[[U]],[R[2]]]],[11,R[8],E,E,12,[[],[R[2]]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[35]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[7],E,E,13,[[[U]],[R[2]]]],[11,R[8],E,E,13,[[],[R[2]]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[35]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[7],E,E,7,[[[U]],[R[2]]]],[11,R[8],E,E,7,[[],[R[2]]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[35]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[7],E,E,8,[[[U]],[R[2]]]],[11,R[8],E,E,8,[[],[R[2]]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[35]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[7],E,E,9,[[[U]],[R[2]]]],[11,R[8],E,E,9,[[],[R[2]]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[35]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[7],E,E,10,[[[U]],[R[2]]]],[11,R[8],E,E,10,[[],[R[2]]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[35]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[7],E,E,11,[[[U]],[R[2]]]],[11,R[8],E,E,11,[[],[R[2]]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[35]]]],[11,"clone",R[100],E,1,[[["self"]],["workerjob"]]],[11,"clone",E,E,2,[[["self"]],["executorworkerstatus"]]],[11,"clone",E,E,3,[[["self"]],["executorstatus"]]],[11,"clone",E,E,14,[[["self"]],["sandbox"]]],[11,"next",R[104],E,12,[[["self"]],[R[43]]]],[11,"fmt",R[100],E,0,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",R[104],E,7,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",R[100],E,4,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,14,[[["self"],[R[16]]],[R[2]]]],[11,R[45],E,E,0,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,1,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,2,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,3,[[["self"],["__s"]],[R[2]]]],[11,R[45],R[104],E,7,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,8,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,9,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,10,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,11,[[["self"],["__s"]],[R[2]]]],[11,R[46],R[100],E,0,[[["__d"]],[R[2]]]],[11,R[46],E,E,1,[[["__d"]],[R[2]]]],[11,R[46],E,E,2,[[["__d"]],[R[2]]]],[11,R[46],E,E,3,[[["__d"]],[R[2]]]],[11,R[46],R[104],E,7,[[["__d"]],[R[2]]]],[11,R[46],E,E,8,[[["__d"]],[R[2]]]],[11,R[46],E,E,9,[[["__d"]],[R[2]]]],[11,R[46],E,E,10,[[["__d"]],[R[2]]]],[11,R[46],E,E,11,[[["__d"]],[R[2]]]]],"p":[[3,R[108]],[3,R[109]],[3,R[110]],[3,R[111]],[4,R[112]],[3,R[113]],[3,R[114]],[4,R[115]],[4,R[116]],[4,R[117]],[4,R[118]],[4,R[119]],[3,R[120]],[3,R[121]],[3,"Sandbox"]]};
searchIndex["task_maker_format"]={"doc":"Task parsing and execution using computation DAGs.","i":[[3,R[90],R[124],"Wrapper around `task_maker_lang::SourceFile` that also…",N,N],[3,R[144],E,"Configuration of the evaluation of a task.",N,N],[12,"solution_filter",E,"Execute only the solutions whose names start with the…",0,N],[3,R[145],E,"The data for an evaluation, including the DAG and the UI…",N,N],[12,"dag",E,"The DAG with the evaluation data.",1,N],[12,"sender",E,"The sender of the UI.",1,N],[0,"ioi",E,"The IOI task format.",N,N],[3,"PrintUI",R[141],"A simple UI that will print to stdout the human readable…",N,N],[3,"Task",E,"Information about a generic IOI task.",N,N],[12,"path",E,"Path of the directory of the task.",2,N],[12,"task_type",E,"The type of the task.",2,N],[12,"name",E,"The name of the task (the short one).",2,N],[12,"title",E,"The title of the task (the long one).",2,N],[12,"time_limit",E,"The time limit for the execution of the solutions, if…",2,N],[12,"memory_limit",E,"The memory limit in MiB of the execution of the solution,…",2,N],[12,"infile",E,"The input file for the solutions, usually…",2,N],[12,"outfile",E,"The output file for the solutions, usually…",2,N],[12,"subtasks",E,"The list of the subtasks.",2,N],[12,"checker",E,"The checker to use for this task.",2,N],[12,"testcase_score_aggregator",E,"The aggregator to use to compute the score of the subtask…",2,N],[12,"grader_map",E,"The graders registered for this task.",2,N],[3,R[146],E,"A subtask of a IOI task.",N,N],[12,"id",E,R[131],3,N],[12,"max_score",E,"The maximum score of the subtask, must be >= 0.",3,N],[12,"testcases",E,"The testcases inside this subtask.",3,N],[3,R[147],E,"A testcase of a IOI task.",N,N],[12,"id",E,R[132],4,N],[12,"input_generator",E,"The generator of the input file for this testcase.",4,N],[12,"input_validator",E,"The validator of the input file for this testcase.",4,N],[12,"output_generator",E,"The generator of the output file for this testcase.",4,N],[4,"Checker",E,"Which tool to use to compute the score on a testcase given…",N,N],[13,"WhiteDiff",E,"Use a built-in white diff checker that scores 1.0 if the…",5,N],[13,"Custom",E,"Use a custom checker based on an executable that can…",5,N],[4,R[148],E,"The source of the input files. It can either be a…",N,N],[13,R[123],E,"Use the static file as input. The file will be copied…",6,N],[13,"Custom",E,"Use a custom command to generate the input file. The file…",6,N],[4,R[149],E,"An input file validator is responsible for checking that…",N,N],[13,"AssumeValid",E,"Skip the validation and assume the input file is valid.",7,N],[13,"Custom",E,"Use a custom command to check if the input file is valid.…",7,N],[4,R[150],E,"The source of the output files. It can either be a…",N,N],[13,R[123],E,"Use the static file as output. The file will be copied…",8,N],[13,"Custom",E,"Use a custom command to generate the output file. The task…",8,N],[4,R[151],E,"The aggregator of testcase scores for computing the…",N,N],[13,"Min",E,"Take the minimum of all the testcases, formally:",9,N],[13,"Sum",E,"Sum the score of all the testcases, formally:",9,N],[4,"TaskType",E,"The type of the task. This changes the behaviour of the…",N,N],[13,"Batch",E,"The solution is a single file that will be executed once…",10,N],[4,"Tag",E,"Tags of the various executions inside a IOI task.",N,N],[13,"Generation",E,"Generation of a testcase.",11,N],[13,"Evaluation",E,"Evaluation of a solution.",11,N],[13,"Checking",E,"Checking of a solution.",11,N],[11,"new",E,"Make a new PrintUI.",12,[[["task"]],["printui"]]],[6,"SubtaskId",E,"In IOI tasks the subtask numbers are non-negative 0-based…",N,N],[6,"TestcaseId",E,"In IOI tasks the testcase numbers are non-negative 0-based…",N,N],[11,"new",E,"Try to make a `Task` from the specified path. Will return…",2,[[["asref",["path"]],["path"]],[[R[4]],[R[2],["task",R[4]]],["task"]]]],[11,"new",R[124],"Make a new `SourceFile`. See `task_maker_lang::SourceFile`…",13,[[["arc",[R[68]]],[R[43]],["into",[R[1]]],[R[43],["arc"]],[R[1]]],[[R[43],[R[69]]],[R[69]]]]],[11,"execute",E,"Prepare an execution of the source file, eventually adding…",13,[[["self"],[R[125]],["str"],[R[139]],["asref",["str"]]],[[R[33]],[R[2],[R[33],R[4]]],[R[4]]]]],[0,"ui",E,"The UI functionality for the task formats.",N,N],[3,"JsonUI",R[126],"This UI will print to stdout the UI messages as json.",N,N],[3,"RawUI",E,"This UI will print to stdout all the raw information it…",N,N],[3,R[154],E,"The sender of the UIMessage",N,N],[4,R[152],E,"The status of an execution.",N,N],[13,"Pending",E,"The `Execution` is known to the DAG and when all its…",14,N],[13,"Started",E,"The `Execution` has been started on a worker.",14,N],[12,"worker",R[127],"The UUID of the worker.",14,N],[13,"Done",R[126],"The `Execution` has been completed.",14,N],[12,R[2],R[127],R[128],14,N],[13,"Skipped",R[126],"At least one of its dependencies have failed, the…",14,N],[4,R[153],E,"A message sent to the UI.",N,N],[13,"ServerStatus",E,"An update on the status of the executor.",15,N],[12,"status",R[129],"The status of the executor.",15,N],[13,"Compilation",R[126],"An update on the compilation status.",15,N],[12,"file",R[129],R[130],15,N],[12,"status",E,"The status of the compilation.",15,N],[13,"CompilationStdout",R[126],"An update on the stdout of a compilation.",15,N],[12,"file",R[129],R[130],15,N],[12,"content",E,"The prefix of the stdout of the compilation.",15,N],[13,"CompilationStderr",R[126],"An update on the stderr of a compilation.",15,N],[12,"file",R[129],R[130],15,N],[12,"content",E,"The prefix of the stderr of the compilation.",15,N],[13,"IOITask",R[126],"The information about the task which is being run.",15,N],[12,"task",R[129],"The task information.",15,N],[13,"IOIGeneration",R[126],"The generation of a testcase in a IOI task.",15,N],[12,R[136],R[129],R[131],15,N],[12,R[133],E,R[132],15,N],[12,"status",E,"The status of the generation.",15,N],[13,"IOIValidation",R[126],"The validation of a testcase in a IOI task.",15,N],[12,R[136],R[129],R[131],15,N],[12,R[133],E,R[132],15,N],[12,"status",E,"The status of the validation.",15,N],[13,"IOISolution",R[126],"The solution of a testcase in a IOI task.",15,N],[12,R[136],R[129],R[131],15,N],[12,R[133],E,R[132],15,N],[12,"status",E,R[134],15,N],[13,"IOIEvaluation",R[126],"The evaluation of a solution in a IOI task.",15,N],[12,R[136],R[129],R[131],15,N],[12,R[133],E,R[132],15,N],[12,R[137],E,R[135],15,N],[12,"status",E,R[134],15,N],[13,"IOIChecker",R[126],"The checking of a solution in a IOI task.",15,N],[12,R[136],R[129],R[131],15,N],[12,R[133],E,R[132],15,N],[12,R[137],E,R[135],15,N],[12,"status",E,"The status of the solution. Note that a failure of this…",15,N],[13,"IOITestcaseScore",R[126],"The score of a testcase is ready.",15,N],[12,R[136],R[129],R[131],15,N],[12,R[133],E,R[132],15,N],[12,R[137],E,R[135],15,N],[12,"score",E,"The score of the testcase.",15,N],[12,"message",E,"The message associated with the score.",15,N],[13,"IOISubtaskScore",R[126],"The score of a subtask is ready.",15,N],[12,R[136],R[129],R[131],15,N],[12,R[137],E,R[135],15,N],[12,"score",E,"The score of the subtask.",15,N],[13,"IOITaskScore",R[126],"The score of a task is ready.",15,N],[12,R[137],R[129],R[135],15,N],[12,"score",E,"The score of the task.",15,N],[4,"UIType",R[126],"The type of the UI to use, it enumerates all the known UI…",N,N],[13,"Print",E,"The `PrintUI`.",16,N],[13,"Raw",E,"The `RawUI`.",16,N],[13,"Curses",E,"The `CursesUI`.",16,N],[13,"Json",E,"The `JsonUI`.",16,N],[11,"new",E,"Make a new `JsonUI`.",17,[[],["jsonui"]]],[11,"new",E,"Make a new RawUI.",18,[[],["rawui"]]],[6,"UIChannelSender",E,"Channel type for sending `UIMessage`s.",N,N],[6,"UIChannelReceiver",E,"Channel type for receiving `UIMessage`s.",N,N],[8,"UI",E,"The trait that describes the UI functionalities.",N,N],[10,R[142],E,"Process a new UI message.",19,[[["self"],[R[138]]]]],[10,"finish",E,"Make the UI print the ending results.",19,[[["self"]]]],[11,"new",E,"Make a new pair of UIMessageSender and ChannelReceiver.",20,[[]]],[11,"send",E,"Send a message to the channel.",20,[[["self"],[R[138]]],[[R[4]],[R[2],[R[4]]]]]],[8,R[155],R[124],"Trait that defines the capabilities of a task format,…",N,N],[10,"ui",E,"Get an appropriate `UI` for this task.",21,[[["self"],["uitype"]],[[R[4]],[R[2],["box",R[4]]],["box",["ui"]]]]],[10,"execute",E,"Execute the evaluation of this task by adding the…",21,[[["self"],[R[139]],[R[143]]],[[R[4]],[R[2],[R[4]]]]]],[10,"clean",E,"Clean the task folder removing the files that can be…",21,[[["self"]],[[R[4]],[R[2],[R[4]]]]]],[8,"UISender",E,"What can send `UIMessage`s.",N,N],[10,"send",E,"Send that `UIMessage` to the UI.",22,[[["self"],[R[138]]],[[R[4]],[R[2],[R[4]]]]]],[11,"new",E,"Crate a new `EvaluationData` returning the data and the…",1,[[]]],[14,"bind_exec_callbacks",E,"Bind the start/done/skip callbacks of an execution to a ui…",N,N],[14,"cwrite",E,R[140],N,N],[14,"cwriteln",E,R[140],N,N],[11,R[12],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"],[T]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[7],E,E,13,[[[U]],[R[2]]]],[11,R[8],E,E,13,[[],[R[2]]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[35]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[35]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[35]]]],[11,"from",R[141],E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[7],E,E,12,[[[U]],[R[2]]]],[11,R[8],E,E,12,[[],[R[2]]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[35]]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[35]]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[35]]]],[11,R[12],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[35]]]],[11,R[12],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[35]]]],[11,R[12],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[35]]]],[11,R[12],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[7],E,E,7,[[[U]],[R[2]]]],[11,R[8],E,E,7,[[],[R[2]]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[35]]]],[11,R[12],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[7],E,E,8,[[[U]],[R[2]]]],[11,R[8],E,E,8,[[],[R[2]]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[35]]]],[11,R[12],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[7],E,E,9,[[[U]],[R[2]]]],[11,R[8],E,E,9,[[],[R[2]]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[35]]]],[11,R[12],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[7],E,E,10,[[[U]],[R[2]]]],[11,R[8],E,E,10,[[],[R[2]]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[35]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[7],E,E,11,[[[U]],[R[2]]]],[11,R[8],E,E,11,[[],[R[2]]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[35]]]],[11,"from",R[126],E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[7],E,E,17,[[[U]],[R[2]]]],[11,R[8],E,E,17,[[],[R[2]]]],[11,R[9],E,E,17,[[["self"]],[T]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[35]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[7],E,E,18,[[[U]],[R[2]]]],[11,R[8],E,E,18,[[],[R[2]]]],[11,R[9],E,E,18,[[["self"]],[T]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[35]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[7],E,E,20,[[[U]],[R[2]]]],[11,R[8],E,E,20,[[],[R[2]]]],[11,R[9],E,E,20,[[["self"]],[T]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[35]]]],[11,R[12],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"],[T]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[7],E,E,14,[[[U]],[R[2]]]],[11,R[8],E,E,14,[[],[R[2]]]],[11,R[9],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[35]]]],[11,R[12],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"],[T]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[7],E,E,15,[[[U]],[R[2]]]],[11,R[8],E,E,15,[[],[R[2]]]],[11,R[9],E,E,15,[[["self"]],[T]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[35]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[7],E,E,16,[[[U]],[R[2]]]],[11,R[8],E,E,16,[[],[R[2]]]],[11,R[9],E,E,16,[[["self"]],[T]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[35]]]],[11,R[142],R[141],E,12,[[["self"],[R[138]]]]],[11,"finish",E,E,12,[[["self"]]]],[11,R[142],R[126],E,17,[[["self"],[R[138]]]]],[11,"finish",E,E,17,[[["self"]]]],[11,R[142],E,E,18,[[["self"],[R[138]]]]],[11,"finish",E,E,18,[[["self"]]]],[11,"ui",R[141],E,2,[[["self"],["uitype"]],[[R[4]],[R[2],["box",R[4]]],["box",["ui"]]]]],[11,"execute",E,E,2,[[["self"],[R[139]],[R[143]]],[[R[4]],[R[2],[R[4]]]]]],[11,"clean",E,E,2,[[["self"]],[[R[4]],[R[2],[R[4]]]]]],[11,R[36],R[126],E,17,[[],["jsonui"]]],[11,R[36],E,E,18,[[],["rawui"]]],[11,"clone",R[141],E,5,[[["self"]],["checker"]]],[11,"clone",E,E,6,[[["self"]],["inputgenerator"]]],[11,"clone",E,E,7,[[["self"]],["inputvalidator"]]],[11,"clone",E,E,8,[[["self"]],["outputgenerator"]]],[11,"clone",E,E,9,[[["self"]],["testcasescoreaggregator"]]],[11,"clone",E,E,10,[[["self"]],["tasktype"]]],[11,"clone",E,E,2,[[["self"]],["task"]]],[11,"clone",E,E,3,[[["self"]],["subtaskinfo"]]],[11,"clone",E,E,4,[[["self"]],["testcaseinfo"]]],[11,"clone",R[124],E,13,[[["self"]],[R[69]]]],[11,"clone",R[126],E,14,[[["self"]],["uiexecutionstatus"]]],[11,"clone",E,E,15,[[["self"]],[R[138]]]],[11,"into",R[141],E,11,[[],[R[38]]]],[11,"deref",R[124],E,13,[[["self"]]]],[11,"deref_mut",E,E,13,[[["self"]]]],[11,"fmt",R[141],E,5,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",R[124],E,13,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",R[126],E,14,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,15,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,16,[[["self"],[R[16]]],[R[2]]]],[11,"from_str",R[141],E,9,[[["str"]],[R[2]]]],[11,"from_str",R[126],E,16,[[["str"]],[["uitype"],[R[2],["uitype"]]]]],[11,R[45],R[141],E,5,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,6,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,7,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,8,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,9,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,10,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,2,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,3,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,4,[[["self"],["__s"]],[R[2]]]],[11,R[45],R[124],E,13,[[["self"],["__s"]],[R[2]]]],[11,R[45],R[126],E,14,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,15,[[["self"],["__s"]],[R[2]]]],[11,R[46],R[141],E,5,[[["__d"]],[R[2]]]],[11,R[46],E,E,6,[[["__d"]],[R[2]]]],[11,R[46],E,E,7,[[["__d"]],[R[2]]]],[11,R[46],E,E,8,[[["__d"]],[R[2]]]],[11,R[46],E,E,9,[[["__d"]],[R[2]]]],[11,R[46],E,E,10,[[["__d"]],[R[2]]]],[11,R[46],E,E,2,[[["__d"]],[R[2]]]],[11,R[46],E,E,3,[[["__d"]],[R[2]]]],[11,R[46],E,E,4,[[["__d"]],[R[2]]]],[11,R[46],R[124],E,13,[[["__d"]],[R[2]]]],[11,R[46],R[126],E,14,[[["__d"]],[R[2]]]],[11,R[46],E,E,15,[[["__d"]],[R[2]]]]],"p":[[3,R[144]],[3,R[145]],[3,"Task"],[3,R[146]],[3,R[147]],[4,"Checker"],[4,R[148]],[4,R[149]],[4,R[150]],[4,R[151]],[4,"TaskType"],[4,"Tag"],[3,"PrintUI"],[3,R[90]],[4,R[152]],[4,R[153]],[4,"UIType"],[3,"JsonUI"],[3,"RawUI"],[8,"UI"],[3,R[154]],[8,R[155]],[8,"UISender"]]};
searchIndex["task_maker_lang"]={"doc":"Crate for managing programming languages and source files.","i":[[3,R[91],"task_maker_lang","The storage of the compilation/runtime dependencies for…",N,N],[3,R[89],E,"A dependency of an execution, all the sandbox paths must…",N,N],[12,"file",E,"The handle of the file.",0,N],[12,R[64],E,"The path of the file on the local system.",0,N],[12,"sandbox_path",E,"The path inside of the sandbox of where to put the file.…",0,N],[12,R[65],E,"Whether the file should be executable or not.",0,N],[3,R[90],E,"A source file that will be able to be executed (with an…",N,N],[12,"path",E,"Path to the source file.",1,N],[3,R[93],E,"Manager of all the known languages, you should use this to…",N,N],[11,"new",E,"Make a new map with the specified graders.",2,[[["into",[R[1]]],["vec"],[R[1]]],[R[68]]]],[11,"get_compilation_deps",E,"Extra compilation dependencies of the graders, will be an…",2,[[["self"],[R[67]]],[[R[66]],["vec",[R[66]]]]]],[11,"get_runtime_deps",E,"Extra runtime dependencies of the graders, will be an…",2,[[["self"],[R[67]]],[[R[66]],["vec",[R[66]]]]]],[11,"all_paths",E,"Return an iterator over the paths of all the graders in…",2,[[["self"]]]],[11,"new",E,"Make a new `SourceFile` from the provided file. Will…",1,[[[R[43]],[R[43],["arc"]],["into",[R[1]]],["arc",[R[68]]],[R[1]]],[[R[69]],[R[43],[R[69]]]]]],[11,"execute",E,"Execute the program relative to this source file with the…",1,[[["self"],["vec",[R[44]]],[R[70]],["str"],[R[44]],["asref",["str"]]],[[R[4]],[R[2],[R[4]]]]]],[11,"name",E,"The file name of the source file.",1,[[["self"]],[R[44]]]],[11,"compilation_stdout",E,"The standard output of the compilation, if the source file…",1,[[["self"]],[[R[43],["file"]],["file"]]]],[11,"compilation_stderr",E,"The standard error of the compilation, if the source file…",1,[[["self"]],[[R[43],["file"]],["file"]]]],[8,R[92],E,"Trait that defines the properties of the supported…",N,N],[10,"name",E,"Full name of the language. This must be unique between all…",3,[[["self"]],["str"]]],[10,"extensions",E,"List of valid extensions for this language. A file is…",3,[[["self"]],[["vec",["str"]],["str"]]]],[10,"need_compilation",E,"Whether this language needs a compilation step. Returning…",3,[[["self"]],["bool"]]],[11,R[71],E,R[72],3,[[["self"],["path"]],[R[39]]]],[11,R[73],E,R[74],3,[[["self"],["path"]],[[R[44]],["vec",[R[44]]]]]],[11,R[75],E,R[76],3,[[["self"],["path"],["vec",[R[44]]],[R[44]]],[[R[44]],["vec",[R[44]]]]]],[11,R[77],E,R[78],3,[[["self"],["path"]],[[R[66]],["vec",[R[66]]]]]],[11,R[79],E,R[80],3,[[["self"],["path"]],[R[39]]]],[11,R[81],E,R[82],3,[[["self"],["path"],["vec",[R[44]]],[R[44]]],[[R[44]],["vec",[R[44]]]]]],[11,R[83],E,R[84],3,[[["self"],["path"],["vec",[R[44]]],[R[44]]],[[R[44]],["vec",[R[44]]]]]],[11,R[85],E,R[86],3,[[["self"],["path"]],[[R[66]],["vec",[R[66]]]]]],[11,R[87],E,R[88],3,[[["self"],["path"]],[R[1]]]],[11,"detect_language",E,"Given a path to a file guess the language that the source…",4,[[["asref",["path"]],["path"]],[[R[43],["arc"]],["arc",[R[67]]]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[35]]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[35]]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[35]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[35]]]],[11,"clone",E,E,0,[[["self"]],[R[66]]]],[11,"clone",E,E,1,[[["self"]],[R[69]]]],[11,"fmt",E,E,2,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[16]]],[R[2]]]],[11,R[45],E,E,2,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,0,[[["self"],["__s"]],[R[2]]]],[11,R[45],E,E,1,[[["self"],["__s"]],[R[2]]]],[11,R[46],E,E,2,[[["__d"]],[R[2]]]],[11,R[46],E,E,0,[[["__d"]],[R[2]]]],[11,R[46],E,E,1,[[["__d"]],[R[2]]]],[11,R[71],E,R[72],3,[[["self"],["path"]],[R[39]]]],[11,R[73],E,R[74],3,[[["self"],["path"]],[[R[44]],["vec",[R[44]]]]]],[11,R[75],E,R[76],3,[[["self"],["path"],["vec",[R[44]]],[R[44]]],[[R[44]],["vec",[R[44]]]]]],[11,R[77],E,R[78],3,[[["self"],["path"]],[[R[66]],["vec",[R[66]]]]]],[11,R[79],E,R[80],3,[[["self"],["path"]],[R[39]]]],[11,R[81],E,R[82],3,[[["self"],["path"],["vec",[R[44]]],[R[44]]],[[R[44]],["vec",[R[44]]]]]],[11,R[83],E,R[84],3,[[["self"],["path"],["vec",[R[44]]],[R[44]]],[[R[44]],["vec",[R[44]]]]]],[11,R[85],E,R[86],3,[[["self"],["path"]],[[R[66]],["vec",[R[66]]]]]],[11,R[87],E,R[88],3,[[["self"],["path"]],[R[1]]]]],"p":[[3,R[89]],[3,R[90]],[3,R[91]],[8,R[92]],[3,R[93]]]};
searchIndex["task_maker_store"]={"doc":"This crate manages the file store on disk, a folder with…","i":[[3,R[17],"task_maker_store","Struct implementing the Iterator trait which will iterate…",N,N],[3,R[18],E,"A file store will manage all the files in the store…",N,N],[3,R[19],E,"Handle of a file in the `FileStore`, this must be…",N,N],[3,R[20],E,"An handle to a specific file inside the store, until this…",N,N],[11,"new",E,"Make a new iterator reading the file at that path",0,[[["asref",["path"]],["path"]],[[R[4]],[R[2],[R[0],R[4]]],[R[0]]]]],[11,"new",E,"Make a new `FileStore` in the specified base directory,…",1,[[["into",[R[1]]],[R[1]]],[[R[3]],[R[4]],[R[2],[R[3],R[4]]]]]],[11,"store",E,"Given an iterator of `Vec<u8>` consume all of it writing…",1,[[["self"],["i"],[R[6]]],[[R[5]],[R[4]],[R[2],[R[5],R[4]]]]]],[11,"get",E,"Returns an handle to the file with that key or `None` if…",1,[[["self"],[R[6]]],[[R[43],[R[5]]],[R[5]]]]],[11,"from_file",E,"Make a new `FileStoreKey` from a file on disk. The file…",2,[[["asref",["path"]],["path"]],[[R[6]],[R[2],[R[6],R[4]]],[R[4]]]]],[11,"path",E,"The path to the file pointed by this handle.",3,[[["self"]],["path"]]],[11,"key",E,"The key of the file pointed by this handle.",3,[[["self"]],[R[6]]]],[11,R[122],E,E,0,[[],["i"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[35]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[35]]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[15],E,E,2,[[["self"]],[R[44]]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[35]]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[35]]]],[11,"drop",E,E,3,[[["self"]]]],[11,"clone",E,E,2,[[["self"]],[R[6]]]],[11,"clone",E,E,3,[[["self"]],["self"]]],[11,R[63],E,E,2,[[["self"],[R[6]]],[[R[43],[R[14]]],[R[14]]]]],[11,"lt",E,E,2,[[["self"],[R[6]]],["bool"]]],[11,"le",E,E,2,[[["self"],[R[6]]],["bool"]]],[11,"gt",E,E,2,[[["self"],[R[6]]],["bool"]]],[11,"ge",E,E,2,[[["self"],[R[6]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[6]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[6]]],["bool"]]],[11,"next",E,E,0,[[["self"]],[R[43]]]],[11,R[15],E,E,2,[[["self"]],[R[44]]]],[11,"cmp",E,E,2,[[["self"],[R[6]]],[R[14]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"fmt",E,E,1,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[16]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[16]]],[[R[4]],[R[2],[R[4]]]]]],[11,R[45],E,E,2,[[["self"],["s"]],[R[2]]]],[11,R[46],E,E,2,[[["d"]],[R[2]]]]],"p":[[3,R[17]],[3,R[18]],[3,R[19]],[3,R[20]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);