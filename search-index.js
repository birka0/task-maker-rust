var N=null,E="",T="t",U="u",searchIndex={};
var R=["readfileiterator","result","filestorekey","error","filestore","option","try_from","try_into","borrow","borrow_mut","type_id","to_string","ordering","formatter","backtrace","FileStoreError","ReadFileIterator","FileStoreKey","FileStore","cpu_time","sys_time","wall_time","Uuid of the file.","description","fileuuid","pathbuf","executionuuid","execution","executionlimits","to_owned","clone_into","typeid","default","executioncommand","serialize","deserialize","ProvidedFile","ExecutionDAGData","ExecutionDAG","ExecutionInput","ExecutionCallbacks","Execution","ExecutionLimits","ExecutionResourcesUsage","ExecutionResult","FileCallbacks","ExecutionCommand","ExecutionStatus","FileUuid","string","partial_cmp","executions","task_maker_exec","task_maker_exec::DAGError","The duplicated UUID.","resources","task_maker_exec::SandboxResult","executiondag","channelreceiver","channelsender","evaluate","task_maker_exec::proto","ProvideFile","sandboxresult","task_maker_exec::executors","sandbox","ExecutionDAGWatchSet","WorkerJob","ExecutorStatus","DAGError","SandboxResult","ExecutorClient","LocalExecutor","ExecutorClientMessage","ExecutorServerMessage","WorkerClientMessage","WorkerServerMessage","FileProtocol","ChannelFileIterator","ChannelFileSender","into_iter","local_path","executable","dependency","language","gradermap","sourcefile","compilation_command","Command to use to compile the source file. The blanked…","compilation_args","Arguments to pass to the compiler to compile to source…","compilation_add_file","Add a file to the compilation command if the language…","compilation_dependencies","The dependencies to put inside the compilation sandbox.…","runtime_command","Command to use to run the program. It defaults to the…","runtime_args","Arguments to pass to the executable to start the evaluation.","runtime_add_file","Add a file to the runtime command if the language requires…","runtime_dependencies","The dependencies to put inside the execution sandbox. This…","executable_name","The name of the executable to call inside the sandbox. It…","Dependency","SourceFile","GraderMap","LanguageManager","task_maker","subtaskinfo","scoretype","score_type","source_file","task_maker::task_types::ioi::formats","task_maker::task_types::ioi::formats::TaskInputEntry","task_maker::task_types::ioi","task_maker::task_types","evaluationdata","subtaskid","testcaseid","max_score","generator","validator","solution","uimessagesender","uiexecutionstatus","testcase_score","testcases","hashmap","The score type to use for this task.","solutions","taskuiinterface","SubtaskInfo","TestcaseInfo","task_maker::ui","task_maker::ui::UIExecutionStatus","task_maker::ui::UIMessage","subtasks","The id of the subtaks.","testcase","The id of the testcase.","IOISolution","subtask","The status of the solution.","The path of the solution.","uimessage","task_maker::evaluation","task_maker::score_types","get_subtask_score","get_task_score","generate","ioisubtaskid","ioitestcaseid","boxfnonce","write_input_to","write_output_to","cache_mode","task_info","generation_result","validation_result","solution_result","evaluation_result","checker_result","subtask_score","task_score","get_ui_interface","EvaluationData","ScoreTypeMin","ScoreType","StaticFileProvider","CheckerResult","WhiteDiffChecker","IOIBatchTask","IOITaskInfo","IOITaskYAML","IOISubtaskInfo","IOITestcaseInfo","IOIGenerator","IOIValidator","TaskInputEntry","Generator","Validator","EvaluationOptions","TaskUIInterface","TaskFormat","UIExecutionStatus","UIMessage","UIMessageSender","IOITaskUIInterface","IOIEvaluationOptions","IOIItalianYaml","localexecutor"];
searchIndex["task_maker"]={"doc":E,"i":[[0,"evaluation",R[109],E,N,N],[3,R[167],R[147],"The data for an evaluation, including the DAG and the UI…",N,N],[12,"dag",E,"The DAG with the evaluation data.",0,N],[12,"sender",E,"The sender of the UI.",0,N],[3,R[106],E,"Wrapper around `task_maker_lang::SourceFile` that also…",N,N],[8,"UISender",E,"What can send UIMessages.",N,N],[10,"send",E,E,1,[[["self"],[R[146]]],[[R[3]],[R[1],[R[3]]]]]],[11,"new",E,"Crate a new EvaluationData returning the data and the…",0,[[]]],[11,"new",E,"Make a new `SourceFile`. See `task_maker_lang::SourceFile`…",2,[[["arc",[R[85]]],["into",[R[25]]],[R[5],["arc"]],[R[25]]],[[R[5],[R[86]]],[R[86]]]]],[11,"execute",E,"Prepare an execution of the source file, eventually adding…",2,[[["self"],["vec",[R[49]]],[R[49]],[R[118]],["str"]],[[R[27]],[R[3]],[R[1],[R[27],R[3]]]]]],[0,"score_types",R[109],E,N,N],[3,R[168],R[148],"The score type `min`, for each subtask takes the value of…",N,N],[11,"new",E,"Make a new ScoreTypeMin.",3,[[[R[129],["testcaseinfo"]],[R[110]],[R[129],[R[129]]],[R[129],[R[110]]]],["scoretypemin"]]],[8,R[169],E,"A score type is the aggregation function for the testcases…",N,N],[10,R[127],E,"Tell the ScoreType the score of a new testcase. Will…",4,[[["self"],[R[119]],["f64"],[R[120]]]]],[10,R[149],E,"Set the callback that will be called when a subtask has…",4,[[["self"],["box",["fn"]],["fn"]]]],[10,R[150],E,"Set the callback that will be called when the task has the…",4,[[["self"],["box",["fn"]],["fn"]]]],[10,"boxed",E,"Clone this ScoreType inside a Box. Note that the callbacks…",4,[[["self"]],[[R[111]],["box",[R[111]]]]]],[0,"task_types",R[109],E,N,N],[3,R[170],R[117],"A generator/solution that will simply use a static file",N,N],[12,R[23],E,"A textual description of the testcase, for example 'Sample…",5,N],[12,"path",E,"Path to the file on the disk",5,N],[3,R[172],E,"A checker that compares the output files ignoring the…",N,N],[3,R[171],E,"The result of the checking process",N,N],[12,"score",E,"Value from 0.0 (not correct) to 1.0 (correct) with the…",6,N],[12,"message",E,"Optional message from the checker",6,N],[11,"new",E,"Make a new StaticFileProvider",5,[[[R[49]],[R[25]]],["staticfileprovider"]]],[11,"new",E,"Make a new WhiteDiffChecker",7,[[],["whitediffchecker"]]],[0,"ioi",E,E,N,N],[3,R[173],R[116],"In a IOI Batch task each input file is evaluated by a…",N,N],[12,"info",E,"Information about the task",8,N],[12,R[131],E,"List of the known solutions",8,N],[3,R[189],E,"The interface between a IOI task and the UI.",N,N],[3,R[174],E,"Information about a generic IOI task",N,N],[12,"path",E,"Path of the directory of the task.",9,N],[12,"yaml",E,"The information from the yaml file",9,N],[12,R[138],E,"The list of the subtasks",9,N],[12,R[128],E,"The list of the testcases of each subtask",9,N],[12,"checker",E,"The checker to use for this task",9,N],[12,R[112],E,"The score type to use for this task",9,N],[3,R[175],E,"Deserialized data from the task.yaml of a IOI format task",N,N],[12,"name",E,"The name of the task (the short one)",10,N],[12,"title",E,"The title of the task (the long one)",10,N],[12,"n_input",E,"The number of input files, if not provided will be…",10,N],[12,"score_mode",E,"The score mode for this task, task-maker will ignore this.",10,N],[12,R[112],E,R[130],10,N],[12,"token_mode",E,"The token mode of this task.",10,N],[12,"time_limit",E,"The timelimit for the execution of the solutions, if not…",10,N],[12,"memory_limit",E,"The memory limit in MiB of the execution of the solution,…",10,N],[12,"public_testcases",E,"A list of comma separated numbers of the testcases with…",10,N],[12,"output_only",E,"Whether this is an output only task. Defaults to false.",10,N],[12,"total_value",E,"The maximum score of this task, if it's not set it will be…",10,N],[12,"infile",E,"The input file for the solutions, usually 'input.txt' or…",10,N],[12,"outfile",E,"The output file for the solutions, usually 'output.txt' or…",10,N],[12,"primary_language",E,"The primary language for this task.",10,N],[3,R[176],E,"A subtask of a IOI task",N,N],[12,R[121],E,"The maximum score of the subtask, must be >= 0",11,N],[3,R[177],E,"A testcase of a IOI task. Every testcase has an input and…",N,N],[12,R[140],E,"The number of the testcase",12,N],[12,R[122],E,"The generator of this testcase",12,N],[12,R[123],E,"The validator of this testcase",12,N],[12,R[124],E,"The official solution of this testcase",12,N],[3,R[178],E,"A generator formed by a source file and a list of…",N,N],[12,R[113],E,"The source file with the generator.",13,N],[12,"args",E,"The list of arguments to pass to the generator",13,N],[3,R[179],E,"A validator of a testcase.",N,N],[12,R[113],E,"The source file with the validator.",14,N],[12,"args",E,"The list of arguments to pass to the validator.",14,N],[3,R[142],E,"A solution for a task, not necessary the official one.",N,N],[12,R[113],E,"The source file with the solution.",15,N],[12,"infile",E,"The input file the solution is expecting, None for stdin.",15,N],[12,"outfile",E,"The output file the solution is writing to. None for stdout.",15,N],[12,"limits",E,"Limits to set to the execution of the solution.",15,N],[3,R[190],E,"Evaluation options for a IOI task",N,N],[5,"list_files",E,"List all the files inside `cwd` that matches a list of…",N,[[["path"],["str"],["vec",["str"]]],[["vec",[R[25]]],[R[25]]]]],[5,"find_source_file",E,"Make a SourceFile with the first file that matches the…",N,[[["path"],["arc",[R[85]]],["vec",["str"]],[R[5],["arc"]],["str"]],[[R[5],[R[86]]],[R[86]]]]],[11,"new",E,"Make a new IOIGenerator based on that source file and…",13,[[["vec",[R[49]]],[R[49]],[R[86]],["arc",[R[86]]]],["ioigenerator"]]],[11,"new",E,"Make a new IOIValidator based on that source file and…",14,[[["vec",[R[49]]],[R[49]],[R[86]],["arc",[R[86]]]],["ioivalidator"]]],[11,"new",E,"Make a new IOISolution based on that source file.",15,[[[R[25]],[R[28]],[R[5],[R[25]]],[R[86]],["arc",[R[86]]]],["ioisolution"]]],[0,"formats",E,E,N,N],[3,R[191],R[114],"italian_yaml format is structured as follow: * task.yaml -…",N,N],[4,"Rule",E,E,N,N],[13,"EOI",E,E,16,N],[13,"whitespace",E,E,16,N],[13,"non_newline",E,E,16,N],[13,"number",E,E,16,N],[13,"word",E,E,16,N],[13,"spaces",E,E,16,N],[13,"comment",E,E,16,N],[13,R[143],E,E,16,N],[13,"copy",E,E,16,N],[13,"command",E,E,16,N],[13,"empty",E,E,16,N],[13,"line",E,E,16,N],[13,"file",E,E,16,N],[4,R[180],E,"The iterator item type when following the task input…",N,N],[13,"Subtask",E,E,17,N],[12,"id",R[115],E,17,N],[12,"info",E,E,17,N],[13,"GenerateTestcase",R[114],E,17,N],[12,R[143],R[115],E,17,N],[12,"id",E,E,17,N],[12,"cmd",E,E,17,N],[13,"CopyTestcase",R[114],E,17,N],[12,R[143],R[115],E,17,N],[12,"id",E,E,17,N],[12,"path",E,E,17,N],[5,"parse_gen_gen",R[114],"Parse the gen/GEN file extracting the subtasks and the…",N,[[["path"]],[[R[3]],["box",["iterator"]],[R[1],["box",R[3]]]]]],[5,"static_inputs",E,"Make an iterator over all the input files inside the…",N,[[["path"]],[[R[3]],["box",["iterator"]],[R[1],["box",R[3]]]]]],[6,"IOISubtasksInfo",E,E,N,N],[6,"IOITestcasesInfo",E,E,N,N],[6,"IOISubtaskId",R[116],"In IOI tasks the subtask numbers are non-negative integers",N,N],[6,"IOITestcaseId",E,"In IOI tasks the testcase numbers are non-negative integers",N,N],[8,R[181],R[117],"A trait that describes what is a generator: something that…",N,N],[10,R[151],E,"Generate an input file editing the DAG and returning the…",18,[[["self"],[R[118]],[R[119]],[R[120]]]]],[8,R[182],E,"A trait that describes what is a validator: something that…",N,N],[10,"validate",E,"Validate the input file editing the DAG and returing an…",19,[[["self"],[R[120]],[R[118]],["file"],[R[119]]]]],[8,"Solution",E,"A trait that describes what is a solution: something that…",N,N],[10,"solve",E,"Generate the output file editing the DAG and returning the…",20,[[["self"],[R[119]],[R[120]],[R[118]],["file"],[R[5],["file"]]]]],[8,"Checker",E,"A trait that describes what is a checker: something that…",N,N],[10,"check",E,"Add the checking process to the DAG and call the callback…",21,[[["self"],[R[154]],[R[119]],[R[118]],[R[120]],["file"],[R[5],["file"]]],[R[27]]]],[8,R[133],E,"Some basic information about a subtask",N,N],[10,R[121],E,"Maximum score of this subtask",22,[[["self"]],["f64"]]],[8,R[134],E,"Some basic information about a testcase.",N,N],[10,R[155],E,"Write the input file to this path if it's not a dry-run,…",23,[[["self"]],[[R[5],[R[25]]],[R[25]]]]],[10,R[156],E,"Write the output file to this path if it's not a dry-run,…",23,[[["self"]],[[R[5],[R[25]]],[R[25]]]]],[10,R[122],E,"The generator that will create that testcase",23,[[["self"]],[["arc",[R[122]]],[R[122]]]]],[10,R[123],E,"The optional validator that will validate that testcase",23,[[["self"]],[[R[5],["arc"]],["arc",[R[123]]]]]],[10,R[124],E,"The solution of the testcase.",23,[[["self"]],[[R[124]],["arc",[R[124]]]]]],[8,R[183],E,"The options for an evaluation",N,N],[10,"dry_run",E,"Whether the input/output files should be written somewhere",24,[[["self"]],["bool"]]],[10,R[157],E,"The cache mode to use for the evaluation",24,[[["self"]],["bool"]]],[8,R[184],E,"An interface between a Task type and the UI. Each task…",N,N],[10,R[158],E,"Send the information about the task to the UI.",25,[[["self"],["mutex",[R[125]]],["arc",["mutex"]]]]],[10,R[159],E,"Send to the UI the status of the generation of a testcase.",25,[[["self"],[R[120]],["mutex",[R[125]]],[R[126]],[R[119]],["arc",["mutex"]]]]],[10,R[160],E,"Send to the UI the status of the validation of a testcase.",25,[[["self"],[R[120]],["mutex",[R[125]]],[R[126]],[R[119]],["arc",["mutex"]]]]],[10,R[161],E,"Send to the UI the status of the generation of the output…",25,[[["self"],[R[120]],["mutex",[R[125]]],[R[126]],[R[119]],["arc",["mutex"]]]]],[10,R[162],E,"Send to the ui the status of the evaluation of a solution…",25,[[["self"],[R[120]],["mutex",[R[125]]],[R[25]],[R[126]],[R[119]],["arc",["mutex"]]]]],[10,R[163],E,"Send to the ui the status of the checking of a solution on…",25,[[["self"],[R[120]],["mutex",[R[125]]],[R[25]],[R[126]],[R[119]],["arc",["mutex"]]]]],[10,R[127],E,"Send to the ui the score of a solution of a testcase.",25,[[["self"],[R[120]],["mutex",[R[125]]],[R[25]],[R[119]],["f64"],["arc",["mutex"]]]]],[10,R[164],E,"Send to the ui the score of a solution of a subtask.",25,[[["self"],[R[25]],["mutex",[R[125]]],[R[119]],["f64"],["arc",["mutex"]]]]],[10,R[165],E,"Send to the ui the score of a solution of a task.",25,[[["self"],[R[25]],["mutex",[R[125]]],["f64"],["arc",["mutex"]]]]],[8,"Task",E,"Trait that describes a generic task. Every task must have…",N,N],[10,"format",E,"Name of the format of the task",26,[[],["str"]]],[10,"path",E,"Path to the root folder of the task.",26,[[["self"]],["path"]]],[10,"name",E,"Name of the task (the short one)",26,[[["self"]],[R[49]]]],[10,"title",E,"Title of the task (the long one)",26,[[["self"]],[R[49]]]],[10,R[138],E,"The list of the subtasks for this task",26,[[["self"]],[R[129]]]],[10,R[128],E,"The list of the testcases for that subtask",26,[[["self"],[R[119]]],[R[129]]]],[10,R[112],E,R[130],26,[[["self"]],[R[111]]]],[10,R[131],E,"The list of known solution files",26,[[["self"]],[R[129]]]],[10,"checker",E,"The optional checker that will check the output file",26,[[["self"],[R[119]],[R[120]]],["box"]]],[10,R[166],E,"Get the TaskUIInterface relative to this",26,[[["self"]],[[R[132]],["arc",[R[132]]]]]],[11,R[60],E,"Build the DAG of the evaluation of this task and use the…",26,[[["self"],[R[118]],[R[192]],["evaluationoptions"]]]],[8,R[185],E,"A task format is a way of laying files in a task folder,…",N,N],[16,"SubtaskId",E,"Type of the identifier of a subtask",27,N],[16,"TestcaseId",E,"Type of the identifier of a testcase",27,N],[16,R[133],E,"Type of the information about a subtask",27,N],[16,R[134],E,"Type of the information about a testcase",27,N],[10,"is_valid",E,"Whether the `path` points to a valid task for this format.",27,[[["path"]],["bool"]]],[10,"parse",E,"Assuming `path` is valid make a Task from that directory.",27,[[["path"]],[[R[1],["box",R[3]]],["box",["task"]],[R[3]]]]],[11,"new",E,"Make a new CheckerResult",6,[[[R[5],["str"]],["f64"],["str"]],["checkerresult"]]],[0,"ui",R[109],E,N,N],[3,R[188],R[135],"The sender of the UIMessage",N,N],[4,R[186],E,"The status of an execution.",N,N],[13,"Pending",E,"The Execution is known to the DAG and when all its…",28,N],[13,"Started",E,"The Execution has been started on a worker.",28,N],[12,"worker",R[136],E,28,N],[13,"Done",R[135],"The Execution has been completed.",28,N],[12,R[1],R[136],E,28,N],[13,"Skipped",R[135],"At least one of its dependencies have failed, the…",28,N],[4,R[187],E,"A message sent to the UI.",N,N],[13,"Compilation",E,"An update on the compilation status.",29,N],[12,"file",R[137],"The compilation of this file.",29,N],[12,"status",E,"The status of the compilation.",29,N],[13,"IOITask",R[135],"The information about the task which is being run.",29,N],[12,"name",R[137],"The short name of the task.",29,N],[12,"title",E,"The long name of the task.",29,N],[12,"path",E,"The path to the task on the client disk.",29,N],[12,R[138],E,"The list of the subtasks with their information.",29,N],[12,R[128],E,"The set of testcases for each subtask.",29,N],[13,"IOIGeneration",R[135],"The generation of a testcase in a IOI task.",29,N],[12,R[143],R[137],R[139],29,N],[12,R[140],E,R[141],29,N],[12,"status",E,"The status of the generation.",29,N],[13,"IOIValidation",R[135],"The validation of a testcase in a IOI task.",29,N],[12,R[143],R[137],R[139],29,N],[12,R[140],E,R[141],29,N],[12,"status",E,"The status of the validation.",29,N],[13,R[142],R[135],"The solution of a testcase in a IOI task.",29,N],[12,R[143],R[137],R[139],29,N],[12,R[140],E,R[141],29,N],[12,"status",E,R[144],29,N],[13,"IOIEvaluation",R[135],"The evaluation of a solution in a IOI task.",29,N],[12,R[143],R[137],R[139],29,N],[12,R[140],E,R[141],29,N],[12,R[124],E,R[145],29,N],[12,"status",E,R[144],29,N],[13,"IOIChecker",R[135],"The checking of a solution in a IOI task.",29,N],[12,R[143],R[137],R[139],29,N],[12,R[140],E,R[141],29,N],[12,R[124],E,R[145],29,N],[12,"status",E,"The status of the solution. Note that a failure of this…",29,N],[13,"IOITestcaseScore",R[135],"The score of a testcase is ready.",29,N],[12,R[143],R[137],R[139],29,N],[12,R[140],E,R[141],29,N],[12,R[124],E,R[145],29,N],[12,"score",E,"The score of the testcase.",29,N],[13,"IOISubtaskScore",R[135],"The score of a subtask is ready.",29,N],[12,R[143],R[137],R[139],29,N],[12,R[124],E,R[145],29,N],[12,"score",E,"The score of the subtask.",29,N],[13,"IOITaskScore",R[135],"The score of a task is ready.",29,N],[12,R[124],R[137],R[145],29,N],[12,"score",E,"The score of the task.",29,N],[4,"UIType",R[135],"The type of the UI to use, it enumerates all the known UI…",N,N],[13,"Print",E,"The PrintUI.",30,N],[13,"Raw",E,"The RawUI",30,N],[13,"Curses",E,"The CursesUI",30,N],[6,"UIChannelSender",E,E,N,N],[6,"UIChannelReceiver",E,E,N,N],[8,"UI",E,"The trait that describes the UI functionalities.",N,N],[10,"on_message",E,"Process a new UI message.",31,[[["self"],[R[146]]]]],[10,"finish",E,"Make the UI print the ending results.",31,[[["self"]]]],[11,"new",E,"Make a new pair of UIMessageSender and ChannelReceiver.",32,[[]]],[11,"send",E,"Send a message to the channel.",32,[[["self"],[R[146]]],[[R[3]],[R[1],[R[3]]]]]],[11,"start",E,E,30,[[["self"],["uichannelreceiver"]]]],[11,"from",R[147],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[6],E,E,0,[[[U]],[R[1]]]],[11,R[7],E,E,0,[[],[R[1]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[R[31]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[6],E,E,2,[[[U]],[R[1]]]],[11,R[7],E,E,2,[[],[R[1]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[R[31]]]],[11,"from",R[148],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[6],E,E,3,[[[U]],[R[1]]]],[11,R[7],E,E,3,[[],[R[1]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[R[31]]]],[11,"from",R[117],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[6],E,E,5,[[[U]],[R[1]]]],[11,R[7],E,E,5,[[],[R[1]]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[R[31]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[6],E,E,7,[[[U]],[R[1]]]],[11,R[7],E,E,7,[[],[R[1]]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[R[31]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[6],E,E,6,[[[U]],[R[1]]]],[11,R[7],E,E,6,[[],[R[1]]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[R[31]]]],[11,"from",R[116],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[6],E,E,8,[[[U]],[R[1]]]],[11,R[7],E,E,8,[[],[R[1]]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[R[31]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[6],E,E,33,[[[U]],[R[1]]]],[11,R[7],E,E,33,[[],[R[1]]]],[11,R[8],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[["self"]],[T]]],[11,R[10],E,E,33,[[["self"]],[R[31]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[6],E,E,9,[[[U]],[R[1]]]],[11,R[7],E,E,9,[[],[R[1]]]],[11,R[8],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[R[31]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[6],E,E,10,[[[U]],[R[1]]]],[11,R[7],E,E,10,[[],[R[1]]]],[11,R[8],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[R[31]]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[30],E,E,11,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[6],E,E,11,[[[U]],[R[1]]]],[11,R[7],E,E,11,[[],[R[1]]]],[11,R[8],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[R[31]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[6],E,E,12,[[[U]],[R[1]]]],[11,R[7],E,E,12,[[],[R[1]]]],[11,R[8],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[R[31]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[6],E,E,13,[[[U]],[R[1]]]],[11,R[7],E,E,13,[[],[R[1]]]],[11,R[8],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[R[31]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[6],E,E,14,[[[U]],[R[1]]]],[11,R[7],E,E,14,[[],[R[1]]]],[11,R[8],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[R[31]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[6],E,E,15,[[[U]],[R[1]]]],[11,R[7],E,E,15,[[],[R[1]]]],[11,R[8],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[["self"]],[T]]],[11,R[10],E,E,15,[[["self"]],[R[31]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[6],E,E,34,[[[U]],[R[1]]]],[11,R[7],E,E,34,[[],[R[1]]]],[11,R[8],E,E,34,[[["self"]],[T]]],[11,R[9],E,E,34,[[["self"]],[T]]],[11,R[10],E,E,34,[[["self"]],[R[31]]]],[11,"from",R[114],E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[6],E,E,35,[[[U]],[R[1]]]],[11,R[7],E,E,35,[[],[R[1]]]],[11,R[8],E,E,35,[[["self"]],[T]]],[11,R[9],E,E,35,[[["self"]],[T]]],[11,R[10],E,E,35,[[["self"]],[R[31]]]],[11,R[29],E,E,16,[[["self"]],[T]]],[11,R[30],E,E,16,[[["self"],[T]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[6],E,E,16,[[[U]],[R[1]]]],[11,R[7],E,E,16,[[],[R[1]]]],[11,R[8],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[["self"]],[T]]],[11,R[10],E,E,16,[[["self"]],[R[31]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[6],E,E,17,[[[U]],[R[1]]]],[11,R[7],E,E,17,[[],[R[1]]]],[11,R[8],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[["self"]],[T]]],[11,R[10],E,E,17,[[["self"]],[R[31]]]],[11,"from",R[135],E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[6],E,E,32,[[[U]],[R[1]]]],[11,R[7],E,E,32,[[],[R[1]]]],[11,R[8],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[["self"]],[T]]],[11,R[10],E,E,32,[[["self"]],[R[31]]]],[11,R[29],E,E,28,[[["self"]],[T]]],[11,R[30],E,E,28,[[["self"],[T]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[6],E,E,28,[[[U]],[R[1]]]],[11,R[7],E,E,28,[[],[R[1]]]],[11,R[8],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[["self"]],[T]]],[11,R[10],E,E,28,[[["self"]],[R[31]]]],[11,R[29],E,E,29,[[["self"]],[T]]],[11,R[30],E,E,29,[[["self"],[T]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[6],E,E,29,[[[U]],[R[1]]]],[11,R[7],E,E,29,[[],[R[1]]]],[11,R[8],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[["self"]],[T]]],[11,R[10],E,E,29,[[["self"]],[R[31]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[6],E,E,30,[[[U]],[R[1]]]],[11,R[7],E,E,30,[[],[R[1]]]],[11,R[8],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[["self"]],[T]]],[11,R[10],E,E,30,[[["self"]],[R[31]]]],[11,R[127],R[148],E,3,[[["self"],[R[119]],["f64"],[R[120]]]]],[11,R[149],E,E,3,[[["self"],["box",["fn"]],["fn"]]]],[11,R[150],E,E,3,[[["self"],["box",["fn"]],["fn"]]]],[11,"boxed",E,E,3,[[["self"]],[[R[111]],["box",[R[111]]]]]],[11,R[151],R[117],E,5,[[["self"],[R[118]],[R[119]],[R[120]]]]],[11,R[151],R[116],E,13,[[["self"],[R[152]],[R[153]],[R[118]]]]],[11,"validate",E,E,14,[[["self"],[R[152]],[R[153]],[R[118]],["file"]]]],[11,"solve",R[117],E,5,[[["self"],[R[119]],[R[120]],[R[118]],["file"],[R[5],["file"]]]]],[11,"solve",R[116],E,15,[[["self"],[R[152]],[R[153]],[R[118]],["file"],[R[5],["file"]]]]],[11,"check",R[117],E,7,[[["self"],[R[154]],[R[119]],[R[118]],[R[120]],["file"],[R[5],["file"]]],[R[27]]]],[11,R[121],R[116],E,11,[[["self"]],["f64"]]],[11,R[155],E,E,12,[[["self"]],[[R[5],[R[25]]],[R[25]]]]],[11,R[156],E,E,12,[[["self"]],[[R[5],[R[25]]],[R[25]]]]],[11,R[122],E,E,12,[[["self"]],[[R[122],[R[152],R[153]]],["arc",[R[122]]]]]],[11,R[123],E,E,12,[[["self"]],[[R[5],["arc"]],["arc",[R[123]]]]]],[11,R[124],E,E,12,[[["self"]],[[R[124],[R[152],R[153]]],["arc",[R[124]]]]]],[11,"dry_run",E,E,34,[[["self"]],["bool"]]],[11,R[157],E,E,34,[[["self"]],["bool"]]],[11,R[158],E,E,33,[[["self"],["mutex",[R[125]]],["arc",["mutex"]]]]],[11,R[159],E,E,33,[[["self"],["mutex",[R[125]]],[R[152]],[R[153]],[R[126]],["arc",["mutex"]]]]],[11,R[160],E,E,33,[[["self"],["mutex",[R[125]]],[R[152]],[R[153]],[R[126]],["arc",["mutex"]]]]],[11,R[161],E,E,33,[[["self"],["mutex",[R[125]]],[R[152]],[R[153]],[R[126]],["arc",["mutex"]]]]],[11,R[162],E,E,33,[[["self"],[R[25]],["mutex",[R[125]]],[R[152]],[R[153]],[R[126]],["arc",["mutex"]]]]],[11,R[163],E,E,33,[[["self"],[R[25]],["mutex",[R[125]]],[R[152]],[R[153]],[R[126]],["arc",["mutex"]]]]],[11,R[127],E,E,33,[[["self"],[R[25]],["mutex",[R[125]]],[R[152]],[R[153]],["f64"],["arc",["mutex"]]]]],[11,R[164],E,E,33,[[["self"],[R[25]],["mutex",[R[125]]],[R[152]],["f64"],["arc",["mutex"]]]]],[11,R[165],E,E,33,[[["self"],[R[25]],["mutex",[R[125]]],["f64"],["arc",["mutex"]]]]],[11,"format",E,E,8,[[],["str"]]],[11,"path",E,E,8,[[["self"]],["path"]]],[11,"name",E,E,8,[[["self"]],[R[49]]]],[11,"title",E,E,8,[[["self"]],[R[49]]]],[11,R[138],E,E,8,[[["self"]],[R[129]]]],[11,R[128],E,E,8,[[["self"],[R[152]]],[R[129]]]],[11,R[112],E,E,8,[[["self"]],[R[111]]]],[11,R[131],E,E,8,[[["self"]],[R[129]]]],[11,"checker",E,E,8,[[["self"],[R[152]],[R[153]]],["box"]]],[11,R[166],E,E,8,[[["self"]],[["arc",[R[132]]],[R[132],[R[152],R[153]]]]]],[11,"is_valid",R[114],"Checks that there is at least one of gen/GEN or the input…",35,[[["path"]],["bool"]]],[11,"parse",E,"Parse the task folder making one of the following task…",35,[[["path"]],[[R[1],["box",R[3]]],["box",["task"]],[R[3]]]]],[11,"clone",R[116],E,11,[[["self"]],["ioisubtaskinfo"]]],[11,"clone",R[114],E,16,[[["self"]],["rule"]]],[11,"clone",R[135],E,28,[[["self"]],[R[126]]]],[11,"clone",E,E,29,[[["self"]],[R[146]]]],[11,R[50],R[114],E,16,[[["self"],["rule"]],[[R[5],[R[12]]],[R[12]]]]],[11,"eq",E,E,16,[[["self"],["rule"]],["bool"]]],[11,"cmp",E,E,16,[[["self"],["rule"]],[R[12]]]],[11,"deref",R[147],E,2,[[["self"]]]],[11,"deref_mut",E,E,2,[[["self"]]]],[11,"hash",R[114],E,16,[[["self"],["__h"]]]],[11,"fmt",R[147],E,2,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",R[148],E,3,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",R[117],E,5,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",R[116],E,8,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,13,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,14,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,15,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",R[114],E,16,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",R[135],E,28,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,29,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,30,[[["self"],[R[13]]],[R[1]]]],[11,"from_str",E,E,30,[[["str"]],[[R[1],["uitype"]],["uitype"]]]],[11,R[34],R[116],E,10,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,11,[[["self"],["__s"]],[R[1]]]],[11,R[34],R[135],E,28,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,29,[[["self"],["__s"]],[R[1]]]],[11,R[35],R[116],E,10,[[["__d"]],[R[1]]]],[11,R[35],E,E,11,[[["__d"]],[R[1]]]],[11,R[35],R[135],E,28,[[["__d"]],[R[1]]]],[11,R[35],E,E,29,[[["__d"]],[R[1]]]]],"p":[[3,R[167]],[8,"UISender"],[3,R[106]],[3,R[168]],[8,R[169]],[3,R[170]],[3,R[171]],[3,R[172]],[3,R[173]],[3,R[174]],[3,R[175]],[3,R[176]],[3,R[177]],[3,R[178]],[3,R[179]],[3,R[142]],[4,"Rule"],[4,R[180]],[8,R[181]],[8,R[182]],[8,"Solution"],[8,"Checker"],[8,R[133]],[8,R[134]],[8,R[183]],[8,R[184]],[8,"Task"],[8,R[185]],[4,R[186]],[4,R[187]],[4,"UIType"],[8,"UI"],[3,R[188]],[3,R[189]],[3,R[190]],[3,R[191]]]};
searchIndex["task_maker_dag"]={"doc":"DAG generation and resulting structures for `Execution`s…","i":[[3,R[36],"task_maker_dag","A wrapper around a File provided by the client, this means…",N,N],[12,"file",E,"The file handle.",0,N],[12,"key",E,"The key in the FileStore.",0,N],[12,R[81],E,"Path to the file in the client.",0,N],[3,R[37],E,"Serializable part of the execution DAG: everything except…",N,N],[12,"provided_files",E,"All the files provided by the client.",1,N],[12,R[51],E,"All the executions to run.",1,N],[3,R[38],E,"A computation DAG, this is not serializable because it…",N,N],[12,"data",E,"Serializable part of the DAG with all the executions and…",2,N],[12,"execution_callbacks",E,"Actual callbacks of the executions.",2,N],[12,"file_callbacks",E,"Actual callbacks of the files.",2,N],[3,R[39],E,"An input file of an `Execution`, can be marked as…",N,N],[12,"file",E,R[22],3,N],[12,R[82],E,"Whether this file should be marked as executable.",3,N],[3,R[40],E,"The callbacks to be called when an event of an execution…",N,N],[12,"on_start",E,"The callbacks called when the execution starts.",4,N],[12,"on_done",E,"The callbacks called when the execution has completed.",4,N],[12,"on_skip",E,"The callbacks called when the execution has been skipped.",4,N],[3,R[41],E,"An `Execution` is a process that will be executed by a…",N,N],[12,"uuid",E,"Uuid of the execution.",5,N],[12,R[23],E,"Description of the execution.",5,N],[12,"command",E,"Which command to execute.",5,N],[12,"args",E,"The list of command line arguments.",5,N],[12,"stdin",E,"Optional standard input to pass to the program.",5,N],[12,"stdout",E,"Optional standard output to capture.",5,N],[12,"stderr",E,"Optional standard error to capture.",5,N],[12,"inputs",E,"List of input files that should be put inside the sandbox.",5,N],[12,"outputs",E,"List of the output files that should be capture from the…",5,N],[12,"limits",E,"Limits on the execution.",5,N],[3,R[42],E,"Limits on an `Execution`. On some worker platforms some of…",N,N],[12,R[19],E,"Limit on the userspace cpu time of the process, in seconds.",6,N],[12,R[20],E,"Limit on the kernels pace cpu time of the process, in…",6,N],[12,R[21],E,"Limit on the total time of execution, in seconds. This…",6,N],[12,"memory",E,"Limit on the number of KiB the process can use in any…",6,N],[12,"nproc",E,"Limit on the number of threads/processes the process can…",6,N],[12,"nofile",E,"Limit on the number of file descriptors the process can…",6,N],[12,"fsize",E,"Maximum size of the files (in bytes) the process can…",6,N],[12,"memlock",E,"RLIMIT_MEMLOCK",6,N],[12,"stack",E,"Limit on the stack size for the process. 0 means unlimited.",6,N],[3,R[43],E,"Resources used during the execution, note that on some…",N,N],[12,R[19],E,"Number of seconds the process used in user space.",7,N],[12,R[20],E,"Number of seconds the process used in kernel space.",7,N],[12,R[21],E,"Number of seconds from the start to the end of the process.",7,N],[12,"memory",E,"Number of KiB used at most by the process.",7,N],[3,R[44],E,"The result of an `Execution`.",N,N],[12,"uuid",E,"Uuid of the completed execution.",8,N],[12,"status",E,"Status of the completed execution.",8,N],[12,R[55],E,"Resources used by the execution.",8,N],[3,R[45],E,"The callbacks that will trigger when the file is ready.",N,N],[12,"write_to",E,"Destination of the file if it has to be stored in the disk…",9,N],[12,"get_content",E,"Callback to be called with the first bytes of the file.",9,N],[3,"File",E,"An handle to a file in the evaluation, this only tracks…",N,N],[12,"uuid",E,R[22],10,N],[12,R[23],E,"Description of the file.",10,N],[4,R[46],E,"Command of an `Execution` to execute.",N,N],[13,"System",E,"A system command, the workers will search in their `$PATH`…",11,N],[13,"Local",E,"A command relative to the sandbox directory, not to be…",11,N],[4,R[47],E,"Status of a completed `Execution`.",N,N],[13,"Success",E,"The program exited with status 0 within the limits.",12,N],[13,"ReturnCode",E,"The program exited with a non-zero status code, which is…",12,N],[13,"Signal",E,"The program stopped due to a signal, the number and the…",12,N],[13,"TimeLimitExceeded",E,"The program hasn't exited within the time limit constraint.",12,N],[13,"SysTimeLimitExceeded",E,"The program hasn't exited within the sys time limit…",12,N],[13,"WallTimeLimitExceeded",E,"The program hasn't exited within the wall time limit…",12,N],[13,"MemoryLimitExceeded",E,"The program has exceeded the memory limit.",12,N],[13,"InternalError",E,"The sandbox failed to execute the program with the…",12,N],[11,"new",E,"Create an empty ExecutionDAG, without files and executions.",2,[[],[R[57]]]],[11,"provide_file",E,"Provide a file for the computation.",2,[[["self"],["into",[R[25]]],["file"],[R[25]]],[[R[3]],[R[1],[R[3]]]]]],[11,"add_execution",E,"Add an execution to the DAG.",2,[[["self"],[R[27]]]]],[11,"write_file_to",E,"When `file` is ready it will be written to `path`. The…",2,[[["self"],["into",[R[24]]],[R[24]],["into",[R[25]]],[R[25]]]]],[11,"get_file_content",E,"Call `callback` with the first `limit` bytes of the file…",2,[[["self"],["into",[R[24]]],[R[24]],["usize"],["f"]]]],[11,"on_execution_start",E,"Add a callback that will be called when the execution…",2,[[["self"],["f"],[R[26]]]]],[11,"on_execution_done",E,"Add a callback that will be called when the execution ends.",2,[[["self"],["f"],[R[26]]]]],[11,"on_execution_skip",E,"Add a callback that will be called when the execution is…",2,[[["self"],["f"],[R[26]]]]],[11,"new",E,"Make an empty limits where all the limits are disabled.…",6,[[],[R[28]]]],[11,R[19],E,"Set the cpu time limit in seconds.",6,[[["self"],["f64"]],["self"]]],[11,R[20],E,"Set the sys time limit in seconds.",6,[[["self"],["f64"]],["self"]]],[11,R[21],E,"Set the wall time limit in seconds.",6,[[["self"],["f64"]],["self"]]],[11,"memory",E,"Set the memory limit in seconds.",6,[[["self"],["u64"]],["self"]]],[11,"nproc",E,"Set the maximum number of processes/threads.",6,[[["self"],["u32"]],["self"]]],[11,"nofile",E,"Set the maximum number of opened file descriptors.",6,[[["self"],["u32"]],["self"]]],[11,"fsize",E,"Set the maximum size of the files (in bytes) the process…",6,[[["self"],["u64"]],["self"]]],[11,"memlock",E,"Set the memlock limit.",6,[[["self"],["u64"]],["self"]]],[11,"stack",E,"Set the stack limit.",6,[[["self"],["u64"]],["self"]]],[11,"new",E,"Create a basic `Execution` with the default limits.",5,[[[R[49]],[R[33]],["into",[R[49]]]],[R[27]]]],[11,"dependencies",E,"List of all the File dependencies of the execution,…",5,[[["self"]],[[R[24]],["vec",[R[24]]]]]],[11,"outputs",E,"List of all the File produced by the execution, including…",5,[[["self"]],[[R[24]],["vec",[R[24]]]]]],[11,"stdin",E,"Bind the standard input to the specified file. Calling…",5,[[["self"],["into",[R[24]]],[R[24]]],["self"]]],[11,"stdout",E,"Handle to the standard output of the execution. This…",5,[[["self"]],["file"]]],[11,"stderr",E,"Handle to the standard error of the execution. This should…",5,[[["self"]],["file"]]],[11,"input",E,"Bind a file inside the sandbox to the specified file.…",5,[[["self"],["bool"],["into",[R[24]]],[R[24]],["into",[R[25]]],[R[25]]],["self"]]],[11,"output",E,"Handle to a file produced by the execution. This should be…",5,[[["self"],["debug"],["into",[R[25]]],[R[25]]],["file"]]],[11,"limits",E,"Set the limits for the execution.",5,[[["self"],[R[28]]],["self"]]],[11,"new",E,"Create a new file handle.",10,[[[R[49]],["into",[R[49]]]],["file"]]],[6,"ExecutionUuid",E,"The identifier of an execution, it's globally unique and…",N,N],[6,"WorkerUuid",E,"The identifier of a worker, it's globally unique and…",N,N],[6,"OnStartCallback",E,"Type of the callback called when an `Execution` starts.",N,N],[6,"OnDoneCallback",E,"Type of the callback called when an `Execution` ends.",N,N],[6,"OnSkipCallback",E,"Type of the callback called when an `Execution` is skipped.",N,N],[6,R[48],E,"The identifier of a file, it's globally unique and it…",N,N],[6,"GetContentCallback",E,"Type of the callback called when a file is returned to the…",N,N],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[30],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[6],E,E,0,[[[U]],[R[1]]]],[11,R[7],E,E,0,[[],[R[1]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[R[31]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[6],E,E,1,[[[U]],[R[1]]]],[11,R[7],E,E,1,[[],[R[1]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[R[31]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[6],E,E,2,[[[U]],[R[1]]]],[11,R[7],E,E,2,[[],[R[1]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[R[31]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[30],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[6],E,E,3,[[[U]],[R[1]]]],[11,R[7],E,E,3,[[],[R[1]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[R[31]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[6],E,E,4,[[[U]],[R[1]]]],[11,R[7],E,E,4,[[],[R[1]]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[R[31]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[30],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[6],E,E,5,[[[U]],[R[1]]]],[11,R[7],E,E,5,[[],[R[1]]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[R[31]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[30],E,E,6,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[6],E,E,6,[[[U]],[R[1]]]],[11,R[7],E,E,6,[[],[R[1]]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[R[31]]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[30],E,E,7,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[6],E,E,7,[[[U]],[R[1]]]],[11,R[7],E,E,7,[[],[R[1]]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[R[31]]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[30],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[6],E,E,8,[[[U]],[R[1]]]],[11,R[7],E,E,8,[[],[R[1]]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[R[31]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[6],E,E,9,[[[U]],[R[1]]]],[11,R[7],E,E,9,[[],[R[1]]]],[11,R[8],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[R[31]]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[30],E,E,10,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[6],E,E,10,[[[U]],[R[1]]]],[11,R[7],E,E,10,[[],[R[1]]]],[11,R[8],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[R[31]]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[30],E,E,11,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[6],E,E,11,[[[U]],[R[1]]]],[11,R[7],E,E,11,[[],[R[1]]]],[11,R[8],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[R[31]]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[30],E,E,12,[[["self"],[T]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[6],E,E,12,[[[U]],[R[1]]]],[11,R[7],E,E,12,[[],[R[1]]]],[11,R[8],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[R[31]]]],[11,"as_ref",E,E,10,[[["self"]],[R[24]]]],[11,R[32],E,"Default sane values for the execution limits, the limits…",6,[[],["self"]]],[11,R[32],E,E,4,[[],["self"]]],[11,R[32],E,E,9,[[],["filecallbacks"]]],[11,"clone",E,E,0,[[["self"]],["providedfile"]]],[11,"clone",E,E,11,[[["self"]],[R[33]]]],[11,"clone",E,E,3,[[["self"]],["executioninput"]]],[11,"clone",E,E,5,[[["self"]],[R[27]]]],[11,"clone",E,E,6,[[["self"]],[R[28]]]],[11,"clone",E,E,12,[[["self"]],["executionstatus"]]],[11,"clone",E,E,7,[[["self"]],["executionresourcesusage"]]],[11,"clone",E,E,8,[[["self"]],["executionresult"]]],[11,"clone",E,E,10,[[["self"]],["file"]]],[11,R[50],E,E,10,[[["self"],["file"]],[[R[5],[R[12]]],[R[12]]]]],[11,"lt",E,E,10,[[["self"],["file"]],["bool"]]],[11,"le",E,E,10,[[["self"],["file"]],["bool"]]],[11,"gt",E,E,10,[[["self"],["file"]],["bool"]]],[11,"ge",E,E,10,[[["self"],["file"]],["bool"]]],[11,"eq",E,E,10,[[["self"],["file"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["file"]],["bool"]]],[11,"from",E,E,13,[[["file"]],["self"]]],[11,"from",E,E,13,[[["file"]],["self"]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[[R[3]],[R[1],[R[3]]]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[[R[3]],[R[1],[R[3]]]]]],[11,R[34],E,E,0,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,1,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,11,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,3,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,5,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,6,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,12,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,7,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,8,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,10,[[["self"],["__s"]],[R[1]]]],[11,R[35],E,E,0,[[["__d"]],[R[1]]]],[11,R[35],E,E,1,[[["__d"]],[R[1]]]],[11,R[35],E,E,11,[[["__d"]],[R[1]]]],[11,R[35],E,E,3,[[["__d"]],[R[1]]]],[11,R[35],E,E,5,[[["__d"]],[R[1]]]],[11,R[35],E,E,6,[[["__d"]],[R[1]]]],[11,R[35],E,E,12,[[["__d"]],[R[1]]]],[11,R[35],E,E,7,[[["__d"]],[R[1]]]],[11,R[35],E,E,8,[[["__d"]],[R[1]]]],[11,R[35],E,E,10,[[["__d"]],[R[1]]]]],"p":[[3,R[36]],[3,R[37]],[3,R[38]],[3,R[39]],[3,R[40]],[3,R[41]],[3,R[42]],[3,R[43]],[3,R[44]],[3,R[45]],[3,"File"],[4,R[46]],[4,R[47]],[6,R[48]]]};
searchIndex["task_maker_exec"]={"doc":"DAG execution dispatching the tasks to the workers.","i":[[3,R[71],R[52],"This is a client of the `Executor`, the client is who…",N,N],[3,R[66],E,"List of the interesting files and executions, only the…",N,N],[12,R[51],E,"Set of the handles of the executions that have at least a…",0,N],[12,"files",E,"Set of the handles of the files that have at least a…",0,N],[3,R[67],E,"A job that is sent to a worker, this should include all…",N,N],[12,R[27],E,"What the worker should do.",1,N],[12,"dep_keys",E,"The FileStoreKeys the worker has to know to start the…",1,N],[3,R[68],E,"The current status of the `Executor`, this is sent to the…",N,N],[12,"connected_workers",E,"List of the connected workers with their uuid, name and if…",2,N],[12,"running_dags",E,"Number of running DAGs by the server.",2,N],[12,"ready_execs",E,"Number of executions waiting for workers.",2,N],[12,"waiting_execs",E,"Number of executions waiting for dependencies.",2,N],[3,"Sandbox",E,"Wrapper around the sandbox. Cloning this struct will keep…",N,N],[4,R[69],E,"An error in the DAG structure.",N,N],[13,"MissingFile",E,"A file is used as input in an execution but it's missing,…",3,N],[12,"uuid",R[53],"The UUID of the missing file.",3,N],[12,R[23],E,"The description of the missing file.",3,N],[13,"MissingExecution",R[52],"A callback is registered on an execution but it's missing.",3,N],[12,"uuid",R[53],"The UUID of the missing execution.",3,N],[13,"CycleDetected",R[52],"There is a dependency cycle in the DAG.",3,N],[12,R[23],R[53],"The description of an execution inside the cycle.",3,N],[13,"DuplicateExecutionUUID",R[52],"There is a duplicate execution UUID.",3,N],[12,"uuid",R[53],R[54],3,N],[13,"DuplicateFileUUID",R[52],"There is a duplicate file UUID.",3,N],[12,"uuid",R[53],R[54],3,N],[4,R[70],R[52],"Result of the execution of the sandbox.",N,N],[13,"Success",E,"The sandbox exited successfully, the statistics about the…",4,N],[12,"exit_status",R[56],"The exit status of the process.",4,N],[12,"signal",E,"The signal that caused the process to exit.",4,N],[12,R[55],E,"Resources used by the process.",4,N],[13,"Failed",R[52],"The sandbox failed to execute the process, an error…",4,N],[12,R[3],R[56],"The error reported by the sandbox.",4,N],[5,"serialize_into",R[52],"Serialize a message into the sender serializing it.",N,[[[R[59]],[T]],[[R[3]],[R[1],[R[3]]]]]],[5,"deserialize_from",E,"Deserialize a message from the channel and return it.",N,[[[R[58]]],[[R[1],[R[3]]],[R[3]]]]],[5,"eval_dag_locally",E,"Evaluate a DAG locally spawning a new `LocalExecutor` with…",N,[[["into",[R[25]]],["usize"],[R[57]],[R[25]]]]],[11,R[60],E,"Begin the evaluation sending the DAG to the server,…",5,[[[R[57]],[R[58]],[R[59]]],[[R[3]],[R[1],[R[3]]]]]],[0,"executors",E,"The supported executors.",N,N],[3,R[72],R[64],"An Executor that runs locally by spawning a number of…",N,N],[12,"num_workers",E,"The number of local workers to spawn.",6,N],[11,"new",E,"Make a new `LocalExecutor` based on a `FileStore` and…",6,[[["arc",["mutex"]],["mutex",[R[4]]],["usize"]],[R[192]]]],[11,R[60],E,"Starts the Executor spawning the workers on new threads…",6,[[["self"],[R[58]],[R[59]]],[[R[3]],[R[1],[R[3]]]]]],[0,"proto",R[52],"The protocol related structs and enums.",N,N],[3,R[78],R[61],"An iterator over the byte chunks sent during the…",N,N],[3,R[79],E,"Utility function to send a file to a channel using…",N,N],[4,R[73],E,"Messages that the client sends to the server.",N,N],[13,"Evaluate",E,"The client is asking to evaluate a DAG.",7,N],[12,"dag","task_maker_exec::proto::ExecutorClientMessage","The DAG to evaluate.",7,N],[12,"callbacks",E,"The list of the executions and files to keep track of.",7,N],[13,R[62],R[61],"The client is providing a file. After this message there…",7,N],[13,"Stop",E,"The client is asking to stop the evaluation. All the…",7,N],[13,"Status",E,"The client is asking for the server status. After this…",7,N],[4,R[74],E,"Messages that the server sends to the client.",N,N],[13,"AskFile",E,"The server needs the file with that Uuid. The client must…",8,N],[13,R[62],E,"The server is sending a file. After this message there is…",8,N],[13,"NotifyStart",E,"The execution has started on a worker.",8,N],[13,"NotifyDone",E,"The execution has completed with that result.",8,N],[13,"NotifySkip",E,"The execution has been skipped.",8,N],[13,"Error",E,"There was an error during the evaluation.",8,N],[13,"Status",E,"The server status as asked by the client.",8,N],[13,"Done",E,"The evaluation of the DAG is complete, this message will…",8,N],[4,R[75],E,"Messages sent by the workers to the server.",N,N],[13,"GetWork",E,"The worker is ready for some job. The worker will wait for…",9,N],[13,"WorkerDone",E,"The worker completed the job with this result.",9,N],[13,R[62],E,"The worker is sending a file to the server. After this…",9,N],[13,"AskFile",E,"The worker needs a file from the server. The server should…",9,N],[4,R[76],E,"Messages sent by the server to the worker.",N,N],[13,"Work",E,"The job the worker should do. Boxed to reduce the enum size.",10,N],[13,R[62],E,"The file the workers as asked After this message there is…",10,N],[4,R[77],E,"Messages sent during the FileProtocol operation, during…",N,N],[13,"Data",E,"A chunk of data.",11,N],[13,"End",E,"The end of the stream.",11,N],[11,"new",E,"Create a new iterator over a receiver channel.",12,[[[R[58]]],["channelfileiterator"]]],[11,"send",E,"Send a local file to a channel using `FileProtocol`.",13,[[["asref",["path"]],["path"],[R[59]]],[[R[3]],[R[1],[R[3]]]]]],[11,"new",R[52],"Make a new sandbox for the specified execution, copying…",14,[[["path"],[R[27]],[R[129]],[R[4]]],[[R[65]],[R[3]],[R[1],[R[65],R[3]]]]]],[11,"run",E,"Starts the sandbox and blocks the thread until the sandbox…",14,[[["self"]],[[R[1],[R[63],R[3]]],[R[63]],[R[3]]]]],[11,"kill",E,"Tell the sandbox process to kill the underlying process,…",14,[[["self"]]]],[11,"keep",E,"Make the sandbox persistent, the sandbox directory won't…",14,[[["self"]]]],[11,"stdout_path",E,"Path of the file where the standard output is written to.",14,[[["self"]],[R[25]]]],[11,"stderr_path",E,"Path of the file where the standard error is written to.",14,[[["self"]],[R[25]]]],[11,"output_path",E,"Path of the file where that output file is written to.",14,[[["self"],["path"]],[R[25]]]],[6,"ChannelSender",E,"The channel part that sends data.",N,N],[6,"ChannelReceiver",E,"The channel part that receives data.",N,N],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[6],E,E,5,[[[U]],[R[1]]]],[11,R[7],E,E,5,[[],[R[1]]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[R[31]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[6],E,E,0,[[[U]],[R[1]]]],[11,R[7],E,E,0,[[],[R[1]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[R[31]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[30],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[6],E,E,1,[[[U]],[R[1]]]],[11,R[7],E,E,1,[[],[R[1]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[R[31]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[6],E,E,2,[[[U]],[R[1]]]],[11,R[7],E,E,2,[[],[R[1]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[R[31]]]],[11,R[29],E,E,14,[[["self"]],[T]]],[11,R[30],E,E,14,[[["self"],[T]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[6],E,E,14,[[[U]],[R[1]]]],[11,R[7],E,E,14,[[],[R[1]]]],[11,R[8],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[R[31]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[["self"]],[R[49]]]],[11,R[6],E,E,3,[[[U]],[R[1]]]],[11,R[7],E,E,3,[[],[R[1]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[R[31]]]],[11,"as_fail",E,E,3,[[["self"]],["fail"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[6],E,E,4,[[[U]],[R[1]]]],[11,R[7],E,E,4,[[],[R[1]]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[R[31]]]],[11,"from",R[64],E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[6],E,E,6,[[[U]],[R[1]]]],[11,R[7],E,E,6,[[],[R[1]]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[R[31]]]],[11,R[80],R[61],E,12,[[],["i"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[6],E,E,12,[[[U]],[R[1]]]],[11,R[7],E,E,12,[[],[R[1]]]],[11,R[8],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[R[31]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[6],E,E,13,[[[U]],[R[1]]]],[11,R[7],E,E,13,[[],[R[1]]]],[11,R[8],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[R[31]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[6],E,E,7,[[[U]],[R[1]]]],[11,R[7],E,E,7,[[],[R[1]]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[R[31]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[6],E,E,8,[[[U]],[R[1]]]],[11,R[7],E,E,8,[[],[R[1]]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[R[31]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[6],E,E,9,[[[U]],[R[1]]]],[11,R[7],E,E,9,[[],[R[1]]]],[11,R[8],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[R[31]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[6],E,E,10,[[[U]],[R[1]]]],[11,R[7],E,E,10,[[],[R[1]]]],[11,R[8],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[R[31]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[6],E,E,11,[[[U]],[R[1]]]],[11,R[7],E,E,11,[[],[R[1]]]],[11,R[8],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[R[31]]]],[11,"clone",R[52],E,1,[[["self"]],["workerjob"]]],[11,"clone",E,E,14,[[["self"]],[R[65]]]],[11,"next",R[61],E,12,[[["self"]],[R[5]]]],[11,"fmt",R[52],E,3,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",R[61],E,7,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",R[52],E,4,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,14,[[["self"],[R[13]]],[R[1]]]],[11,"name",E,E,3,[[["self"]],[[R[5],["str"]],["str"]]]],[11,"cause",E,E,3,[[["self"]],[["fail"],[R[5],["fail"]]]]],[11,R[14],E,E,3,[[["self"]],[[R[5],[R[14]]],[R[14]]]]],[11,R[34],E,E,0,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,1,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,2,[[["self"],["__s"]],[R[1]]]],[11,R[34],R[61],E,7,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,8,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,9,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,10,[[["self"],["__s"]],[R[1]]]],[11,R[34],E,E,11,[[["self"],["__s"]],[R[1]]]],[11,R[35],R[52],E,0,[[["__d"]],[R[1]]]],[11,R[35],E,E,1,[[["__d"]],[R[1]]]],[11,R[35],E,E,2,[[["__d"]],[R[1]]]],[11,R[35],R[61],E,7,[[["__d"]],[R[1]]]],[11,R[35],E,E,8,[[["__d"]],[R[1]]]],[11,R[35],E,E,9,[[["__d"]],[R[1]]]],[11,R[35],E,E,10,[[["__d"]],[R[1]]]],[11,R[35],E,E,11,[[["__d"]],[R[1]]]]],"p":[[3,R[66]],[3,R[67]],[3,R[68]],[4,R[69]],[4,R[70]],[3,R[71]],[3,R[72]],[4,R[73]],[4,R[74]],[4,R[75]],[4,R[76]],[4,R[77]],[3,R[78]],[3,R[79]],[3,"Sandbox"]]};
searchIndex["task_maker_lang"]={"doc":"Crate for managing programming languages and source files.","i":[[3,R[107],"task_maker_lang","The storage of the compilation/runtime dependencies for…",N,N],[3,R[105],E,"A dependency of an execution, all the sandbox paths must…",N,N],[12,"file",E,"The handle of the file.",0,N],[12,R[81],E,"The path of the file on the local system.",0,N],[12,"sandbox_path",E,"The path inside of the sandbox of where to put the file.…",0,N],[12,R[82],E,"Whether the file should be executable or not.",0,N],[3,R[106],E,"A source file that will be able to be executed (with an…",N,N],[12,"path",E,"Path to the source file.",1,N],[3,R[108],E,"Manager of all the known languages, you should use this to…",N,N],[11,"new",E,"Make a new map with the specified graders.",2,[[["into",[R[25]]],["vec"],[R[25]]],[R[85]]]],[11,"get_compilation_deps",E,"Extra compilation dependencies of the graders, will be an…",2,[[["self"],[R[84]]],[["vec",[R[83]]],[R[83]]]]],[11,"get_runtime_deps",E,"Extra runtime dependencies of the graders, will be an…",2,[[["self"],[R[84]]],[["vec",[R[83]]],[R[83]]]]],[11,"new",E,"Make a new `SourceFile` from the provided file. Will…",1,[[[R[5],["arc"]],["into",[R[25]]],["arc",[R[85]]],[R[25]]],[[R[5],[R[86]]],[R[86]]]]],[11,"execute",E,"Execute the program relative to this source file with the…",1,[[["self"],[R[57]],["vec",[R[49]]],[R[49]],["str"]],[[R[3]],[R[1],[R[3]]]]]],[11,"name",E,"The file name of the source file.",1,[[["self"]],[R[49]]]],[8,"Language",E,"Trait that defines the properties of the supported…",N,N],[10,"name",E,"Full name of the language. This must be unique between all…",3,[[["self"]],["str"]]],[10,"extensions",E,"List of valid extensions for this language. A file is…",3,[[["self"]],[["vec",["str"]],["str"]]]],[10,"need_compilation",E,"Whether this language needs a compilation step. Returning…",3,[[["self"]],["bool"]]],[11,R[87],E,R[88],3,[[["self"],["path"]],[R[33]]]],[11,R[89],E,R[90],3,[[["self"],["path"]],[[R[49]],["vec",[R[49]]]]]],[11,R[91],E,R[92],3,[[["self"],["path"],["vec",[R[49]]],[R[49]]],[[R[49]],["vec",[R[49]]]]]],[11,R[93],E,R[94],3,[[["self"],["path"]],[["vec",[R[83]]],[R[83]]]]],[11,R[95],E,R[96],3,[[["self"],["path"]],[R[33]]]],[11,R[97],E,R[98],3,[[["self"],["path"],["vec",[R[49]]],[R[49]]],[[R[49]],["vec",[R[49]]]]]],[11,R[99],E,R[100],3,[[["self"],["path"],["vec",[R[49]]],[R[49]]],[[R[49]],["vec",[R[49]]]]]],[11,R[101],E,R[102],3,[[["self"],["path"]],[["vec",[R[83]]],[R[83]]]]],[11,R[103],E,R[104],3,[[["self"],["path"]],[R[25]]]],[11,"detect_language",E,"Given a path to a file guess the language that the source…",4,[[["asref",["path"]],["path"]],[[R[5],["arc"]],["arc",[R[84]]]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[6],E,E,2,[[[U]],[R[1]]]],[11,R[7],E,E,2,[[],[R[1]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[R[31]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[30],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[6],E,E,0,[[[U]],[R[1]]]],[11,R[7],E,E,0,[[],[R[1]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[R[31]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[6],E,E,1,[[[U]],[R[1]]]],[11,R[7],E,E,1,[[],[R[1]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[R[31]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[6],E,E,4,[[[U]],[R[1]]]],[11,R[7],E,E,4,[[],[R[1]]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[R[31]]]],[11,"clone",E,E,0,[[["self"]],[R[83]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[1]]]],[11,R[87],E,R[88],3,[[["self"],["path"]],[R[33]]]],[11,R[89],E,R[90],3,[[["self"],["path"]],[[R[49]],["vec",[R[49]]]]]],[11,R[91],E,R[92],3,[[["self"],["path"],["vec",[R[49]]],[R[49]]],[[R[49]],["vec",[R[49]]]]]],[11,R[93],E,R[94],3,[[["self"],["path"]],[["vec",[R[83]]],[R[83]]]]],[11,R[95],E,R[96],3,[[["self"],["path"]],[R[33]]]],[11,R[97],E,R[98],3,[[["self"],["path"],["vec",[R[49]]],[R[49]]],[[R[49]],["vec",[R[49]]]]]],[11,R[99],E,R[100],3,[[["self"],["path"],["vec",[R[49]]],[R[49]]],[[R[49]],["vec",[R[49]]]]]],[11,R[101],E,R[102],3,[[["self"],["path"]],[["vec",[R[83]]],[R[83]]]]],[11,R[103],E,R[104],3,[[["self"],["path"]],[R[25]]]]],"p":[[3,R[105]],[3,R[106]],[3,R[107]],[8,"Language"],[3,R[108]]]};
searchIndex["task_maker_store"]={"doc":"This crate manages the file store on disk, a folder with…","i":[[3,R[16],"task_maker_store","Struct implementing the Iterator trait which will iterate…",N,N],[3,R[18],E,"A file store will manage all the files in the store…",N,N],[3,R[17],E,"Handle of a file in the FileStore, this must be computable…",N,N],[4,R[15],E,"Errors generated by the FileStore",N,N],[13,"InvalidPath",E,"An invalid path is provided.",0,N],[13,"NotFound",E,"The file is not present in the store.",0,N],[11,"new",E,"Make a new iterator reading the file at that path",1,[[["asref",["path"]],["path"]],[[R[3]],[R[1],[R[0],R[3]]],[R[0]]]]],[11,"from_file",E,"Make the key related to the specified file.",2,[[["asref",["path"]],["path"]],[[R[2]],[R[1],[R[2],R[3]]],[R[3]]]]],[11,"new",E,"Make a new FileStore in the specified base directory, will…",3,[[["asref",["path"]],["path"]],[[R[4]],[R[3]],[R[1],[R[4],R[3]]]]]],[11,"store",E,"Given an iterator of `Vec<u8>` consume all of it writing…",3,[[["self"],[R[2]],["i"]],[[R[1],[R[3]]],[R[3]]]]],[11,"get",E,"Returns the path of the file with that key or `None` if…",3,[[["self"],[R[2]]],[[R[3]],[R[5],[R[25]]],[R[1],[R[5],R[3]]]]]],[11,"has_key",E,"Checks if the store has that key inside.",3,[[["self"],[R[2]]],["bool"]]],[11,"persist",E,"Mark the file as persistent. Being persistent means that…",3,[[["self"],[R[2]]],[[R[1],[R[3]]],[R[3]]]]],[11,"flush",E,"Write the FileStore data to disk. Some internal structures…",3,[[["self"]],[[R[1],[R[3]]],[R[3]]]]],[11,R[80],E,E,1,[[],["i"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[6],E,E,1,[[[U]],[R[1]]]],[11,R[7],E,E,1,[[],[R[1]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[R[31]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[6],E,E,3,[[[U]],[R[1]]]],[11,R[7],E,E,3,[[],[R[1]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[R[31]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[30],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[11],E,E,2,[[["self"]],[R[49]]]],[11,R[6],E,E,2,[[[U]],[R[1]]]],[11,R[7],E,E,2,[[],[R[1]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[R[31]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[["self"]],[R[49]]]],[11,R[6],E,E,0,[[[U]],[R[1]]]],[11,R[7],E,E,0,[[],[R[1]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[R[31]]]],[11,"as_fail",E,E,0,[[["self"]],["fail"]]],[11,"clone",E,E,2,[[["self"]],[R[2]]]],[11,R[50],E,E,2,[[["self"],[R[2]]],[[R[5],[R[12]]],[R[12]]]]],[11,"lt",E,E,2,[[["self"],[R[2]]],["bool"]]],[11,"le",E,E,2,[[["self"],[R[2]]],["bool"]]],[11,"gt",E,E,2,[[["self"],[R[2]]],["bool"]]],[11,"ge",E,E,2,[[["self"],[R[2]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[2]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[2]]],["bool"]]],[11,"next",E,E,1,[[["self"]],[R[5]]]],[11,R[11],E,E,2,[[["self"]],[R[49]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[1]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[[R[3]],[R[1],[R[3]]]]]],[11,R[34],E,E,2,[[["self"],["__s"]],[R[1]]]],[11,R[35],E,E,2,[[["__d"]],[R[1]]]],[11,"name",E,E,0,[[["self"]],[[R[5],["str"]],["str"]]]],[11,"cause",E,E,0,[[["self"]],[[R[5],["fail"]],["fail"]]]],[11,R[14],E,E,0,[[["self"]],[[R[14]],[R[5],[R[14]]]]]]],"p":[[4,R[15]],[3,R[16]],[3,R[17]],[3,R[18]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);