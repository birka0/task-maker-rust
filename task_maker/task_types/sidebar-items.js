initSidebarItems({"mod":[["ioi",""]],"struct":[["CheckerResult","The result of the checking process"],["StaticFileProvider","A generator/solution that will simply use a static file"],["WhiteDiffChecker","A checker that compares the output files ignoring the whitespaces"]],"trait":[["Checker","A trait that describes what is a checker: something that given an input file, an optional correct output file and the contestant's output file computes a score (and eventually message) for that testcase."],["EvaluationOptions","The options for an evaluation"],["Generator","A trait that describes what is a generator: something that knowing which testcase produces an input file"],["Solution","A trait that describes what is a solution: something that given an input file produces an output file. An extra parameter `validation` is supplied to make sure that the validation (if any) comes before."],["SubtaskInfo","Some basic information about a subtask"],["Task","Trait that describes a generic task. Every task must have a generator (a way of getting testcases) and can have a validator, an official solution, but has to have a checker that assigns a score to a solution."],["TaskFormat","A task format is a way of laying files in a task folder, every task folder contains a single task which type can be different even for the same format. For example in a IOI-like format there could be a Batch task, a Communication task, ..."],["TaskUIInterface","An interface between a Task type and the UI. Each task type may send different information to the UI based on the number of the testcase."],["TestcaseInfo","Some basic information about a testcase."],["Validator","A trait that describes what is a validator: something that known which testcase and given that input file checks if it respects all constraints."]]});